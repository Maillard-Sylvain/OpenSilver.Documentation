### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  commentId: T:System.ComponentModel.AsyncCompletedEventArgs
  id: AsyncCompletedEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  - System.ComponentModel.AsyncCompletedEventArgs.Error
  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  - System.ComponentModel.AsyncCompletedEventArgs.UserState
  langs:
  - csharp
  - vb
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ComponentModel/AsyncCompletedEventArgs.cs
    id: AsyncCompletedEventArgs
    path: src/System.ComponentModel/AsyncCompletedEventArgs.cs
    startLine: 28
  assemblies:
  - CSHTML5.Runtime
  namespace: System.ComponentModel
  syntax:
    content: 'public class AsyncCompletedEventArgs : EventArgs'
    content.vb: >-
      Public Class AsyncCompletedEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  derivedClasses:
  - System.ServiceModel.CSHTML5_ClientBase`1.InvokeAsyncCompletedEventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  id: '#ctor(System.Exception,System.Boolean,System.Object)'
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: AsyncCompletedEventArgs(Exception, Boolean, Object)
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception, Boolean, Object)
  fullName: System.ComponentModel.AsyncCompletedEventArgs.AsyncCompletedEventArgs(System.Exception, System.Boolean, System.Object)
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ComponentModel/AsyncCompletedEventArgs.cs
    id: .ctor
    path: src/System.ComponentModel/AsyncCompletedEventArgs.cs
    startLine: 30
  assemblies:
  - CSHTML5.Runtime
  namespace: System.ComponentModel
  syntax:
    content: public AsyncCompletedEventArgs(Exception error, bool cancelled, object userState)
    parameters:
    - id: error
      type: System.Exception
    - id: cancelled
      type: System.Boolean
    - id: userState
      type: System.Object
    content.vb: Public Sub New(error As Exception, cancelled As Boolean, userState As Object)
  overload: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  id: Cancelled
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ComponentModel/AsyncCompletedEventArgs.cs
    id: Cancelled
    path: src/System.ComponentModel/AsyncCompletedEventArgs.cs
    startLine: 37
  assemblies:
  - CSHTML5.Runtime
  namespace: System.ComponentModel
  syntax:
    content: public bool Cancelled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Cancelled As Boolean
  overload: System.ComponentModel.AsyncCompletedEventArgs.Cancelled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Error
  id: Error
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ComponentModel/AsyncCompletedEventArgs.cs
    id: Error
    path: src/System.ComponentModel/AsyncCompletedEventArgs.cs
    startLine: 41
  assemblies:
  - CSHTML5.Runtime
  namespace: System.ComponentModel
  syntax:
    content: public Exception Error { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Error As Exception
  overload: System.ComponentModel.AsyncCompletedEventArgs.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.UserState
  id: UserState
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: System.ComponentModel.AsyncCompletedEventArgs.UserState
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ComponentModel/AsyncCompletedEventArgs.cs
    id: UserState
    path: src/System.ComponentModel/AsyncCompletedEventArgs.cs
    startLine: 44
  assemblies:
  - CSHTML5.Runtime
  namespace: System.ComponentModel
  syntax:
    content: public object UserState { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property UserState As Object
  overload: System.ComponentModel.AsyncCompletedEventArgs.UserState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  id: RaiseExceptionIfNecessary
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: RaiseExceptionIfNecessary()
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ComponentModel/AsyncCompletedEventArgs.cs
    id: RaiseExceptionIfNecessary
    path: src/System.ComponentModel/AsyncCompletedEventArgs.cs
    startLine: 46
  assemblies:
  - CSHTML5.Runtime
  namespace: System.ComponentModel
  syntax:
    content: protected void RaiseExceptionIfNecessary()
    content.vb: Protected Sub RaiseExceptionIfNecessary
  overload: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  commentId: Overload:System.ComponentModel.AsyncCompletedEventArgs.#ctor
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs.AsyncCompletedEventArgs
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled*
  commentId: Overload:System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error*
  commentId: Overload:System.ComponentModel.AsyncCompletedEventArgs.Error
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState*
  commentId: Overload:System.ComponentModel.AsyncCompletedEventArgs.UserState
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: System.ComponentModel.AsyncCompletedEventArgs.UserState
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary*
  commentId: Overload:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  name: RaiseExceptionIfNecessary
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
