### YamlMime:ManagedReference
items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFile
  id: IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  - System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  langs:
  - csharp
  - vb
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: IsolatedStorageFile
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 28
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: 'public class IsolatedStorageFile : IDisposable'
    content.vb: >-
      Public Class IsolatedStorageFile

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  id: GetUserStoreForAssembly
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetUserStoreForAssembly()
  nameWithType: IsolatedStorageFile.GetUserStoreForAssembly()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: GetUserStoreForAssembly
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 31
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public static IsolatedStorageFile GetUserStoreForAssembly()
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
    content.vb: Public Shared Function GetUserStoreForAssembly As IsolatedStorageFile
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  id: CreateFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CreateFile(String)
  nameWithType: IsolatedStorageFile.CreateFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: CreateFile
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 36
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public IsolatedStorageFileStream CreateFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
    content.vb: Public Function CreateFile(fileName As String) As IsolatedStorageFileStream
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  nameWithType: IsolatedStorageFile.DeleteFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: DeleteFile
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 41
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public void DeleteFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: Public Sub DeleteFile(fileName As String)
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  id: FileExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: FileExists(String)
  nameWithType: IsolatedStorageFile.FileExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: FileExists
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 47
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public bool FileExists(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function FileExists(fileName As String) As Boolean
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  id: OpenFile(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode)
  nameWithType: IsolatedStorageFile.OpenFile(String, FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: OpenFile
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 53
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string fileName, FileMode fileMode)
    parameters:
    - id: fileName
      type: System.String
    - id: fileMode
      type: System.IO.FileMode
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
    content.vb: Public Function OpenFile(fileName As String, fileMode As FileMode) As IsolatedStorageFileStream
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  id: Dispose
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: IsolatedStorageFile.Dispose()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    id: Dispose
    path: src/System.IO.IsolatedStorage/IsolatedStorageFile.cs
    startLine: 58
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.IsolatedStorage
  commentId: N:System.IO.IsolatedStorage
  name: System.IO.IsolatedStorage
  nameWithType: System.IO.IsolatedStorage
  fullName: System.IO.IsolatedStorage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly*
  commentId: Overload:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  name: GetUserStoreForAssembly
  nameWithType: IsolatedStorageFile.GetUserStoreForAssembly
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile*
  commentId: Overload:System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile
  name: CreateFile
  nameWithType: IsolatedStorageFile.CreateFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile*
  commentId: Overload:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile
  name: DeleteFile
  nameWithType: IsolatedStorageFile.DeleteFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists*
  commentId: Overload:System.IO.IsolatedStorage.IsolatedStorageFile.FileExists
  name: FileExists
  nameWithType: IsolatedStorageFile.FileExists
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile*
  commentId: Overload:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile
  name: OpenFile
  nameWithType: IsolatedStorageFile.OpenFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile
- uid: System.IO.FileMode
  commentId: T:System.IO.FileMode
  parent: System.IO
  isExternal: true
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO
  commentId: N:System.IO
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose*
  commentId: Overload:System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  name: Dispose
  nameWithType: IsolatedStorageFile.Dispose
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
