### YamlMime:ManagedReference
items:
- uid: System.IO.Path
  commentId: T:System.IO.Path
  id: Path
  parent: System.IO
  children:
  - System.IO.Path.AltDirectorySeparatorChar
  - System.IO.Path.DirectorySeparatorChar
  - System.IO.Path.GetDirectoryName(System.String)
  - System.IO.Path.GetFileName(System.String)
  - System.IO.Path.VolumeSeparatorChar
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Path
  fullName: System.IO.Path
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/ToBeReviewed/WORKINPROGRESS/Path.cs
    id: Path
    path: src/ToBeReviewed/WORKINPROGRESS/Path.cs
    startLine: 21
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO
  syntax:
    content: public static class Path
    content.vb: Public Module Path
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.IO.Path.DirectorySeparatorChar
  commentId: F:System.IO.Path.DirectorySeparatorChar
  id: DirectorySeparatorChar
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: DirectorySeparatorChar
  nameWithType: Path.DirectorySeparatorChar
  fullName: System.IO.Path.DirectorySeparatorChar
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/ToBeReviewed/WORKINPROGRESS/Path.cs
    id: DirectorySeparatorChar
    path: src/ToBeReviewed/WORKINPROGRESS/Path.cs
    startLine: 23
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO
  syntax:
    content: public static readonly char DirectorySeparatorChar
    return:
      type: System.Char
    content.vb: Public Shared ReadOnly DirectorySeparatorChar As Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.AltDirectorySeparatorChar
  commentId: F:System.IO.Path.AltDirectorySeparatorChar
  id: AltDirectorySeparatorChar
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: AltDirectorySeparatorChar
  nameWithType: Path.AltDirectorySeparatorChar
  fullName: System.IO.Path.AltDirectorySeparatorChar
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/ToBeReviewed/WORKINPROGRESS/Path.cs
    id: AltDirectorySeparatorChar
    path: src/ToBeReviewed/WORKINPROGRESS/Path.cs
    startLine: 26
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO
  syntax:
    content: public static readonly char AltDirectorySeparatorChar
    return:
      type: System.Char
    content.vb: Public Shared ReadOnly AltDirectorySeparatorChar As Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.VolumeSeparatorChar
  commentId: F:System.IO.Path.VolumeSeparatorChar
  id: VolumeSeparatorChar
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: VolumeSeparatorChar
  nameWithType: Path.VolumeSeparatorChar
  fullName: System.IO.Path.VolumeSeparatorChar
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/ToBeReviewed/WORKINPROGRESS/Path.cs
    id: VolumeSeparatorChar
    path: src/ToBeReviewed/WORKINPROGRESS/Path.cs
    startLine: 28
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO
  syntax:
    content: public static readonly char VolumeSeparatorChar
    return:
      type: System.Char
    content.vb: Public Shared ReadOnly VolumeSeparatorChar As Char
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Path.GetDirectoryName(System.String)
  commentId: M:System.IO.Path.GetDirectoryName(System.String)
  id: GetDirectoryName(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetDirectoryName(String)
  nameWithType: Path.GetDirectoryName(String)
  fullName: System.IO.Path.GetDirectoryName(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/ToBeReviewed/WORKINPROGRESS/Path.cs
    id: GetDirectoryName
    path: src/ToBeReviewed/WORKINPROGRESS/Path.cs
    startLine: 30
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO
  syntax:
    content: public static string GetDirectoryName(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetDirectoryName(path As String) As String
  overload: System.IO.Path.GetDirectoryName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Path.GetFileName(System.String)
  commentId: M:System.IO.Path.GetFileName(System.String)
  id: GetFileName(System.String)
  parent: System.IO.Path
  langs:
  - csharp
  - vb
  name: GetFileName(String)
  nameWithType: Path.GetFileName(String)
  fullName: System.IO.Path.GetFileName(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/ToBeReviewed/WORKINPROGRESS/Path.cs
    id: GetFileName
    path: src/ToBeReviewed/WORKINPROGRESS/Path.cs
    startLine: 48
  assemblies:
  - CSHTML5.Runtime
  namespace: System.IO
  syntax:
    content: public static string GetFileName(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetFileName(path As String) As String
  overload: System.IO.Path.GetFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO
  commentId: N:System.IO
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.IO.Path.GetDirectoryName*
  commentId: Overload:System.IO.Path.GetDirectoryName
  name: GetDirectoryName
  nameWithType: Path.GetDirectoryName
  fullName: System.IO.Path.GetDirectoryName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Path.GetFileName*
  commentId: Overload:System.IO.Path.GetFileName
  name: GetFileName
  nameWithType: Path.GetFileName
  fullName: System.IO.Path.GetFileName
