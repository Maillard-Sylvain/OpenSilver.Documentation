### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.OperationDescription
  commentId: T:System.ServiceModel.Description.OperationDescription
  id: OperationDescription
  parent: System.ServiceModel.Description
  children:
  - System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)
  - System.ServiceModel.Description.OperationDescription.BeginMethod
  - System.ServiceModel.Description.OperationDescription.Behaviors
  - System.ServiceModel.Description.OperationDescription.DeclaringContract
  - System.ServiceModel.Description.OperationDescription.EndMethod
  - System.ServiceModel.Description.OperationDescription.Faults
  - System.ServiceModel.Description.OperationDescription.IsOneWay
  - System.ServiceModel.Description.OperationDescription.KnownTypes
  - System.ServiceModel.Description.OperationDescription.Messages
  - System.ServiceModel.Description.OperationDescription.Name
  - System.ServiceModel.Description.OperationDescription.SyncMethod
  langs:
  - csharp
  - vb
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: OperationDescription
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 10
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public class OperationDescription
    content.vb: Public Class OperationDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)
  commentId: M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)
  id: '#ctor(System.String,System.ServiceModel.Description.ContractDescription)'
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: OperationDescription(String, ContractDescription)
  nameWithType: OperationDescription.OperationDescription(String, ContractDescription)
  fullName: System.ServiceModel.Description.OperationDescription.OperationDescription(System.String, System.ServiceModel.Description.ContractDescription)
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: .ctor
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 32
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public OperationDescription(string name, ContractDescription declaringContract)
    parameters:
    - id: name
      type: System.String
    - id: declaringContract
      type: System.ServiceModel.Description.ContractDescription
    content.vb: Public Sub New(name As String, declaringContract As ContractDescription)
  overload: System.ServiceModel.Description.OperationDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.OperationDescription.BeginMethod
  commentId: P:System.ServiceModel.Description.OperationDescription.BeginMethod
  id: BeginMethod
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: BeginMethod
  nameWithType: OperationDescription.BeginMethod
  fullName: System.ServiceModel.Description.OperationDescription.BeginMethod
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: BeginMethod
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 44
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public MethodInfo BeginMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property BeginMethod As MethodInfo
  overload: System.ServiceModel.Description.OperationDescription.BeginMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.OperationDescription.Behaviors
  commentId: P:System.ServiceModel.Description.OperationDescription.Behaviors
  id: Behaviors
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Behaviors
  nameWithType: OperationDescription.Behaviors
  fullName: System.ServiceModel.Description.OperationDescription.Behaviors
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: Behaviors
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 52
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public KeyedByTypeCollection<IOperationBehavior> Behaviors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IOperationBehavior}
    content.vb: Public ReadOnly Property Behaviors As KeyedByTypeCollection(Of IOperationBehavior)
  overload: System.ServiceModel.Description.OperationDescription.Behaviors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.DeclaringContract
  commentId: P:System.ServiceModel.Description.OperationDescription.DeclaringContract
  id: DeclaringContract
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: DeclaringContract
  nameWithType: OperationDescription.DeclaringContract
  fullName: System.ServiceModel.Description.OperationDescription.DeclaringContract
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: DeclaringContract
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 63
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public ContractDescription DeclaringContract { get; set; }
    parameters: []
    return:
      type: System.ServiceModel.Description.ContractDescription
    content.vb: Public Property DeclaringContract As ContractDescription
  overload: System.ServiceModel.Description.OperationDescription.DeclaringContract*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.OperationDescription.EndMethod
  commentId: P:System.ServiceModel.Description.OperationDescription.EndMethod
  id: EndMethod
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: EndMethod
  nameWithType: OperationDescription.EndMethod
  fullName: System.ServiceModel.Description.OperationDescription.EndMethod
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: EndMethod
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 71
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public MethodInfo EndMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property EndMethod As MethodInfo
  overload: System.ServiceModel.Description.OperationDescription.EndMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.OperationDescription.Faults
  commentId: P:System.ServiceModel.Description.OperationDescription.Faults
  id: Faults
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Faults
  nameWithType: OperationDescription.Faults
  fullName: System.ServiceModel.Description.OperationDescription.Faults
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: Faults
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 80
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public FaultDescriptionCollection Faults { get; }
    parameters: []
    return:
      type: System.ServiceModel.Description.FaultDescriptionCollection
    content.vb: Public ReadOnly Property Faults As FaultDescriptionCollection
  overload: System.ServiceModel.Description.OperationDescription.Faults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.IsOneWay
  commentId: P:System.ServiceModel.Description.OperationDescription.IsOneWay
  id: IsOneWay
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: IsOneWay
  nameWithType: OperationDescription.IsOneWay
  fullName: System.ServiceModel.Description.OperationDescription.IsOneWay
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: IsOneWay
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 88
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public bool IsOneWay { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOneWay As Boolean
  overload: System.ServiceModel.Description.OperationDescription.IsOneWay*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.KnownTypes
  commentId: P:System.ServiceModel.Description.OperationDescription.KnownTypes
  id: KnownTypes
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: OperationDescription.KnownTypes
  fullName: System.ServiceModel.Description.OperationDescription.KnownTypes
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: KnownTypes
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 95
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public Collection<Type> KnownTypes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
    content.vb: Public ReadOnly Property KnownTypes As Collection(Of Type)
  overload: System.ServiceModel.Description.OperationDescription.KnownTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.Messages
  commentId: P:System.ServiceModel.Description.OperationDescription.Messages
  id: Messages
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: OperationDescription.Messages
  fullName: System.ServiceModel.Description.OperationDescription.Messages
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: Messages
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 103
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public MessageDescriptionCollection Messages { get; }
    parameters: []
    return:
      type: System.ServiceModel.Description.MessageDescriptionCollection
    content.vb: Public ReadOnly Property Messages As MessageDescriptionCollection
  overload: System.ServiceModel.Description.OperationDescription.Messages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.Name
  commentId: P:System.ServiceModel.Description.OperationDescription.Name
  id: Name
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OperationDescription.Name
  fullName: System.ServiceModel.Description.OperationDescription.Name
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: Name
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 110
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: System.ServiceModel.Description.OperationDescription.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.SyncMethod
  commentId: P:System.ServiceModel.Description.OperationDescription.SyncMethod
  id: SyncMethod
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: SyncMethod
  nameWithType: OperationDescription.SyncMethod
  fullName: System.ServiceModel.Description.OperationDescription.SyncMethod
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.ServiceModel.Description/OperationDescription.cs
    id: SyncMethod
    path: src/System.ServiceModel.Description/OperationDescription.cs
    startLine: 118
  assemblies:
  - OpenSilver.Runtime
  namespace: System.ServiceModel.Description
  syntax:
    content: public MethodInfo SyncMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property SyncMethod As MethodInfo
  overload: System.ServiceModel.Description.OperationDescription.SyncMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  name: System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ServiceModel.Description.OperationDescription.#ctor*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.#ctor
  name: OperationDescription
  nameWithType: OperationDescription.OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription.OperationDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.ContractDescription
  commentId: T:System.ServiceModel.Description.ContractDescription
  parent: System.ServiceModel.Description
  isExternal: true
  name: ContractDescription
  nameWithType: ContractDescription
  fullName: System.ServiceModel.Description.ContractDescription
- uid: System.ServiceModel.Description.OperationDescription.BeginMethod*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.BeginMethod
  name: BeginMethod
  nameWithType: OperationDescription.BeginMethod
  fullName: System.ServiceModel.Description.OperationDescription.BeginMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.ServiceModel.Description.OperationDescription.Behaviors*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.Behaviors
  name: Behaviors
  nameWithType: OperationDescription.Behaviors
  fullName: System.ServiceModel.Description.OperationDescription.Behaviors
- uid: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IOperationBehavior}
  commentId: T:System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IOperationBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyedByTypeCollection`1
  name: KeyedByTypeCollection<IOperationBehavior>
  nameWithType: KeyedByTypeCollection<IOperationBehavior>
  fullName: System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IOperationBehavior>
  nameWithType.vb: KeyedByTypeCollection(Of IOperationBehavior)
  fullName.vb: System.Collections.Generic.KeyedByTypeCollection(Of System.ServiceModel.Description.IOperationBehavior)
  name.vb: KeyedByTypeCollection(Of IOperationBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: System.Collections.Generic.KeyedByTypeCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.IOperationBehavior
    name: IOperationBehavior
    nameWithType: IOperationBehavior
    fullName: System.ServiceModel.Description.IOperationBehavior
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: System.Collections.Generic.KeyedByTypeCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Description.IOperationBehavior
    name: IOperationBehavior
    nameWithType: IOperationBehavior
    fullName: System.ServiceModel.Description.IOperationBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyedByTypeCollection`1
  commentId: T:System.Collections.Generic.KeyedByTypeCollection`1
  isExternal: true
  name: KeyedByTypeCollection<TItem>
  nameWithType: KeyedByTypeCollection<TItem>
  fullName: System.Collections.Generic.KeyedByTypeCollection<TItem>
  nameWithType.vb: KeyedByTypeCollection(Of TItem)
  fullName.vb: System.Collections.Generic.KeyedByTypeCollection(Of TItem)
  name.vb: KeyedByTypeCollection(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: System.Collections.Generic.KeyedByTypeCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: System.Collections.Generic.KeyedByTypeCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ServiceModel.Description.OperationDescription.DeclaringContract*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.DeclaringContract
  name: DeclaringContract
  nameWithType: OperationDescription.DeclaringContract
  fullName: System.ServiceModel.Description.OperationDescription.DeclaringContract
- uid: System.ServiceModel.Description.OperationDescription.EndMethod*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.EndMethod
  name: EndMethod
  nameWithType: OperationDescription.EndMethod
  fullName: System.ServiceModel.Description.OperationDescription.EndMethod
- uid: System.ServiceModel.Description.OperationDescription.Faults*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.Faults
  name: Faults
  nameWithType: OperationDescription.Faults
  fullName: System.ServiceModel.Description.OperationDescription.Faults
- uid: System.ServiceModel.Description.FaultDescriptionCollection
  commentId: T:System.ServiceModel.Description.FaultDescriptionCollection
  parent: System.ServiceModel.Description
  isExternal: true
  name: FaultDescriptionCollection
  nameWithType: FaultDescriptionCollection
  fullName: System.ServiceModel.Description.FaultDescriptionCollection
- uid: System.ServiceModel.Description.OperationDescription.IsOneWay*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.IsOneWay
  name: IsOneWay
  nameWithType: OperationDescription.IsOneWay
  fullName: System.ServiceModel.Description.OperationDescription.IsOneWay
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.OperationDescription.KnownTypes*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.KnownTypes
  name: KnownTypes
  nameWithType: OperationDescription.KnownTypes
  fullName: System.ServiceModel.Description.OperationDescription.KnownTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  commentId: T:System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  nameWithType.vb: Collection(Of Type)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Type)
  name.vb: Collection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.ServiceModel.Description.OperationDescription.Messages*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.Messages
  name: Messages
  nameWithType: OperationDescription.Messages
  fullName: System.ServiceModel.Description.OperationDescription.Messages
- uid: System.ServiceModel.Description.MessageDescriptionCollection
  commentId: T:System.ServiceModel.Description.MessageDescriptionCollection
  parent: System.ServiceModel.Description
  isExternal: true
  name: MessageDescriptionCollection
  nameWithType: MessageDescriptionCollection
  fullName: System.ServiceModel.Description.MessageDescriptionCollection
- uid: System.ServiceModel.Description.OperationDescription.Name*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.Name
  name: Name
  nameWithType: OperationDescription.Name
  fullName: System.ServiceModel.Description.OperationDescription.Name
- uid: System.ServiceModel.Description.OperationDescription.SyncMethod*
  commentId: Overload:System.ServiceModel.Description.OperationDescription.SyncMethod
  name: SyncMethod
  nameWithType: OperationDescription.SyncMethod
  fullName: System.ServiceModel.Description.OperationDescription.SyncMethod
