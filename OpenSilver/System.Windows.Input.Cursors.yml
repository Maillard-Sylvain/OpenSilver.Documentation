### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Cursors
  commentId: T:System.Windows.Input.Cursors
  id: Cursors
  parent: System.Windows.Input
  children:
  - System.Windows.Input.Cursors.AppStarting
  - System.Windows.Input.Cursors.Arrow
  - System.Windows.Input.Cursors.Cross
  - System.Windows.Input.Cursors.Hand
  - System.Windows.Input.Cursors.Help
  - System.Windows.Input.Cursors.IBeam
  - System.Windows.Input.Cursors.No
  - System.Windows.Input.Cursors.None
  - System.Windows.Input.Cursors.SizeAll
  - System.Windows.Input.Cursors.SizeNESW
  - System.Windows.Input.Cursors.SizeNS
  - System.Windows.Input.Cursors.SizeNWSE
  - System.Windows.Input.Cursors.SizeWE
  - System.Windows.Input.Cursors.Wait
  langs:
  - csharp
  - vb
  name: Cursors
  nameWithType: Cursors
  fullName: System.Windows.Input.Cursors
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: Cursors
    path: src/System.Windows.input/Cursors.cs
    startLine: 26
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nDefines a set of default cursors.\n"
  example: []
  syntax:
    content: public static class Cursors
    content.vb: Public Module Cursors
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Input.Cursors.AppStarting
  commentId: P:System.Windows.Input.Cursors.AppStarting
  id: AppStarting
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: AppStarting
  nameWithType: Cursors.AppStarting
  fullName: System.Windows.Input.Cursors.AppStarting
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: AppStarting
    path: src/System.Windows.input/Cursors.cs
    startLine: 102
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets the System.Windows.Input.Cursor that appears when an application is\nstarting.\n"
  example: []
  syntax:
    content: public static Cursor AppStarting { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property AppStarting As Cursor
  overload: System.Windows.Input.Cursors.AppStarting*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.Arrow
  commentId: P:System.Windows.Input.Cursors.Arrow
  id: Arrow
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: Arrow
  nameWithType: Cursors.Arrow
  fullName: System.Windows.Input.Cursors.Arrow
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: Arrow
    path: src/System.Windows.input/Cursors.cs
    startLine: 115
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets the Arrow System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor Arrow { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property Arrow As Cursor
  overload: System.Windows.Input.Cursors.Arrow*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.Cross
  commentId: P:System.Windows.Input.Cursors.Cross
  id: Cross
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: Cross
  nameWithType: Cursors.Cross
  fullName: System.Windows.Input.Cursors.Cross
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: Cross
    path: src/System.Windows.input/Cursors.cs
    startLine: 133
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets the crosshair System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor Cross { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property Cross As Cursor
  overload: System.Windows.Input.Cursors.Cross*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.Hand
  commentId: P:System.Windows.Input.Cursors.Hand
  id: Hand
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: Hand
  nameWithType: Cursors.Hand
  fullName: System.Windows.Input.Cursors.Hand
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: Hand
    path: src/System.Windows.input/Cursors.cs
    startLine: 146
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a hand System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor Hand { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property Hand As Cursor
  overload: System.Windows.Input.Cursors.Hand*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.Help
  commentId: P:System.Windows.Input.Cursors.Help
  id: Help
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: Cursors.Help
  fullName: System.Windows.Input.Cursors.Help
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: Help
    path: src/System.Windows.input/Cursors.cs
    startLine: 160
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a help System.Windows.Input.Cursor which is a combination of an arrow\nand a question mark.\n"
  example: []
  syntax:
    content: public static Cursor Help { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property Help As Cursor
  overload: System.Windows.Input.Cursors.Help*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.IBeam
  commentId: P:System.Windows.Input.Cursors.IBeam
  id: IBeam
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: IBeam
  nameWithType: Cursors.IBeam
  fullName: System.Windows.Input.Cursors.IBeam
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: IBeam
    path: src/System.Windows.input/Cursors.cs
    startLine: 174
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets an I-beam System.Windows.Input.Cursor, which is used to show where the\ntext cursor appears when the mouse is clicked.\n"
  example: []
  syntax:
    content: public static Cursor IBeam { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property IBeam As Cursor
  overload: System.Windows.Input.Cursors.IBeam*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.No
  commentId: P:System.Windows.Input.Cursors.No
  id: No
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: No
  nameWithType: Cursors.No
  fullName: System.Windows.Input.Cursors.No
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: No
    path: src/System.Windows.input/Cursors.cs
    startLine: 188
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a System.Windows.Input.Cursor with which indicates that a particular\nregion is invalid for a given operation.\n"
  example: []
  syntax:
    content: public static Cursor No { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property No As Cursor
  overload: System.Windows.Input.Cursors.No*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.None
  commentId: P:System.Windows.Input.Cursors.None
  id: None
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: None
  nameWithType: Cursors.None
  fullName: System.Windows.Input.Cursors.None
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: None
    path: src/System.Windows.input/Cursors.cs
    startLine: 201
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a special cursor that is invisible.\n"
  example: []
  syntax:
    content: public static Cursor None { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property None As Cursor
  overload: System.Windows.Input.Cursors.None*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.SizeAll
  commentId: P:System.Windows.Input.Cursors.SizeAll
  id: SizeAll
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: SizeAll
  nameWithType: Cursors.SizeAll
  fullName: System.Windows.Input.Cursors.SizeAll
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: SizeAll
    path: src/System.Windows.input/Cursors.cs
    startLine: 275
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a four-headed sizing System.Windows.Input.Cursor, which consists of\nfour joined arrows that point north, south, east, and west.\n"
  example: []
  syntax:
    content: public static Cursor SizeAll { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property SizeAll As Cursor
  overload: System.Windows.Input.Cursors.SizeAll*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.SizeNESW
  commentId: P:System.Windows.Input.Cursors.SizeNESW
  id: SizeNESW
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: SizeNESW
  nameWithType: Cursors.SizeNESW
  fullName: System.Windows.Input.Cursors.SizeNESW
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: SizeNESW
    path: src/System.Windows.input/Cursors.cs
    startLine: 288
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a two-headed northeast/southwest sizing System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor SizeNESW { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property SizeNESW As Cursor
  overload: System.Windows.Input.Cursors.SizeNESW*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.SizeNS
  commentId: P:System.Windows.Input.Cursors.SizeNS
  id: SizeNS
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: SizeNS
  nameWithType: Cursors.SizeNS
  fullName: System.Windows.Input.Cursors.SizeNS
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: SizeNS
    path: src/System.Windows.input/Cursors.cs
    startLine: 301
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a two-headed north/south sizing System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor SizeNS { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property SizeNS As Cursor
  overload: System.Windows.Input.Cursors.SizeNS*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.SizeNWSE
  commentId: P:System.Windows.Input.Cursors.SizeNWSE
  id: SizeNWSE
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: SizeNWSE
  nameWithType: Cursors.SizeNWSE
  fullName: System.Windows.Input.Cursors.SizeNWSE
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: SizeNWSE
    path: src/System.Windows.input/Cursors.cs
    startLine: 314
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a two-headed northwest/southeast sizing System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor SizeNWSE { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property SizeNWSE As Cursor
  overload: System.Windows.Input.Cursors.SizeNWSE*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.SizeWE
  commentId: P:System.Windows.Input.Cursors.SizeWE
  id: SizeWE
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: SizeWE
  nameWithType: Cursors.SizeWE
  fullName: System.Windows.Input.Cursors.SizeWE
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: SizeWE
    path: src/System.Windows.input/Cursors.cs
    startLine: 327
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nGets a two-headed west/east sizing System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor SizeWE { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property SizeWE As Cursor
  overload: System.Windows.Input.Cursors.SizeWE*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Input.Cursors.Wait
  commentId: P:System.Windows.Input.Cursors.Wait
  id: Wait
  parent: System.Windows.Input.Cursors
  langs:
  - csharp
  - vb
  name: Wait
  nameWithType: Cursors.Wait
  fullName: System.Windows.Input.Cursors.Wait
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/Cursors.cs
    id: Wait
    path: src/System.Windows.input/Cursors.cs
    startLine: 346
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Windows.Input
  summary: "\nSpecifies a wait (or hourglass) System.Windows.Input.Cursor.\n"
  example: []
  syntax:
    content: public static Cursor Wait { get; }
    parameters: []
    return:
      type: System.Windows.Input.Cursor
    content.vb: Public Shared ReadOnly Property Wait As Cursor
  overload: System.Windows.Input.Cursors.Wait*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input.Cursors.AppStarting*
  commentId: Overload:System.Windows.Input.Cursors.AppStarting
  name: AppStarting
  nameWithType: Cursors.AppStarting
  fullName: System.Windows.Input.Cursors.AppStarting
- uid: System.Windows.Input.Cursor
  commentId: T:System.Windows.Input.Cursor
  parent: System.Windows.Input
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Input.Cursor
- uid: System.Windows.Input.Cursors.Arrow*
  commentId: Overload:System.Windows.Input.Cursors.Arrow
  name: Arrow
  nameWithType: Cursors.Arrow
  fullName: System.Windows.Input.Cursors.Arrow
- uid: System.Windows.Input.Cursors.Cross*
  commentId: Overload:System.Windows.Input.Cursors.Cross
  name: Cross
  nameWithType: Cursors.Cross
  fullName: System.Windows.Input.Cursors.Cross
- uid: System.Windows.Input.Cursors.Hand*
  commentId: Overload:System.Windows.Input.Cursors.Hand
  name: Hand
  nameWithType: Cursors.Hand
  fullName: System.Windows.Input.Cursors.Hand
- uid: System.Windows.Input.Cursors.Help*
  commentId: Overload:System.Windows.Input.Cursors.Help
  name: Help
  nameWithType: Cursors.Help
  fullName: System.Windows.Input.Cursors.Help
- uid: System.Windows.Input.Cursors.IBeam*
  commentId: Overload:System.Windows.Input.Cursors.IBeam
  name: IBeam
  nameWithType: Cursors.IBeam
  fullName: System.Windows.Input.Cursors.IBeam
- uid: System.Windows.Input.Cursors.No*
  commentId: Overload:System.Windows.Input.Cursors.No
  name: No
  nameWithType: Cursors.No
  fullName: System.Windows.Input.Cursors.No
- uid: System.Windows.Input.Cursors.None*
  commentId: Overload:System.Windows.Input.Cursors.None
  name: None
  nameWithType: Cursors.None
  fullName: System.Windows.Input.Cursors.None
- uid: System.Windows.Input.Cursors.SizeAll*
  commentId: Overload:System.Windows.Input.Cursors.SizeAll
  name: SizeAll
  nameWithType: Cursors.SizeAll
  fullName: System.Windows.Input.Cursors.SizeAll
- uid: System.Windows.Input.Cursors.SizeNESW*
  commentId: Overload:System.Windows.Input.Cursors.SizeNESW
  name: SizeNESW
  nameWithType: Cursors.SizeNESW
  fullName: System.Windows.Input.Cursors.SizeNESW
- uid: System.Windows.Input.Cursors.SizeNS*
  commentId: Overload:System.Windows.Input.Cursors.SizeNS
  name: SizeNS
  nameWithType: Cursors.SizeNS
  fullName: System.Windows.Input.Cursors.SizeNS
- uid: System.Windows.Input.Cursors.SizeNWSE*
  commentId: Overload:System.Windows.Input.Cursors.SizeNWSE
  name: SizeNWSE
  nameWithType: Cursors.SizeNWSE
  fullName: System.Windows.Input.Cursors.SizeNWSE
- uid: System.Windows.Input.Cursors.SizeWE*
  commentId: Overload:System.Windows.Input.Cursors.SizeWE
  name: SizeWE
  nameWithType: Cursors.SizeWE
  fullName: System.Windows.Input.Cursors.SizeWE
- uid: System.Windows.Input.Cursors.Wait*
  commentId: Overload:System.Windows.Input.Cursors.Wait
  name: Wait
  nameWithType: Cursors.Wait
  fullName: System.Windows.Input.Cursors.Wait
