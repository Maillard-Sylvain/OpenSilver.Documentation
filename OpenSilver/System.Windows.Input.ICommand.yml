### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  id: ICommand
  parent: System.Windows.Input
  children:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  - System.Windows.Input.ICommand.CanExecuteChanged
  - System.Windows.Input.ICommand.Execute(System.Object)
  langs:
  - csharp
  - vb
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
  type: Interface
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/ICommand.cs
    id: ICommand
    path: src/System.Windows.input/ICommand.cs
    startLine: 30
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Windows.Input
  summary: "\nDefines a command.\n"
  example: []
  syntax:
    content: public interface ICommand
    content.vb: Public Interface ICommand
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/ICommand.cs
    id: CanExecuteChanged
    path: src/System.Windows.input/ICommand.cs
    startLine: 35
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Windows.Input
  summary: "\nOccurs when changes occur that affect whether or not the command should execute.\n"
  example: []
  syntax:
    content: event EventHandler CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Event CanExecuteChanged As EventHandler
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  - vb
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/ICommand.cs
    id: CanExecute
    path: src/System.Windows.input/ICommand.cs
    startLine: 46
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Windows.Input
  summary: "\nDefines the method that determines whether the command can execute in its\ncurrent state.\n"
  example: []
  syntax:
    content: bool CanExecute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: "\nData used by the command. If the command does not require data to be passed,\nthis object can be set to null.\n"
    return:
      type: System.Boolean
      description: true if this command can be executed; otherwise, false.
    content.vb: Function CanExecute(parameter As Object) As Boolean
  overload: System.Windows.Input.ICommand.CanExecute*
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  - vb
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Windows.input/ICommand.cs
    id: Execute
    path: src/System.Windows.input/ICommand.cs
    startLine: 55
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Windows.Input
  summary: "\nDefines the method to be called when the command is invoked.\n"
  example: []
  syntax:
    content: void Execute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: "\nData used by the command. If the command does not require data to be passed,\nthis object can be set to null.\n"
    content.vb: Sub Execute(parameter As Object)
  overload: System.Windows.Input.ICommand.Execute*
references:
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input.ICommand.CanExecute*
  commentId: Overload:System.Windows.Input.ICommand.CanExecute
  name: CanExecute
  nameWithType: ICommand.CanExecute
  fullName: System.Windows.Input.ICommand.CanExecute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.ICommand.Execute*
  commentId: Overload:System.Windows.Input.ICommand.Execute
  name: Execute
  nameWithType: ICommand.Execute
  fullName: System.Windows.Input.ICommand.Execute
