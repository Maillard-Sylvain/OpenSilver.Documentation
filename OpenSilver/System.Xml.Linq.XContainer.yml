### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XContainer
  commentId: T:System.Xml.Linq.XContainer
  id: XContainer
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XContainer.Add(System.Object)
  - System.Xml.Linq.XContainer.Descendants
  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Elements
  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.FirstNode
  - System.Xml.Linq.XContainer.Nodes
  langs:
  - csharp
  - vb
  name: XContainer
  nameWithType: XContainer
  fullName: System.Xml.Linq.XContainer
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: XContainer
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 30
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nRepresents a node that can contain other nodes.\n"
  example: []
  syntax:
    content: 'public abstract class XContainer : XNode'
    content.vb: >-
      Public MustInherit Class XContainer

          Inherits XNode
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  derivedClasses:
  - System.Xml.Linq.XDocument
  - System.Xml.Linq.XElement
  inheritedMembers:
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.Document
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.Linq.XContainer.Nodes
  commentId: M:System.Xml.Linq.XContainer.Nodes
  id: Nodes
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Nodes()
  nameWithType: XContainer.Nodes()
  fullName: System.Xml.Linq.XContainer.Nodes()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Nodes
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 44
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a collection of the child nodes of this element or document, in document\norder.\n"
  example: []
  syntax:
    content: public IEnumerable<XNode> Nodes()
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: "\nAn System.Collections.Generic.IEnumerable&lt;T> of System.Xml.Linq.XNode containing\nthe contents of this System.Xml.Linq.XContainer, in document order.\n"
    content.vb: Public Function Nodes As IEnumerable(Of XNode)
  overload: System.Xml.Linq.XContainer.Nodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XContainer.Add(System.Object)
  commentId: M:System.Xml.Linq.XContainer.Add(System.Object)
  id: Add(System.Object)
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: XContainer.Add(Object)
  fullName: System.Xml.Linq.XContainer.Add(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Add
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 69
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nAdds the specified content as children of this System.Xml.Linq.XContainer.\n"
  example: []
  syntax:
    content: public void Add(object content)
    parameters:
    - id: content
      type: System.Object
      description: "\nA content object containing simple content or a collection of content objects\nto be added.\n"
    content.vb: Public Sub Add(content As Object)
  overload: System.Xml.Linq.XContainer.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  id: Element(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Element(XName)
  nameWithType: XContainer.Element(XName)
  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Element
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 119
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nGets the first (in document order) child element with the specified System.Xml.Linq.XName.\n"
  example: []
  syntax:
    content: public XElement Element(XName name)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The System.Xml.Linq.XName to match.
    return:
      type: System.Xml.Linq.XElement
      description: "\nA System.Xml.Linq.XElement that matches the specified System.Xml.Linq.XName,\nor null.\n"
    content.vb: Public Function Element(name As XName) As XElement
  overload: System.Xml.Linq.XContainer.Element*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XContainer.Elements
  commentId: M:System.Xml.Linq.XContainer.Elements
  id: Elements
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Elements()
  nameWithType: XContainer.Elements()
  fullName: System.Xml.Linq.XContainer.Elements()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Elements
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 152
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a collection of the child elements of this element or document, in\ndocument order.\n"
  example: []
  syntax:
    content: public IEnumerable<XElement> Elements()
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\nAn System.Collections.Generic.IEnumerable&lt;XElement> of System.Xml.Linq.XElement\ncontaining the child elements of this System.Xml.Linq.XContainer, in document\norder.\n"
    content.vb: Public Function Elements As IEnumerable(Of XElement)
  overload: System.Xml.Linq.XContainer.Elements*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  id: Elements(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Elements(XName)
  nameWithType: XContainer.Elements(XName)
  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Elements
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 194
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a filtered collection of the child elements of this element or document,\nin document order. Only elements that have a matching System.Xml.Linq.XName\nare included in the collection.\n"
  example: []
  syntax:
    content: public IEnumerable<XElement> Elements(XName name)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The System.Xml.Linq.XName to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\nAn System.Collections.Generic.IEnumerable`1 of System.Xml.Linq.XElement\ncontaining the children of the System.Xml.Linq.XContainer that have a matching\nSystem.Xml.Linq.XName, in document order.\n"
    content.vb: Public Function Elements(name As XName) As IEnumerable(Of XElement)
  overload: System.Xml.Linq.XContainer.Elements*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XContainer.FirstNode
  commentId: P:System.Xml.Linq.XContainer.FirstNode
  id: FirstNode
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: FirstNode
  nameWithType: XContainer.FirstNode
  fullName: System.Xml.Linq.XContainer.FirstNode
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: FirstNode
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 236
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nGet the first child node of this node.\n"
  example: []
  syntax:
    content: public XNode FirstNode { get; }
    parameters: []
    return:
      type: System.Xml.Linq.XNode
    content.vb: Public ReadOnly Property FirstNode As XNode
  overload: System.Xml.Linq.XContainer.FirstNode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Linq.XContainer.Descendants
  commentId: M:System.Xml.Linq.XContainer.Descendants
  id: Descendants
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Descendants()
  nameWithType: XContainer.Descendants()
  fullName: System.Xml.Linq.XContainer.Descendants()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Descendants
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 259
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a collection of the descendant elements for this document or element,\nin document order.\n"
  example: []
  syntax:
    content: public IEnumerable<XElement> Descendants()
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\nAn System.Collections.Generic.IEnumerable`1 of System.Xml.Linq.XElement\ncontaining the descendant elements of the System.Xml.Linq.XContainer.\n"
    content.vb: Public Function Descendants As IEnumerable(Of XElement)
  overload: System.Xml.Linq.XContainer.Descendants*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  id: Descendants(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  langs:
  - csharp
  - vb
  name: Descendants(XName)
  nameWithType: XContainer.Descendants(XName)
  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XContainer.cs
    id: Descendants
    path: src/System.Xml.Linq/XContainer.cs
    startLine: 287
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a filtered collection of the descendant elements for this document\nor element, in document order. Only elements that have a matching System.Xml.Linq.XName\nare included in the collection.\n"
  example: []
  syntax:
    content: public IEnumerable<XElement> Descendants(XName name)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The System.Xml.Linq.XName to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\nAn System.Collections.Generic.IEnumerable`1 of System.Xml.Linq.XElement\ncontaining the descendant elements of the System.Xml.Linq.XContainer that\nmatch the specified System.Xml.Linq.XName.\n"
    content.vb: Public Function Descendants(name As XName) As IEnumerable(Of XElement)
  overload: System.Xml.Linq.XContainer.Descendants*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Linq.XObject
  commentId: T:System.Xml.Linq.XObject
  parent: System.Xml.Linq
  name: XObject
  nameWithType: XObject
  fullName: System.Xml.Linq.XObject
- uid: System.Xml.Linq.XNode
  commentId: T:System.Xml.Linq.XNode
  parent: System.Xml.Linq
  name: XNode
  nameWithType: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XNode.ToString
  commentId: M:System.Xml.Linq.XNode.ToString
  parent: System.Xml.Linq.XNode
  name: ToString()
  nameWithType: XNode.ToString()
  fullName: System.Xml.Linq.XNode.ToString()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    nameWithType: XNode.ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    nameWithType: XNode.ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XNode.Document
  commentId: P:System.Xml.Linq.XNode.Document
  parent: System.Xml.Linq.XNode
  name: Document
  nameWithType: XNode.Document
  fullName: System.Xml.Linq.XNode.Document
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.Linq.XContainer.Nodes*
  commentId: Overload:System.Xml.Linq.XContainer.Nodes
  name: Nodes
  nameWithType: XContainer.Nodes
  fullName: System.Xml.Linq.XContainer.Nodes
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XNode>
  nameWithType: IEnumerable<XNode>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>
  nameWithType.vb: IEnumerable(Of XNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XNode)
  name.vb: IEnumerable(Of XNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    nameWithType: XNode
    fullName: System.Xml.Linq.XNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: XNode
    nameWithType: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xml.Linq.XContainer.Add*
  commentId: Overload:System.Xml.Linq.XContainer.Add
  name: Add
  nameWithType: XContainer.Add
  fullName: System.Xml.Linq.XContainer.Add
- uid: System.Xml.Linq.XContainer.Element*
  commentId: Overload:System.Xml.Linq.XContainer.Element
  name: Element
  nameWithType: XContainer.Element
  fullName: System.Xml.Linq.XContainer.Element
- uid: System.Xml.Linq.XName
  commentId: T:System.Xml.Linq.XName
  parent: System.Xml.Linq
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq.XContainer.Elements*
  commentId: Overload:System.Xml.Linq.XContainer.Elements
  name: Elements
  nameWithType: XContainer.Elements
  fullName: System.Xml.Linq.XContainer.Elements
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XElement>
  nameWithType: IEnumerable<XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  nameWithType.vb: IEnumerable(Of XElement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)
  name.vb: IEnumerable(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.FirstNode*
  commentId: Overload:System.Xml.Linq.XContainer.FirstNode
  name: FirstNode
  nameWithType: XContainer.FirstNode
  fullName: System.Xml.Linq.XContainer.FirstNode
- uid: System.Xml.Linq.XContainer.Descendants*
  commentId: Overload:System.Xml.Linq.XContainer.Descendants
  name: Descendants
  nameWithType: XContainer.Descendants
  fullName: System.Xml.Linq.XContainer.Descendants
