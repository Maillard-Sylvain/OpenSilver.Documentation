### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  id: XNamespace
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XNamespace.Get(System.String)
  - System.Xml.Linq.XNamespace.GetName(System.String)
  - System.Xml.Linq.XNamespace.NamespaceName
  - System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  - System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  - System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XNamespace.ToString
  - System.Xml.Linq.XNamespace.Xml
  - System.Xml.Linq.XNamespace.Xmlns
  langs:
  - csharp
  - vb
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: XNamespace
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 22
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nRepresents an XML namespace. This class cannot be inherited.\n"
  example: []
  syntax:
    content: public sealed class XNamespace
    content.vb: Public NotInheritable Class XNamespace
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  commentId: M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  id: op_Addition(System.Xml.Linq.XNamespace,System.String)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Addition(XNamespace, String)
  nameWithType: XNamespace.Addition(XNamespace, String)
  fullName: System.Xml.Linq.XNamespace.Addition(System.Xml.Linq.XNamespace, System.String)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: op_Addition
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 31
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nCombines an System.Xml.Linq.XNamespace object with a local name to create\nan System.Xml.Linq.XName.\n"
  example: []
  syntax:
    content: public static XName operator +(XNamespace ns, string localName)
    parameters:
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: An System.Xml.Linq.XNamespace that contains the namespace.
    - id: localName
      type: System.String
      description: A System.String that contains the local name.
    return:
      type: System.Xml.Linq.XName
      description: The new System.Xml.Linq.XName constructed from the namespace and local name.
    content.vb: Public Shared Operator +(ns As XNamespace, localName As String) As XName
  overload: System.Xml.Linq.XNamespace.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.Xml
  commentId: P:System.Xml.Linq.XNamespace.Xml
  id: Xml
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Xml
  nameWithType: XNamespace.Xml
  fullName: System.Xml.Linq.XNamespace.Xml
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: Xml
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 42
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nGets the XNamespace object that corresponds to the xml uri (http://www.w3.org/XML/1998/namespace).\n"
  example: []
  syntax:
    content: public static XNamespace Xml { get; }
    parameters: []
    return:
      type: System.Xml.Linq.XNamespace
    content.vb: Public Shared ReadOnly Property Xml As XNamespace
  overload: System.Xml.Linq.XNamespace.Xml*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.Xmlns
  commentId: P:System.Xml.Linq.XNamespace.Xmlns
  id: Xmlns
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Xmlns
  nameWithType: XNamespace.Xmlns
  fullName: System.Xml.Linq.XNamespace.Xmlns
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: Xmlns
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 53
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nGets the XNamespace object that corresponds to the xmlns uri (http://www.w3.org/2000/xmlns/).\n"
  example: []
  syntax:
    content: public static XNamespace Xmlns { get; }
    parameters: []
    return:
      type: System.Xml.Linq.XNamespace
    content.vb: Public Shared ReadOnly Property Xmlns As XNamespace
  overload: System.Xml.Linq.XNamespace.Xmlns*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  commentId: M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  id: op_Implicit(System.String)~System.Xml.Linq.XNamespace
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Implicit(String to XNamespace)
  nameWithType: XNamespace.Implicit(String to XNamespace)
  fullName: System.Xml.Linq.XNamespace.Implicit(System.String to System.Xml.Linq.XNamespace)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: op_Implicit
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 66
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nConverts a string containing a Uniform Resource Identifier (URI) to an System.Xml.Linq.XNamespace.\n"
  example: []
  syntax:
    content: public static implicit operator XNamespace(string namespaceName)
    parameters:
    - id: namespaceName
      type: System.String
      description: A System.String that contains the namespace URI.
    return:
      type: System.Xml.Linq.XNamespace
      description: An System.Xml.Linq.XNamespace constructed from the URI string.
    content.vb: Public Shared Widening Operator CType(namespaceName As String) As XNamespace
  overload: System.Xml.Linq.XNamespace.op_Implicit*
  nameWithType.vb: XNamespace.Widening(String to XNamespace)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XNamespace.Widening(System.String to System.Xml.Linq.XNamespace)
  name.vb: Widening(String to XNamespace)
- uid: System.Xml.Linq.XNamespace.NamespaceName
  commentId: P:System.Xml.Linq.XNamespace.NamespaceName
  id: NamespaceName
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: NamespaceName
  nameWithType: XNamespace.NamespaceName
  fullName: System.Xml.Linq.XNamespace.NamespaceName
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: NamespaceName
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 75
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nGets the Uniform Resource Identifier (URI) of this namespace.\n"
  example: []
  syntax:
    content: public string NamespaceName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NamespaceName As String
  overload: System.Xml.Linq.XNamespace.NamespaceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.Get(System.String)
  commentId: M:System.Xml.Linq.XNamespace.Get(System.String)
  id: Get(System.String)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: XNamespace.Get(String)
  fullName: System.Xml.Linq.XNamespace.Get(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: Get
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 93
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nGets an System.Xml.Linq.XNamespace for the specified Uniform Resource Identifier\n(URI).\n"
  example: []
  syntax:
    content: public static XNamespace Get(string namespaceName)
    parameters:
    - id: namespaceName
      type: System.String
      description: A System.String that contains a namespace URI.
    return:
      type: System.Xml.Linq.XNamespace
      description: An System.Xml.Linq.XNamespace created from the specified URI.
    content.vb: Public Shared Function Get(namespaceName As String) As XNamespace
  overload: System.Xml.Linq.XNamespace.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.GetName(System.String)
  commentId: M:System.Xml.Linq.XNamespace.GetName(System.String)
  id: GetName(System.String)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: GetName(String)
  nameWithType: XNamespace.GetName(String)
  fullName: System.Xml.Linq.XNamespace.GetName(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: GetName
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 109
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns an System.Xml.Linq.XName object created from this System.Xml.Linq.XNamespace\nand the specified local name.\n"
  example: []
  syntax:
    content: public XName GetName(string localName)
    parameters:
    - id: localName
      type: System.String
      description: A System.String that contains a local name.
    return:
      type: System.Xml.Linq.XName
      description: "\nAn System.Xml.Linq.XName created from this System.Xml.Linq.XNamespace and\nthe specified local name.\n"
    content.vb: Public Function GetName(localName As String) As XName
  overload: System.Xml.Linq.XNamespace.GetName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XNamespace.ToString
  commentId: M:System.Xml.Linq.XNamespace.ToString
  id: ToString
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XNamespace.ToString()
  fullName: System.Xml.Linq.XNamespace.ToString()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: ToString
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 121
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns the URI of this System.Xml.Linq.XNamespace.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The URI of this System.Xml.Linq.XNamespace.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: System.Xml.Linq.XNamespace.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  commentId: M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  id: op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Inequality(XNamespace, XNamespace)
  nameWithType: XNamespace.Inequality(XNamespace, XNamespace)
  fullName: System.Xml.Linq.XNamespace.Inequality(System.Xml.Linq.XNamespace, System.Xml.Linq.XNamespace)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: op_Inequality
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 134
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a value indicating whether two instances of System.Xml.Linq.XNamespace\nare not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(XNamespace left, XNamespace right)
    parameters:
    - id: left
      type: System.Xml.Linq.XNamespace
      description: The first System.Xml.Linq.XNamespace to compare.
    - id: right
      type: System.Xml.Linq.XNamespace
      description: The second System.Xml.Linq.XNamespace to compare.
    return:
      type: System.Boolean
      description: A System.Boolean that indicates whether left and right are not equal.
    content.vb: Public Shared Operator <>(left As XNamespace, right As XNamespace) As Boolean
  overload: System.Xml.Linq.XNamespace.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  commentId: M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  id: op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Equality(XNamespace, XNamespace)
  nameWithType: XNamespace.Equality(XNamespace, XNamespace)
  fullName: System.Xml.Linq.XNamespace.Equality(System.Xml.Linq.XNamespace, System.Xml.Linq.XNamespace)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml.Linq/XNamespace.cs
    id: op_Equality
    path: src/System.Xml.Linq/XNamespace.cs
    startLine: 157
  assemblies:
  - OpenSilver.Runtime
  namespace: System.Xml.Linq
  summary: "\nReturns a value indicating whether two instances of System.Xml.Linq.XNamespace\nare equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(XNamespace left, XNamespace right)
    parameters:
    - id: left
      type: System.Xml.Linq.XNamespace
      description: The first System.Xml.Linq.XNamespace to compare.
    - id: right
      type: System.Xml.Linq.XNamespace
      description: The second System.Xml.Linq.XNamespace to compare.
    return:
      type: System.Boolean
      description: A System.Boolean that indicates whether left and right are equal.
    content.vb: Public Shared Operator =(left As XNamespace, right As XNamespace) As Boolean
  overload: System.Xml.Linq.XNamespace.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.Linq.XNamespace.op_Addition*
  commentId: Overload:System.Xml.Linq.XNamespace.op_Addition
  name: Addition
  nameWithType: XNamespace.Addition
  fullName: System.Xml.Linq.XNamespace.Addition
- uid: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XName
  commentId: T:System.Xml.Linq.XName
  parent: System.Xml.Linq
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Xml.Linq.XNamespace.Xml*
  commentId: Overload:System.Xml.Linq.XNamespace.Xml
  name: Xml
  nameWithType: XNamespace.Xml
  fullName: System.Xml.Linq.XNamespace.Xml
- uid: System.Xml.Linq.XNamespace.Xmlns*
  commentId: Overload:System.Xml.Linq.XNamespace.Xmlns
  name: Xmlns
  nameWithType: XNamespace.Xmlns
  fullName: System.Xml.Linq.XNamespace.Xmlns
- uid: System.Xml.Linq.XNamespace.op_Implicit*
  commentId: Overload:System.Xml.Linq.XNamespace.op_Implicit
  name: Implicit
  nameWithType: XNamespace.Implicit
  fullName: System.Xml.Linq.XNamespace.Implicit
  nameWithType.vb: XNamespace.Widening
  fullName.vb: System.Xml.Linq.XNamespace.Widening
  name.vb: Widening
- uid: System.Xml.Linq.XNamespace.NamespaceName*
  commentId: Overload:System.Xml.Linq.XNamespace.NamespaceName
  name: NamespaceName
  nameWithType: XNamespace.NamespaceName
  fullName: System.Xml.Linq.XNamespace.NamespaceName
- uid: System.Xml.Linq.XNamespace.Get*
  commentId: Overload:System.Xml.Linq.XNamespace.Get
  name: Get
  nameWithType: XNamespace.Get
  fullName: System.Xml.Linq.XNamespace.Get
- uid: System.Xml.Linq.XNamespace.GetName*
  commentId: Overload:System.Xml.Linq.XNamespace.GetName
  name: GetName
  nameWithType: XNamespace.GetName
  fullName: System.Xml.Linq.XNamespace.GetName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XNamespace.ToString*
  commentId: Overload:System.Xml.Linq.XNamespace.ToString
  name: ToString
  nameWithType: XNamespace.ToString
  fullName: System.Xml.Linq.XNamespace.ToString
- uid: System.Xml.Linq.XNamespace.op_Inequality*
  commentId: Overload:System.Xml.Linq.XNamespace.op_Inequality
  name: Inequality
  nameWithType: XNamespace.Inequality
  fullName: System.Xml.Linq.XNamespace.Inequality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Linq.XNamespace.op_Equality*
  commentId: Overload:System.Xml.Linq.XNamespace.op_Equality
  name: Equality
  nameWithType: XNamespace.Equality
  fullName: System.Xml.Linq.XNamespace.Equality
