### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationReader
  commentId: T:System.Xml.Serialization.XmlSerializationReader
  id: XmlSerializationReader
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlSerializationReader.#ctor
  - System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  - System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  - System.Xml.Serialization.XmlSerializationReader.GetXsiType
  - System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  - System.Xml.Serialization.XmlSerializationReader.InitIDs
  - System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  - System.Xml.Serialization.XmlSerializationReader.Reader
  - System.Xml.Serialization.XmlSerializationReader.ReaderCount
  - System.Xml.Serialization.XmlSerializationReader.ReadNull
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: XmlSerializationReader
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 30
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nControls deserialization by the System.Xml.Serialization.XmlSerializer class.\n"
  example: []
  syntax:
    content: 'public abstract class XmlSerializationReader : XmlSerializationGeneratedCode'
    content.vb: >-
      Public MustInherit Class XmlSerializationReader

          Inherits XmlSerializationGeneratedCode
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  commentId: M:System.Xml.Serialization.XmlSerializationReader.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: .ctor
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 38
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInitializes a new instance of the System.Xml.Serialization.XmlSerializationReader\nclass.\n"
  example: []
  syntax:
    content: protected XmlSerializationReader()
    content.vb: Protected Sub New
  overload: System.Xml.Serialization.XmlSerializationReader.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  commentId: P:System.Xml.Serialization.XmlSerializationReader.Reader
  id: Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: Reader
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 70
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nGets the System.Xml.XmlReader object that is being used by System.Xml.Serialization.XmlSerializationReader.\n"
  example: []
  syntax:
    content: protected XmlReader Reader { get; }
    parameters: []
    return:
      type: System.Xml.XmlReader
    content.vb: Protected ReadOnly Property Reader As XmlReader
  overload: System.Xml.Serialization.XmlSerializationReader.Reader*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  commentId: P:System.Xml.Serialization.XmlSerializationReader.ReaderCount
  id: ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReaderCount
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 80
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nGets the current count of the System.Xml.XmlReader.\n"
  example: []
  syntax:
    content: protected int ReaderCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property ReaderCount As Integer
  overload: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  id: CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CheckReaderCount(ref Int32, ref Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(ref Int32, ref Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(ref System.Int32, ref System.Int32)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CheckReaderCount
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 148
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nChecks whether the deserializer has advanced.\n"
  example: []
  syntax:
    content: protected void CheckReaderCount(ref int whileIterations, ref int readerCount)
    parameters:
    - id: whileIterations
      type: System.Int32
      description: The current count in a while loop.
    - id: readerCount
      type: System.Int32
      description: The current System.Xml.Serialization.XmlSerializationReader.ReaderCount.
    content.vb: Protected Sub CheckReaderCount(ByRef whileIterations As Integer, ByRef readerCount As Integer)
  overload: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  nameWithType.vb: XmlSerializationReader.CheckReaderCount(ByRef Int32, ByRef Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(ByRef System.Int32, ByRef System.Int32)
  name.vb: CheckReaderCount(ByRef Int32, ByRef Int32)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  id: CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateAbstractTypeException(String, String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String, String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateAbstractTypeException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 172
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that an object\nbeing deserialized should be abstract.\n"
  example: []
  syntax:
    content: protected Exception CreateAbstractTypeException(string name, string ns)
    parameters:
    - id: name
      type: System.String
      description: The name of the abstract type.
    - id: ns
      type: System.String
      description: The .NET Framework namespace of the abstract type.
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateAbstractTypeException(name As String, ns As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  id: CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateBadDerivationException(String, String, String, String, String, String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String, String, String, String, String, String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateBadDerivationException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 188
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nPopulates an object from its XML representation at the current location of\nthe System.Xml.XmlReader, with an option to read the inner element.\n"
  example: []
  syntax:
    content: protected Exception CreateBadDerivationException(string xsdDerived, string nsDerived, string xsdBase, string nsBase, string clrDerived, string clrBase)
    parameters:
    - id: xsdDerived
      type: System.String
      description: The local name of the derived XML Schema data type.
    - id: nsDerived
      type: System.String
      description: The namespace of the derived XML Schema data type.
    - id: xsdBase
      type: System.String
      description: The local name of the base XML Schema data type.
    - id: nsBase
      type: System.String
      description: The namespace of the base XML Schema data type.
    - id: clrDerived
      type: System.String
      description: The namespace of the derived .NET Framework type.
    - id: clrBase
      type: System.String
      description: The name of the base .NET Framework type.
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateBadDerivationException(xsdDerived As String, nsDerived As String, xsdBase As String, nsBase As String, clrDerived As String, clrBase As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  id: CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateCtorHasSecurityException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 200
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that an object\nbeing deserialized cannot be instantiated because the constructor throws\na security exception.\n"
  example: []
  syntax:
    content: protected Exception CreateCtorHasSecurityException(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: The name of the type.
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateCtorHasSecurityException(typeName As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  id: CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateInaccessibleConstructorException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 212
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that an object\nbeing deserialized cannot be instantiated because there is no constructor\navailable.\n"
  example: []
  syntax:
    content: protected Exception CreateInaccessibleConstructorException(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: The name of the type.
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateInaccessibleConstructorException(typeName As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  id: CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateInvalidCastException(Type, Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type, Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateInvalidCastException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 230
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidCastException that indicates that an explicit reference\nconversion failed.\n"
  example: []
  syntax:
    content: protected Exception CreateInvalidCastException(Type type, object value)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe System.Type that an object cannot be cast to. This type is incorporated\ninto the exception message.\n"
    - id: value
      type: System.Object
      description: "\nThe object that cannot be cast. This object is incorporated into the exception\nmessage.\n"
    return:
      type: System.Exception
      description: An System.InvalidCastException exception.
    content.vb: Protected Function CreateInvalidCastException(type As Type, value As Object) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  id: CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateInvalidCastException(Type, Object, String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type, Object, String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type, System.Object, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateInvalidCastException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 249
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidCastException that indicates that an explicit reference\nconversion failed.\n"
  example: []
  syntax:
    content: protected Exception CreateInvalidCastException(Type type, object value, string id)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe System.Type that an object cannot be cast to. This type is incorporated\ninto the exception message.\n"
    - id: value
      type: System.Object
      description: "\nThe object that cannot be cast. This object is incorporated into the exception\nmessage.\n"
    - id: id
      type: System.String
      description: A string identifier.
    return:
      type: System.Exception
      description: An System.InvalidCastException exception.
    content.vb: Protected Function CreateInvalidCastException(type As Type, value As Object, id As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  id: CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateMissingIXmlSerializableType(String, String, String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String, String, String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateMissingIXmlSerializableType
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 271
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that a derived\ntype that is mapped to an XML Schema data type cannot be located.\n"
  example: []
  syntax:
    content: protected Exception CreateMissingIXmlSerializableType(string name, string ns, string clrType)
    parameters:
    - id: name
      type: System.String
      description: "\nThe local name of the XML Schema data type that is mapped to the unavailable\nderived type.\n"
    - id: ns
      type: System.String
      description: "\nThe namespace of the XML Schema data type that is mapped to the unavailable\nderived type.\n"
    - id: clrType
      type: System.String
      description: "\nThe full name of the .NET Framework base type for which a derived type cannot\nbe located.\n"
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateMissingIXmlSerializableType(name As String, ns As String, clrType As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  id: CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateReadOnlyCollectionException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 285
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that a SOAP-encoded\ncollection type cannot be modified and its values cannot be filled in.\n"
  example: []
  syntax:
    content: protected Exception CreateReadOnlyCollectionException(string name)
    parameters:
    - id: name
      type: System.String
      description: "\nThe fully qualified name of the .NET Framework type for which there is a\nmapping.\n"
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateReadOnlyCollectionException(name As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  id: CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateUnknownConstantException(String, Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String, Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String, System.Type)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateUnknownConstantException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 297
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that an enumeration\nvalue is not valid.\n"
  example: []
  syntax:
    content: protected Exception CreateUnknownConstantException(string value, Type enumType)
    parameters:
    - id: value
      type: System.String
      description: The enumeration value that is not valid.
    - id: enumType
      type: System.Type
      description: The enumeration type.
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateUnknownConstantException(value As String, enumType As Type) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  id: CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateUnknownNodeException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 307
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that the current\nposition of System.Xml.XmlReader represents an unknown XML node.\n"
  example: []
  syntax:
    content: protected Exception CreateUnknownNodeException()
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateUnknownNodeException As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  id: CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: CreateUnknownTypeException
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 318
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that a type is\nunknown.\n"
  example: []
  syntax:
    content: protected Exception CreateUnknownTypeException(XmlQualifiedName type)
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: An System.Xml.XmlQualifiedName that represents the name of the unknown type.
    return:
      type: System.Exception
      description: An System.InvalidOperationException exception.
    content.vb: Protected Function CreateUnknownTypeException(type As XmlQualifiedName) As Exception
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  id: EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: EnsureArrayIndex(Array, Int32, Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array, Int32, Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array, System.Int32, System.Type)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: EnsureArrayIndex
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 334
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nEnsures that a given array, or a copy, is large enough to contain a specified\nindex.\n"
  example: []
  syntax:
    content: protected Array EnsureArrayIndex(Array a, int index, Type elementType)
    parameters:
    - id: a
      type: System.Array
      description: The System.Array that is being checked.
    - id: index
      type: System.Int32
      description: The required index.
    - id: elementType
      type: System.Type
      description: The System.Type of the array&apos;s elements.
    return:
      type: System.Array
      description: "\nThe existing System.Array, if it is already large enough; otherwise, a new,\nlarger array that contains the original array&apos;s elements.\n"
    content.vb: Protected Function EnsureArrayIndex(a As Array, index As Integer, elementType As Type) As Array
  overload: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  commentId: M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  id: GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: GetNullAttr
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 371
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nDetermines whether the XML element where the System.Xml.XmlReader is currently\npositioned has a null attribute set to the value true.\n"
  example: []
  syntax:
    content: protected bool GetNullAttr()
    return:
      type: System.Boolean
      description: "\ntrue if System.Xml.XmlReader is currently positioned over a null attribute\nwith the value true; otherwise, false.\n"
    content.vb: Protected Function GetNullAttr As Boolean
  overload: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  commentId: M:System.Xml.Serialization.XmlSerializationReader.GetXsiType
  id: GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: GetXsiType
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 399
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nGets the value of the xsi:type attribute for the XML element at the current\nlocation of the System.Xml.XmlReader.\n"
  example: []
  syntax:
    content: protected XmlQualifiedName GetXsiType()
    return:
      type: System.Xml.XmlQualifiedName
      description: An XML qualified name that indicates the data type of an XML element.
    content.vb: Protected Function GetXsiType As XmlQualifiedName
  overload: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  commentId: M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: InitCallbacks
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 407
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInitializes callback methods that populate objects that map to SOAP-encoded\nXML data.\n"
  example: []
  syntax:
    content: protected abstract void InitCallbacks()
    content.vb: Protected MustOverride Sub InitCallbacks
  overload: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  commentId: M:System.Xml.Serialization.XmlSerializationReader.InitIDs
  id: InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: InitIDs
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 411
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nStores element and attribute names in a System.Xml.NameTable object.\n"
  example: []
  syntax:
    content: protected abstract void InitIDs()
    content.vb: Protected MustOverride Sub InitIDs
  overload: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  id: IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: IsXmlnsAttribute
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 419
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nDetermines whether an XML attribute name indicates an XML namespace.\n"
  example: []
  syntax:
    content: protected bool IsXmlnsAttribute(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of an XML attribute.
    return:
      type: System.Boolean
      description: true if the XML attribute name indicates an XML namespace; otherwise, false.
    content.vb: Protected Function IsXmlnsAttribute(name As String) As Boolean
  overload: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReadEndElement
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 444
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nMakes the System.Xml.XmlReader read an XML end tag.\n"
  example: []
  syntax:
    content: protected void ReadEndElement()
    content.vb: Protected Sub ReadEndElement
  overload: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ReadNull
  id: ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReadNull
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 457
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInstructs the System.Xml.XmlReader to read the current XML element if the\nelement has a null attribute with the value true.\n"
  example: []
  syntax:
    content: protected bool ReadNull()
    return:
      type: System.Boolean
      description: "\ntrue if the element has a null=&quot;true&quot; attribute value and has been read;\notherwise, false.\n"
    content.vb: Protected Function ReadNull As Boolean
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReadSerializable
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 581
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nPopulates an object from its XML representation at the current location of\nthe System.Xml.XmlReader.\n"
  example: []
  syntax:
    content: protected IXmlSerializable ReadSerializable(IXmlSerializable serializable)
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "\nAn System.Xml.Serialization.IXmlSerializable that corresponds to the current\nposition of the System.Xml.XmlReader.\n"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "\nAn object that implements the System.Xml.Serialization.IXmlSerializable interface\nwith its members populated from the location of the System.Xml.XmlReader.\n"
    content.vb: Protected Function ReadSerializable(serializable As IXmlSerializable) As IXmlSerializable
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReadSerializable(IXmlSerializable, Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable, Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable, System.Boolean)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReadSerializable
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 599
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nThis method supports the .NET Framework infrastructure and is not intended\nto be used directly from your code.\n"
  example: []
  syntax:
    content: protected IXmlSerializable ReadSerializable(IXmlSerializable serializable, bool wrappedAny)
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "\nAn IXmlSerializable object that corresponds to the current position of the\nXMLReader.\n"
    - id: wrappedAny
      type: System.Boolean
      description: Specifies whether the serializable object is wrapped.
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "\nAn object that implements the IXmlSerializable interface with its members\npopulated from the location of the XmlReader.\n"
    content.vb: Protected Function ReadSerializable(serializable As IXmlSerializable, wrappedAny As Boolean) As IXmlSerializable
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  id: ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReadString
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 616
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nProduces the result of a call to the System.Xml.XmlReader.ReadString() method\nappended to the input value.\n"
  example: []
  syntax:
    content: protected string ReadString(string value)
    parameters:
    - id: value
      type: System.String
      description: "\nA string to prefix to the result of a call to the System.Xml.XmlReader.ReadString()\nmethod.\n"
    return:
      type: System.String
      description: "\nThe result of call to the System.Xml.XmlReader.ReadString() method appended\nto the input value.\n"
    content.vb: Protected Function ReadString(value As String) As String
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  id: ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ReadString(String, Boolean)
  nameWithType: XmlSerializationReader.ReadString(String, Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ReadString
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 629
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nReturns the result of a call to the System.Xml.XmlReader.ReadString() method\nof the System.Xml.XmlReader class, trimmed of white space if needed, and\nappended to the input value.\n"
  example: []
  syntax:
    content: protected string ReadString(string value, bool trim)
    parameters:
    - id: value
      type: System.String
      description: A string that will be appended to.
    - id: trim
      type: System.Boolean
      description: true if the result of the read operation should be trimmed; otherwise, false.
    return:
      type: System.String
      description: The result of the read operation appended to the input value.
    content.vb: Protected Function ReadString(value As String, trim As Boolean) As String
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ToChar
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 639
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nProduces a System.Char object from an input string.\n"
  example: []
  syntax:
    content: protected static char ToChar(string value)
    parameters:
    - id: value
      type: System.String
      description: A string to translate into a System.Char object.
    return:
      type: System.Char
      description: A System.Char object.
    content.vb: Protected Shared Function ToChar(value As String) As Char
  overload: System.Xml.Serialization.XmlSerializationReader.ToChar*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  id: ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ToDateTime
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 646
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nProduces a System.DateTime object from an input string.\n"
  example: []
  syntax:
    content: protected static DateTime ToDateTime(string value)
    parameters:
    - id: value
      type: System.String
      description: A string to translate into a System.DateTime object.
    return:
      type: System.DateTime
      description: A System.DateTime object.
    content.vb: Protected Shared Function ToDateTime(value As String) As Date
  overload: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  id: ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ShrinkArray(Array, Int32, Type, Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array, Int32, Type, Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array, System.Int32, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ShrinkArray
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 737
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nEnsures that a given array, or a copy, is no larger than a specified length.\n"
  example: []
  syntax:
    content: protected Array ShrinkArray(Array a, int length, Type elementType, bool isNullable)
    parameters:
    - id: a
      type: System.Array
      description: The array that is being checked.
    - id: length
      type: System.Int32
      description: The maximum length of the array.
    - id: elementType
      type: System.Type
      description: The System.Type of the array&apos;s elements.
    - id: isNullable
      type: System.Boolean
      description: "\ntrue if null for the array, if present for the input array, can be returned;\notherwise, a new, smaller array.\n"
    return:
      type: System.Array
      description: "\nThe existing System.Array, if it is already small enough; otherwise, a new,\nsmaller array that contains the original array&apos;s elements up to the size\nof length.\n"
    content.vb: Protected Function ShrinkArray(a As Array, length As Integer, elementType As Type, isNullable As Boolean) As Array
  overload: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  id: ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ToByteArrayBase64
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 749
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInstructs the System.Xml.XmlReader to read the string value at its current\nposition and return it as a base-64 byte array.\n"
  example: []
  syntax:
    content: protected byte[] ToByteArrayBase64(bool isNull)
    parameters:
    - id: isNull
      type: System.Boolean
      description: true to return null; false to return a base-64 byte array.
    return:
      type: System.Byte[]
      description: >-
        A base-64 byte array; otherwise, null if the value of the isNull parameter

        is true.
    content.vb: Protected Function ToByteArrayBase64(isNull As Boolean) As Byte()
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  id: ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: ToByteArrayBase64
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 763
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nProduces a base-64 byte array from an input string.\n"
  example: []
  syntax:
    content: protected static byte[] ToByteArrayBase64(string value)
    parameters:
    - id: value
      type: System.String
      description: A string to translate into a base-64 byte array.
    return:
      type: System.Byte[]
      description: A base-64 byte array.
    content.vb: Protected Shared Function ToByteArrayBase64(value As String) As Byte()
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  id: UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: UnknownNode
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 962
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nRaises an System.Xml.Serialization.XmlSerializer.UnknownNode event for the\ncurrent position of the System.Xml.XmlReader.\n"
  example: []
  syntax:
    content: protected void UnknownNode(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object that is being deserialized.
    content.vb: Protected Sub UnknownNode(o As Object)
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  id: UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  - vb
  name: UnknownNode(Object, String)
  nameWithType: XmlSerializationReader.UnknownNode(Object, String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationReader.cs
    id: UnknownNode
    path: src/System.Xml/XmlSerializationReader.cs
    startLine: 973
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nRaises an System.Xml.Serialization.XmlSerializer.UnknownNode event for the\ncurrent position of the System.Xml.XmlReader.\n"
  example: []
  syntax:
    content: protected void UnknownNode(object o, string qnames)
    parameters:
    - id: o
      type: System.Object
      description: The object being deserialized.
    - id: qnames
      type: System.String
      description: A comma-delimited list of XML qualified names.
    content.vb: Protected Sub UnknownNode(o As Object, qnames As String)
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  commentId: T:System.Xml.Serialization.XmlSerializationGeneratedCode
  parent: System.Xml.Serialization
  name: XmlSerializationGeneratedCode
  nameWithType: XmlSerializationGeneratedCode
  fullName: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.#ctor
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader.XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader
- uid: System.Xml.Serialization.XmlSerializationReader.Reader*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.Reader
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ReaderCount
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount
  name: CheckReaderCount
  nameWithType: XmlSerializationReader.CheckReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException
  name: CreateAbstractTypeException
  nameWithType: XmlSerializationReader.CreateAbstractTypeException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException
  name: CreateBadDerivationException
  nameWithType: XmlSerializationReader.CreateBadDerivationException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException
  name: CreateCtorHasSecurityException
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException
  name: CreateInaccessibleConstructorException
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException
  name: CreateInvalidCastException
  nameWithType: XmlSerializationReader.CreateInvalidCastException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType
  name: CreateMissingIXmlSerializableType
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException
  name: CreateReadOnlyCollectionException
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException
  name: CreateUnknownConstantException
  nameWithType: XmlSerializationReader.CreateUnknownConstantException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  name: CreateUnknownNodeException
  nameWithType: XmlSerializationReader.CreateUnknownNodeException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationReader.CreateUnknownTypeException
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException
- uid: System.Xml.XmlQualifiedName
  commentId: T:System.Xml.XmlQualifiedName
  parent: System.Xml
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex
  name: EnsureArrayIndex
  nameWithType: XmlSerializationReader.EnsureArrayIndex
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  name: GetNullAttr
  nameWithType: XmlSerializationReader.GetNullAttr
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.GetXsiType
  name: GetXsiType
  nameWithType: XmlSerializationReader.GetXsiType
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  name: InitCallbacks
  nameWithType: XmlSerializationReader.InitCallbacks
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.InitIDs
  name: InitIDs
  nameWithType: XmlSerializationReader.InitIDs
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute
  name: IsXmlnsAttribute
  nameWithType: XmlSerializationReader.IsXmlnsAttribute
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  name: ReadEndElement
  nameWithType: XmlSerializationReader.ReadEndElement
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ReadNull
  name: ReadNull
  nameWithType: XmlSerializationReader.ReadNull
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ReadSerializable
  name: ReadSerializable
  nameWithType: XmlSerializationReader.ReadSerializable
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ReadString
  name: ReadString
  nameWithType: XmlSerializationReader.ReadString
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ToChar
  name: ToChar
  nameWithType: XmlSerializationReader.ToChar
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ToDateTime
  name: ToDateTime
  nameWithType: XmlSerializationReader.ToDateTime
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ShrinkArray
  name: ShrinkArray
  nameWithType: XmlSerializationReader.ShrinkArray
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64
  name: ToByteArrayBase64
  nameWithType: XmlSerializationReader.ToByteArrayBase64
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  commentId: Overload:System.Xml.Serialization.XmlSerializationReader.UnknownNode
  name: UnknownNode
  nameWithType: XmlSerializationReader.UnknownNode
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode
