### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationWriter
  commentId: T:System.Xml.Serialization.XmlSerializationWriter
  id: XmlSerializationWriter
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlSerializationWriter.#ctor
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  - System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  - System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  langs:
  - csharp
  - vb
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter
  fullName: System.Xml.Serialization.XmlSerializationWriter
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: XmlSerializationWriter
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 30
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: 'public abstract class XmlSerializationWriter : XmlSerializationGeneratedCode'
    content.vb: >-
      Public MustInherit Class XmlSerializationWriter

          Inherits XmlSerializationGeneratedCode
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: .ctor
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 64
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInitializes a new instance of the System.Xml.Serialization.XmlSerializationWriter\nclass.\n"
  example: []
  syntax:
    content: protected XmlSerializationWriter()
    content.vb: Protected Sub New
  overload: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  id: CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: CreateUnknownTypeException
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 72
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that a type being\nserialized is not being used in a valid manner or is unexpectedly encountered.\n"
  example: []
  syntax:
    content: protected Exception CreateUnknownTypeException(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object whose type cannot be serialized.
    return:
      type: System.Exception
      description: The newly created exception.
    content.vb: Protected Function CreateUnknownTypeException(o As Object) As Exception
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  id: CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: CreateUnknownTypeException
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 80
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException that indicates that a type being\nserialized is not being used in a valid manner or is unexpectedly encountered.\n"
  example: []
  syntax:
    content: protected Exception CreateUnknownTypeException(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type that cannot be serialized.
    return:
      type: System.Exception
      description: The newly created exception.
    content.vb: Protected Function CreateUnknownTypeException(type As Type) As Exception
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  id: FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: FromChar
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 87
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nProduces a string from an input System.Char.\n"
  example: []
  syntax:
    content: protected static string FromChar(char value)
    parameters:
    - id: value
      type: System.Char
      description: A System.Char to translate to a string.
    return:
      type: System.String
      description: The System.Char value converted to a string.
    content.vb: Protected Shared Function FromChar(value As Char) As String
  overload: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  id: FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: FromDateTime
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 97
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nProduces a string from an input System.DateTime.\n"
  example: []
  syntax:
    content: protected static string FromDateTime(DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: A System.DateTime to translate to a string.
    return:
      type: System.String
      description: A string representation of the System.DateTime that shows the date and time.
    content.vb: Protected Shared Function FromDateTime(value As Date) As String
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: InitCallbacks
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 102
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: protected abstract void InitCallbacks()
    content.vb: Protected MustOverride Sub InitCallbacks
  overload: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  id: TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: TopLevelElement
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 109
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInitializes object references only while serializing a SOAP-encoded SOAP\nmessage.\n"
  example: []
  syntax:
    content: protected void TopLevelElement()
    content.vb: Protected Sub TopLevelElement
  overload: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  id: WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteElementString(String, String, String)
  nameWithType: XmlSerializationWriter.WriteElementString(String, String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteElementString
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 117
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element with a specified value in its body.\n"
  example: []
  syntax:
    content: protected void WriteElementString(string localName, string ns, string value)
    parameters:
    - id: localName
      type: System.String
      description: The local name of the XML element.
    - id: ns
      type: System.String
      description: The namespace of the XML element.
    - id: value
      type: System.String
      description: The text value of the XML element.
    content.vb: Protected Sub WriteElementString(localName As String, ns As String, value As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteElementStringRaw(String, String, String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String, String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteElementStringRaw
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 133
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element with a specified value in its body.\n"
  example: []
  syntax:
    content: protected void WriteElementStringRaw(string localName, string ns, string value)
    parameters:
    - id: localName
      type: System.String
      description: The local name of the XML element.
    - id: ns
      type: System.String
      description: The namespace of the XML element.
    - id: value
      type: System.String
      description: The text value of the XML element.
    content.vb: Protected Sub WriteElementStringRaw(localName As String, ns As String, value As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  id: WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteEmptyTag(String, String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteEmptyTag
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 146
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element whose body is empty.\n"
  example: []
  syntax:
    content: protected void WriteEmptyTag(string name, string ns)
    parameters:
    - id: name
      type: System.String
      description: The local name of the XML element to write.
    - id: ns
      type: System.String
      description: The namespace of the XML element to write.
    content.vb: Protected Sub WriteEmptyTag(name As String, ns As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  id: WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteEndElement
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 153
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: protected void WriteEndElement()
    content.vb: Protected Sub WriteEndElement
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  id: WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteEndElement
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 162
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: protected void WriteEndElement(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Protected Sub WriteEndElement(o As Object)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  id: WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteNullableStringLiteral(String, String, String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String, String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteNullableStringLiteral
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 174
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element that contains a string as the body. System.Xml.XmlWriter\ninserts an xsi:nil=&apos;true&apos; attribute if the string&apos;s value is null.\n"
  example: []
  syntax:
    content: protected void WriteNullableStringLiteral(string name, string ns, string value)
    parameters:
    - id: name
      type: System.String
      description: The local name of the XML element to write.
    - id: ns
      type: System.String
      description: The namespace of the XML element to write.
    - id: value
      type: System.String
      description: The string to write in the body of the XML element.
    content.vb: Protected Sub WriteNullableStringLiteral(name As String, ns As String, value As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteNullableStringLiteralRaw(String, String, String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String, String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteNullableStringLiteralRaw
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 189
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element that contains a string as the body. System.Xml.XmlWriter\ninserts a xsi:nil=&apos;true&apos; attribute if the string&apos;s value is null.\n"
  example: []
  syntax:
    content: protected void WriteNullableStringLiteralRaw(string name, string ns, string value)
    parameters:
    - id: name
      type: System.String
      description: The local name of the XML element to write.
    - id: ns
      type: System.String
      description: The namespace of the XML element to write.
    - id: value
      type: System.String
      description: The string to write in the body of the XML element.
    content.vb: Protected Sub WriteNullableStringLiteralRaw(name As String, ns As String, value As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  id: WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteNullTagLiteral(String, String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteNullTagLiteral
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 202
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element with an xsi:nil=&apos;true&apos; attribute.\n"
  example: []
  syntax:
    content: protected void WriteNullTagLiteral(string name, string ns)
    parameters:
    - id: name
      type: System.String
      description: The local name of the XML element to write.
    - id: ns
      type: System.String
      description: The namespace of the XML element to write.
    content.vb: Protected Sub WriteNullTagLiteral(name As String, ns As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  id: WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteStartDocument
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 218
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites the XML declaration if the writer is positioned at the start of an\nXML document.\n"
  example: []
  syntax:
    content: protected void WriteStartDocument()
    content.vb: Protected Sub WriteStartDocument
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteStartElement(String, String, Object, Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String, String, Object, Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String, System.String, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteStartElement
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 233
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an opening element tag, including any attributes.\n"
  example: []
  syntax:
    content: protected void WriteStartElement(string name, string ns, object o, bool writePrefixed)
    parameters:
    - id: name
      type: System.String
      description: The local name of the XML element to write.
    - id: ns
      type: System.String
      description: The namespace of the XML element to write.
    - id: o
      type: System.Object
      description: The object being serialized as an XML element.
    - id: writePrefixed
      type: System.Boolean
      description: "\ntrue to write the element name with a prefix if none is available for the\nspecified namespace; otherwise, false.\n"
    content.vb: Protected Sub WriteStartElement(name As String, ns As String, o As Object, writePrefixed As Boolean)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteStartElement(String, String, Object, Boolean, XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String, String, Object, Boolean, XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String, System.String, System.Object, System.Boolean, System.Xml.Serialization.XmlSerializerNamespaces)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteStartElement
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 252
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an opening element tag, including any attributes.\n"
  example: []
  syntax:
    content: protected void WriteStartElement(string name, string ns, object o, bool writePrefixed, XmlSerializerNamespaces xmlns)
    parameters:
    - id: name
      type: System.String
      description: The local name of the XML element to write.
    - id: ns
      type: System.String
      description: The namespace of the XML element to write.
    - id: o
      type: System.Object
      description: The object being serialized as an XML element.
    - id: writePrefixed
      type: System.Boolean
      description: "\ntrue to write the element name with a prefix if none is available for the\nspecified namespace; otherwise, false.\n"
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "\nAn instance of the System.Xml.Serialization.XmlSerializerNamespaces class\nthat contains prefix and namespace pairs to be used in the generated XML.\n"
    content.vb: Protected Sub WriteStartElement(name As String, ns As String, o As Object, writePrefixed As Boolean, xmlns As XmlSerializerNamespaces)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  id: WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteXsiType(String, String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteXsiType
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 282
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an xsi:type attribute for an XML element that is being serialized\ninto a document.\n"
  example: []
  syntax:
    content: protected void WriteXsiType(string name, string ns)
    parameters:
    - id: name
      type: System.String
      description: The local name of an XML Schema data type.
    - id: ns
      type: System.String
      description: The namespace of an XML Schema data type.
    content.vb: Protected Sub WriteXsiType(name As String, ns As String)
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  id: CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: CreateInvalidEnumValueException(Object, String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object, String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object, System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: CreateInvalidEnumValueException
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 400
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nCreates an System.InvalidOperationException for an invalid enumeration value.\n"
  example: []
  syntax:
    content: protected Exception CreateInvalidEnumValueException(object value, string typeName)
    parameters:
    - id: value
      type: System.Object
      description: An object that represents the invalid enumeration.
    - id: typeName
      type: System.String
      description: The XML type name.
    return:
      type: System.Exception
      description: The newly created exception.
    content.vb: Protected Function CreateInvalidEnumValueException(value As Object, typeName As String) As Exception
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  id: FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: FromByteArrayBase64
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 446
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: protected static byte[] FromByteArrayBase64(byte[] value)
    parameters:
    - id: value
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Protected Shared Function FromByteArrayBase64(value As Byte()) As Byte()
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  nameWithType.vb: XmlSerializationWriter.FromByteArrayBase64(Byte())
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte())
  name.vb: FromByteArrayBase64(Byte())
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  commentId: M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  - vb
  name: WriteElementStringRaw(String, String, Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String, String, Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String, System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializationWriter.cs
    id: WriteElementStringRaw
    path: src/System.Xml/XmlSerializationWriter.cs
    startLine: 876
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWrites an XML element with a specified value in its body.\n"
  example: []
  syntax:
    content: protected void WriteElementStringRaw(string localName, string ns, byte[] value)
    parameters:
    - id: localName
      type: System.String
      description: The local name of the XML element.
    - id: ns
      type: System.String
      description: The namespace of the XML element.
    - id: value
      type: System.Byte[]
      description: The text value of the XML element.
    content.vb: Protected Sub WriteElementStringRaw(localName As String, ns As String, value As Byte())
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  nameWithType.vb: XmlSerializationWriter.WriteElementStringRaw(String, String, Byte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String, System.String, System.Byte())
  name.vb: WriteElementStringRaw(String, String, Byte())
references:
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  commentId: T:System.Xml.Serialization.XmlSerializationGeneratedCode
  parent: System.Xml.Serialization
  name: XmlSerializationGeneratedCode
  nameWithType: XmlSerializationGeneratedCode
  fullName: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.#ctor
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter.XmlSerializationWriter
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.FromChar
  name: FromChar
  nameWithType: XmlSerializationWriter.FromChar
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.FromDateTime
  name: FromDateTime
  nameWithType: XmlSerializationWriter.FromDateTime
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  name: InitCallbacks
  nameWithType: XmlSerializationWriter.InitCallbacks
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  name: TopLevelElement
  nameWithType: XmlSerializationWriter.TopLevelElement
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString
  name: WriteElementString
  nameWithType: XmlSerializationWriter.WriteElementString
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw
  name: WriteElementStringRaw
  nameWithType: XmlSerializationWriter.WriteElementStringRaw
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag
  name: WriteEmptyTag
  nameWithType: XmlSerializationWriter.WriteEmptyTag
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  name: WriteEndElement
  nameWithType: XmlSerializationWriter.WriteEndElement
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral
  name: WriteNullableStringLiteral
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw
  name: WriteNullableStringLiteralRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral
  name: WriteNullTagLiteral
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  name: WriteStartDocument
  nameWithType: XmlSerializationWriter.WriteStartDocument
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
  name: WriteStartElement
  nameWithType: XmlSerializationWriter.WriteStartElement
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType
  name: WriteXsiType
  nameWithType: XmlSerializationWriter.WriteXsiType
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException
  name: CreateInvalidEnumValueException
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  commentId: Overload:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64
  name: FromByteArrayBase64
  nameWithType: XmlSerializationWriter.FromByteArrayBase64
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
