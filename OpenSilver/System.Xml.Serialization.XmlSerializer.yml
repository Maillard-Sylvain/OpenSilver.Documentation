### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializer
  commentId: T:System.Xml.Serialization.XmlSerializer
  id: XmlSerializer
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlSerializer.#ctor
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type)
  - System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  - System.Xml.Serialization.XmlSerializer.CreateReader
  - System.Xml.Serialization.XmlSerializer.CreateWriter
  - System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)
  - System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  - System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  - System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer
  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)
  - System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)
  langs:
  - csharp
  - vb
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: XmlSerializer
    path: src/System.Xml/XmlSerializer.cs
    startLine: 35
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nSerializes and deserializes objects into and from XML documents. The System.Xml.Serialization.XmlSerializer\nenables you to control how objects are encoded into XML.\n"
  example: []
  syntax:
    content: public class XmlSerializer
    content.vb: Public Class XmlSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer
  commentId: P:System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer
  id: MethodToSerializeUsingDataContractSerializer
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: MethodToSerializeUsingDataContractSerializer
  nameWithType: XmlSerializer.MethodToSerializeUsingDataContractSerializer
  fullName: System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: MethodToSerializeUsingDataContractSerializer
    path: src/System.Xml/XmlSerializer.cs
    startLine: 51
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: public static Func<object, Type, string> MethodToSerializeUsingDataContractSerializer { get; set; }
    parameters: []
    return:
      type: System.Func{System.Object,System.Type,System.String}
    content.vb: Public Shared Property MethodToSerializeUsingDataContractSerializer As Func(Of Object, Type, String)
  overload: System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  commentId: P:System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  id: MethodToDeserializeUsingDataContractSerializer
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: MethodToDeserializeUsingDataContractSerializer
  nameWithType: XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  fullName: System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: MethodToDeserializeUsingDataContractSerializer
    path: src/System.Xml/XmlSerializer.cs
    startLine: 52
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  syntax:
    content: public static Func<string, Type, object> MethodToDeserializeUsingDataContractSerializer { get; set; }
    parameters: []
    return:
      type: System.Func{System.String,System.Type,System.Object}
    content.vb: Public Shared Property MethodToDeserializeUsingDataContractSerializer As Func(Of String, Type, Object)
  overload: System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Serialization.XmlSerializer.#ctor
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer()
  nameWithType: XmlSerializer.XmlSerializer()
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer()
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: .ctor
    path: src/System.Xml/XmlSerializer.cs
    startLine: 61
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInitializes a new instance of the System.Xml.Serialization.XmlSerializer\nclass.\n"
  example: []
  syntax:
    content: protected XmlSerializer()
    content.vb: Protected Sub New
  overload: System.Xml.Serialization.XmlSerializer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type)
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type)
  nameWithType: XmlSerializer.XmlSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type)
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: .ctor
    path: src/System.Xml/XmlSerializer.cs
    startLine: 74
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nInitializes a new instance of the System.Xml.Serialization.XmlSerializer\nclass that can serialize objects of the specified type into XML documents,\nand deserialize XML documents into objects of the specified type.\n"
  example: []
  syntax:
    content: public XmlSerializer(Type type)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe type of the object that this System.Xml.Serialization.XmlSerializer can\nserialize.\n"
    content.vb: Public Sub New(type As Type)
  overload: System.Xml.Serialization.XmlSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  id: CanDeserialize(System.Xml.XmlReader)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CanDeserialize(XmlReader)
  nameWithType: XmlSerializer.CanDeserialize(XmlReader)
  fullName: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: CanDeserialize
    path: src/System.Xml/XmlSerializer.cs
    startLine: 88
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nGets a value that indicates whether this System.Xml.Serialization.XmlSerializer\ncan deserialize a specified XML document.\n"
  example: []
  syntax:
    content: public virtual bool CanDeserialize(XmlReader xmlReader)
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: An System.Xml.XmlReader that points to the document to deserialize.
    return:
      type: System.Boolean
      description: "\ntrue if this System.Xml.Serialization.XmlSerializer can deserialize the object\nthat the System.Xml.XmlReader points to; otherwise, false.\n"
    content.vb: Public Overridable Function CanDeserialize(xmlReader As XmlReader) As Boolean
  overload: System.Xml.Serialization.XmlSerializer.CanDeserialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream)
  nameWithType: XmlSerializer.Deserialize(Stream)
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: Deserialize
    path: src/System.Xml/XmlSerializer.cs
    startLine: 100
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nDeserializes the XML document contained by the specified System.IO.Stream.\n"
  example: []
  syntax:
    content: public object Deserialize(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The System.IO.Stream that contains the XML document to deserialize.
    return:
      type: System.Object
      description: The System.Object being deserialized.
    content.vb: Public Function Deserialize(stream As Stream) As Object
  overload: System.Xml.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  id: Deserialize(System.Xml.XmlReader)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(XmlReader)
  nameWithType: XmlSerializer.Deserialize(XmlReader)
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: Deserialize
    path: src/System.Xml/XmlSerializer.cs
    startLine: 120
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nDeserializes the XML document contained by the specified System.xml.XmlReader.\n"
  example: []
  syntax:
    content: public object Deserialize(XmlReader xmlReader)
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: The System.xml.XmlReader that contains the XML document to deserialize.
    return:
      type: System.Object
      description: The System.Object being deserialized.
    content.vb: Public Function Deserialize(xmlReader As XmlReader) As Object
  overload: System.Xml.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)
  id: Serialize(System.IO.Stream,System.Object)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, Object)
  nameWithType: XmlSerializer.Serialize(Stream, Object)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream, System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: Serialize
    path: src/System.Xml/XmlSerializer.cs
    startLine: 166
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nSerializes the specified System.Object and writes the XML document to a file\nusing the specified System.IO.Stream.\n"
  example: []
  syntax:
    content: public void Serialize(Stream stream, object o)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The System.IO.Stream used to write the XML document.
    - id: o
      type: System.Object
      description: The System.Object to serialize.
    content.vb: Public Sub Serialize(stream As Stream, o As Object)
  overload: System.Xml.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)
  id: Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, XmlSerializationWriter)
  nameWithType: XmlSerializer.Serialize(Object, XmlSerializationWriter)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.Object, System.Xml.Serialization.XmlSerializationWriter)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: Serialize
    path: src/System.Xml/XmlSerializer.cs
    startLine: 199
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nSerializes the specified System.Object and writes the XML document to a file\nusing the specified System.Xml.Serialization.XmlSerializationWriter.\n"
  example: []
  syntax:
    content: protected virtual void Serialize(object o, XmlSerializationWriter writer)
    parameters:
    - id: o
      type: System.Object
      description: The System.Object to serialize.
    - id: writer
      type: System.Xml.Serialization.XmlSerializationWriter
      description: "\nThe System.Xml.Serialization.XmlSerializationWriter used to write the XML\ndocument.\n"
    content.vb: Protected Overridable Sub Serialize(o As Object, writer As XmlSerializationWriter)
  overload: System.Xml.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xml.Serialization.XmlSerializer.CreateReader
  commentId: M:System.Xml.Serialization.XmlSerializer.CreateReader
  id: CreateReader
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateReader()
  nameWithType: XmlSerializer.CreateReader()
  fullName: System.Xml.Serialization.XmlSerializer.CreateReader()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: CreateReader
    path: src/System.Xml/XmlSerializer.cs
    startLine: 233
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nReturns an object used to read the XML document to be serialized.\n"
  example: []
  syntax:
    content: protected virtual XmlSerializationReader CreateReader()
    return:
      type: System.Xml.Serialization.XmlSerializationReader
      description: An System.Xml.Serialization.XmlSerializationReader used to read the XML document.
    content.vb: Protected Overridable Function CreateReader As XmlSerializationReader
  overload: System.Xml.Serialization.XmlSerializer.CreateReader*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xml.Serialization.XmlSerializer.CreateWriter
  commentId: M:System.Xml.Serialization.XmlSerializer.CreateWriter
  id: CreateWriter
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateWriter()
  nameWithType: XmlSerializer.CreateWriter()
  fullName: System.Xml.Serialization.XmlSerializer.CreateWriter()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: CreateWriter
    path: src/System.Xml/XmlSerializer.cs
    startLine: 250
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nWhen overridden in a derived class, returns a writer used to serialize the\nobject.\n"
  example: []
  syntax:
    content: protected virtual XmlSerializationWriter CreateWriter()
    return:
      type: System.Xml.Serialization.XmlSerializationWriter
      description: "\nAn instance that implements the System.Xml.Serialization.XmlSerializationWriter\nclass.\n"
    content.vb: Protected Overridable Function CreateWriter As XmlSerializationWriter
  overload: System.Xml.Serialization.XmlSerializer.CreateWriter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)
  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)
  id: Deserialize(System.Xml.Serialization.XmlSerializationReader)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(XmlSerializationReader)
  nameWithType: XmlSerializer.Deserialize(XmlSerializationReader)
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlSerializer.cs
    id: Deserialize
    path: src/System.Xml/XmlSerializer.cs
    startLine: 267
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml.Serialization
  summary: "\nDeserializes the XML document contained by the specified System.Xml.Serialization.XmlSerializationReader.\n"
  example: []
  syntax:
    content: protected virtual object Deserialize(XmlSerializationReader reader)
    parameters:
    - id: reader
      type: System.Xml.Serialization.XmlSerializationReader
      description: "\nThe System.Xml.Serialization.XmlSerializationReader that contains the XML\ndocument to deserialize.\n"
    return:
      type: System.Object
      description: The deserialized object.
    content.vb: Protected Overridable Function Deserialize(reader As XmlSerializationReader) As Object
  overload: System.Xml.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer
  name: MethodToSerializeUsingDataContractSerializer
  nameWithType: XmlSerializer.MethodToSerializeUsingDataContractSerializer
  fullName: System.Xml.Serialization.XmlSerializer.MethodToSerializeUsingDataContractSerializer
- uid: System.Func{System.Object,System.Type,System.String}
  commentId: T:System.Func{System.Object,System.Type,System.String}
  parent: System
  definition: System.Func`3
  name: Func<Object, Type, String>
  nameWithType: Func<Object, Type, String>
  fullName: System.Func<System.Object, System.Type, System.String>
  nameWithType.vb: Func(Of Object, Type, String)
  fullName.vb: System.Func(Of System.Object, System.Type, System.String)
  name.vb: Func(Of Object, Type, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  name: MethodToDeserializeUsingDataContractSerializer
  nameWithType: XmlSerializer.MethodToDeserializeUsingDataContractSerializer
  fullName: System.Xml.Serialization.XmlSerializer.MethodToDeserializeUsingDataContractSerializer
- uid: System.Func{System.String,System.Type,System.Object}
  commentId: T:System.Func{System.String,System.Type,System.Object}
  parent: System
  definition: System.Func`3
  name: Func<String, Type, Object>
  nameWithType: Func<String, Type, Object>
  fullName: System.Func<System.String, System.Type, System.Object>
  nameWithType.vb: Func(Of String, Type, Object)
  fullName.vb: System.Func(Of System.String, System.Type, System.Object)
  name.vb: Func(Of String, Type, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Serialization.XmlSerializer.#ctor*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.#ctor
  name: XmlSerializer
  nameWithType: XmlSerializer.XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializer.CanDeserialize*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.CanDeserialize
  name: CanDeserialize
  nameWithType: XmlSerializer.CanDeserialize
  fullName: System.Xml.Serialization.XmlSerializer.CanDeserialize
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml
  commentId: N:System.Xml
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.Serialization.XmlSerializer.Deserialize*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.Deserialize
  name: Deserialize
  nameWithType: XmlSerializer.Deserialize
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Xml.Serialization.XmlSerializer.Serialize*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.Serialize
  name: Serialize
  nameWithType: XmlSerializer.Serialize
  fullName: System.Xml.Serialization.XmlSerializer.Serialize
- uid: System.Xml.Serialization.XmlSerializationWriter
  commentId: T:System.Xml.Serialization.XmlSerializationWriter
  parent: System.Xml.Serialization
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter
  fullName: System.Xml.Serialization.XmlSerializationWriter
- uid: System.Xml.Serialization.XmlSerializer.CreateReader*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.CreateReader
  name: CreateReader
  nameWithType: XmlSerializer.CreateReader
  fullName: System.Xml.Serialization.XmlSerializer.CreateReader
- uid: System.Xml.Serialization.XmlSerializationReader
  commentId: T:System.Xml.Serialization.XmlSerializationReader
  parent: System.Xml.Serialization
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader
- uid: System.Xml.Serialization.XmlSerializer.CreateWriter*
  commentId: Overload:System.Xml.Serialization.XmlSerializer.CreateWriter
  name: CreateWriter
  nameWithType: XmlSerializer.CreateWriter
  fullName: System.Xml.Serialization.XmlSerializer.CreateWriter
