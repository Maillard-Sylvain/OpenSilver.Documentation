### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNameTable
  commentId: T:System.Xml.XmlNameTable
  id: XmlNameTable
  parent: System.Xml
  children:
  - System.Xml.XmlNameTable.#ctor
  - System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlNameTable.Add(System.String)
  - System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlNameTable.Get(System.String)
  langs:
  - csharp
  - vb
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlNameTable.cs
    id: XmlNameTable
    path: src/System.Xml/XmlNameTable.cs
    startLine: 27
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml
  summary: "\nTable of atomized string objects.\n"
  example: []
  syntax:
    content: public abstract class XmlNameTable
    content.vb: Public MustInherit Class XmlNameTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.XmlNameTable.#ctor
  commentId: M:System.Xml.XmlNameTable.#ctor
  id: '#ctor'
  parent: System.Xml.XmlNameTable
  langs:
  - csharp
  - vb
  name: XmlNameTable()
  nameWithType: XmlNameTable.XmlNameTable()
  fullName: System.Xml.XmlNameTable.XmlNameTable()
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlNameTable.cs
    id: .ctor
    path: src/System.Xml/XmlNameTable.cs
    startLine: 34
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml
  summary: "\nInitializes a new instance of the System.Xml.XmlNameTable class.\n"
  example: []
  syntax:
    content: protected XmlNameTable()
    content.vb: Protected Sub New
  overload: System.Xml.XmlNameTable.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlNameTable.Add(System.String)
  commentId: M:System.Xml.XmlNameTable.Add(System.String)
  id: Add(System.String)
  parent: System.Xml.XmlNameTable
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: XmlNameTable.Add(String)
  fullName: System.Xml.XmlNameTable.Add(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlNameTable.cs
    id: Add
    path: src/System.Xml/XmlNameTable.cs
    startLine: 48
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml
  summary: "\nWhen overridden in a derived class, atomizes the specified string and adds\nit to the XmlNameTable.\n"
  example: []
  syntax:
    content: public abstract string Add(string array)
    parameters:
    - id: array
      type: System.String
      description: The name to add.
    return:
      type: System.String
      description: The new atomized string or the existing one if it already exists.
    content.vb: Public MustOverride Function Add(array As String) As String
  overload: System.Xml.XmlNameTable.Add*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)
  id: Add(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlNameTable
  langs:
  - csharp
  - vb
  name: Add(Char[], Int32, Int32)
  nameWithType: XmlNameTable.Add(Char[], Int32, Int32)
  fullName: System.Xml.XmlNameTable.Add(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlNameTable.cs
    id: Add
    path: src/System.Xml/XmlNameTable.cs
    startLine: 68
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml
  summary: "\nWhen overridden in a derived class, atomizes the specified string and adds\nit to the XmlNameTable.\n"
  example: []
  syntax:
    content: public abstract string Add(char[] array, int offset, int length)
    parameters:
    - id: array
      type: System.Char[]
      description: The character array containing the name to add.
    - id: offset
      type: System.Int32
      description: Zero-based index into the array specifying the first character of the name.
    - id: length
      type: System.Int32
      description: The number of characters in the name.
    return:
      type: System.String
      description: "\nThe new atomized string or the existing one if it already exists. If length\nis zero, String.Empty is returned.\n"
    content.vb: Public MustOverride Function Add(array As Char(), offset As Integer, length As Integer) As String
  overload: System.Xml.XmlNameTable.Add*
  nameWithType.vb: XmlNameTable.Add(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Xml.XmlNameTable.Add(System.Char(), System.Int32, System.Int32)
  name.vb: Add(Char(), Int32, Int32)
- uid: System.Xml.XmlNameTable.Get(System.String)
  commentId: M:System.Xml.XmlNameTable.Get(System.String)
  id: Get(System.String)
  parent: System.Xml.XmlNameTable
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: XmlNameTable.Get(String)
  fullName: System.Xml.XmlNameTable.Get(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlNameTable.cs
    id: Get
    path: src/System.Xml/XmlNameTable.cs
    startLine: 79
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml
  summary: "\nWhen overridden in a derived class, gets the atomized string containing the\nsame value as the specified string.\n"
  example: []
  syntax:
    content: public abstract string Get(string array)
    parameters:
    - id: array
      type: System.String
      description: The name to look up.
    return:
      type: System.String
      description: The atomized string or null if the string has not already been atomized.
    content.vb: Public MustOverride Function Get(array As String) As String
  overload: System.Xml.XmlNameTable.Get*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)
  id: Get(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlNameTable
  langs:
  - csharp
  - vb
  name: Get(Char[], Int32, Int32)
  nameWithType: XmlNameTable.Get(Char[], Int32, Int32)
  fullName: System.Xml.XmlNameTable.Get(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/System.Xml/XmlNameTable.cs
    id: Get
    path: src/System.Xml/XmlNameTable.cs
    startLine: 99
  assemblies:
  - CSHTML5.Runtime
  namespace: System.Xml
  summary: "\nWhen overridden in a derived class, gets the atomized string containing the\nsame characters as the specified range of characters in the given array.\n"
  example: []
  syntax:
    content: public abstract string Get(char[] array, int offset, int length)
    parameters:
    - id: array
      type: System.Char[]
      description: The character array containing the name to look up.
    - id: offset
      type: System.Int32
      description: The zero-based index into the array specifying the first character of the name.
    - id: length
      type: System.Int32
      description: The number of characters in the name.
    return:
      type: System.String
      description: "\nThe atomized string or null if the string has not already been atomized.\nIf length is zero, String.Empty is returned.\n"
    content.vb: Public MustOverride Function Get(array As Char(), offset As Integer, length As Integer) As String
  overload: System.Xml.XmlNameTable.Get*
  nameWithType.vb: XmlNameTable.Get(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Xml.XmlNameTable.Get(System.Char(), System.Int32, System.Int32)
  name.vb: Get(Char(), Int32, Int32)
references:
- uid: System.Xml
  commentId: N:System.Xml
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.XmlNameTable.#ctor*
  commentId: Overload:System.Xml.XmlNameTable.#ctor
  name: XmlNameTable
  nameWithType: XmlNameTable.XmlNameTable
  fullName: System.Xml.XmlNameTable.XmlNameTable
- uid: System.Xml.XmlNameTable.Add*
  commentId: Overload:System.Xml.XmlNameTable.Add
  name: Add
  nameWithType: XmlNameTable.Add
  fullName: System.Xml.XmlNameTable.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlNameTable.Get*
  commentId: Overload:System.Xml.XmlNameTable.Get
  name: Get
  nameWithType: XmlNameTable.Get
  fullName: System.Xml.XmlNameTable.Get
