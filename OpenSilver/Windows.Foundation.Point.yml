### YamlMime:ManagedReference
items:
- uid: Windows.Foundation.Point
  commentId: T:Windows.Foundation.Point
  id: Point
  parent: Windows.Foundation
  children:
  - Windows.Foundation.Point.#ctor(System.Double,System.Double)
  - Windows.Foundation.Point.Equals(System.Object)
  - Windows.Foundation.Point.Equals(Windows.Foundation.Point)
  - Windows.Foundation.Point.GetHashCode
  - Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)
  - Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)
  - Windows.Foundation.Point.Parse(System.String)
  - Windows.Foundation.Point.ToString
  - Windows.Foundation.Point.ToString(System.String,System.IFormatProvider)
  - Windows.Foundation.Point.X
  - Windows.Foundation.Point.Y
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: Point
  fullName: Windows.Foundation.Point
  type: Struct
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: Point
    path: src/Windows.Foundation/Point.cs
    startLine: 35
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nRepresents an x- and y-coordinate pair in two-dimensional\nspace. Can also represent a logical point for certain property usages.\n"
  example: []
  syntax:
    content: public struct Point
    content.vb: Public Structure Point
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Windows.Foundation.Point.#ctor(System.Double,System.Double)
  commentId: M:Windows.Foundation.Point.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Point(Double, Double)
  nameWithType: Point.Point(Double, Double)
  fullName: Windows.Foundation.Point.Point(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: .ctor
    path: src/Windows.Foundation/Point.cs
    startLine: 53
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nInitializes a Windows.Foundation.Point structure that\ncontains the specified values.\n"
  example: []
  syntax:
    content: public Point(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: The x-coordinate value of the Windows.Foundation.Point structure.
    - id: y
      type: System.Double
      description: The y-coordinate value of the Windows.Foundation.Point structure.
    content.vb: Public Sub New(x As Double, y As Double)
  overload: Windows.Foundation.Point.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)
  commentId: M:Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)
  id: op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Inequality(Point, Point)
  nameWithType: Point.Inequality(Point, Point)
  fullName: Windows.Foundation.Point.Inequality(Windows.Foundation.Point, Windows.Foundation.Point)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: op_Inequality
    path: src/Windows.Foundation/Point.cs
    startLine: 69
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares two Windows.Foundation.Point structures for inequality\n"
  example: []
  syntax:
    content: public static bool operator !=(Point point1, Point point2)
    parameters:
    - id: point1
      type: Windows.Foundation.Point
      description: The first point to compare.
    - id: point2
      type: Windows.Foundation.Point
      description: The second point to compare.
    return:
      type: System.Boolean
      description: "\ntrue if point1 and point2 have different Windows.Foundation.Point.X or Windows.Foundation.Point.Y\nvalues; false if point1 and point2 have the same Windows.Foundation.Point.X\nand Windows.Foundation.Point.Y values.\n"
    content.vb: Public Shared Operator <>(point1 As Point, point2 As Point) As Boolean
  overload: Windows.Foundation.Point.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)
  commentId: M:Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)
  id: op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Equality(Point, Point)
  nameWithType: Point.Equality(Point, Point)
  fullName: Windows.Foundation.Point.Equality(Windows.Foundation.Point, Windows.Foundation.Point)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: op_Equality
    path: src/Windows.Foundation/Point.cs
    startLine: 84
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares two Windows.Foundation.Point structures for equality\n"
  example: []
  syntax:
    content: public static bool operator ==(Point point1, Point point2)
    parameters:
    - id: point1
      type: Windows.Foundation.Point
      description: The first point to compare.
    - id: point2
      type: Windows.Foundation.Point
      description: The second point to compare.
    return:
      type: System.Boolean
      description: "\ntrue if both the Windows.Foundation.Point.X and Windows.Foundation.Point.Y\nvalues of point1 and point2 are equal; otherwise, false.\n"
    content.vb: Public Shared Operator =(point1 As Point, point2 As Point) As Boolean
  overload: Windows.Foundation.Point.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.Foundation.Point.X
  commentId: P:Windows.Foundation.Point.X
  id: X
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Point.X
  fullName: Windows.Foundation.Point.X
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: X
    path: src/Windows.Foundation/Point.cs
    startLine: 94
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets or sets the Windows.Foundation.Point.X-coordinate\nvalue of this Windows.Foundation.Point structure.\n"
  example: []
  syntax:
    content: public double X { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property X As Double
  overload: Windows.Foundation.Point.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Point.Y
  commentId: P:Windows.Foundation.Point.Y
  id: Y
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Point.Y
  fullName: Windows.Foundation.Point.Y
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: Y
    path: src/Windows.Foundation/Point.cs
    startLine: 109
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets or sets the Windows.Foundation.Point.Y-coordinate\nvalue of this Windows.Foundation.Point.\n"
  example: []
  syntax:
    content: public double Y { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Y As Double
  overload: Windows.Foundation.Point.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Point.Equals(System.Object)
  commentId: M:Windows.Foundation.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: Windows.Foundation.Point.Equals(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: Equals
    path: src/Windows.Foundation/Point.cs
    startLine: 132
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nDetermines whether the specified object is a Windows.Foundation.Point\nand whether it contains the same values as this Windows.Foundation.Point.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object to compare.
    return:
      type: System.Boolean
      description: "\ntrue if obj is a Windows.Foundation.Point and contains the same Windows.Foundation.Point.X\nand Windows.Foundation.Point.Y values as this Windows.Foundation.Point; otherwise,\nfalse.\n"
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Windows.Foundation.Point.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.Foundation.Point.Equals(Windows.Foundation.Point)
  commentId: M:Windows.Foundation.Point.Equals(Windows.Foundation.Point)
  id: Equals(Windows.Foundation.Point)
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Equals(Point)
  nameWithType: Point.Equals(Point)
  fullName: Windows.Foundation.Point.Equals(Windows.Foundation.Point)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: Equals
    path: src/Windows.Foundation/Point.cs
    startLine: 146
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares two Windows.Foundation.Point structures for\nequality.\n"
  example: []
  syntax:
    content: public bool Equals(Point value)
    parameters:
    - id: value
      type: Windows.Foundation.Point
      description: The point to compare to this instance.
    return:
      type: System.Boolean
      description: "\ntrue if both Windows.Foundation.Point structures contain the same Windows.Foundation.Point.X\nand Windows.Foundation.Point.Y values; otherwise, false.\n"
    content.vb: Public Function Equals(value As Point) As Boolean
  overload: Windows.Foundation.Point.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Point.GetHashCode
  commentId: M:Windows.Foundation.Point.GetHashCode
  id: GetHashCode
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: Windows.Foundation.Point.GetHashCode()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: GetHashCode
    path: src/Windows.Foundation/Point.cs
    startLine: 155
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nReturns the hash code for this Windows.Foundation.Point.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code for this Windows.Foundation.Point.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Windows.Foundation.Point.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.Foundation.Point.ToString
  commentId: M:Windows.Foundation.Point.ToString
  id: ToString
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Point.ToString()
  fullName: Windows.Foundation.Point.ToString()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: ToString
    path: src/Windows.Foundation/Point.cs
    startLine: 168
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCreates a System.String representation of this Windows.Foundation.Point.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA System.String containing the Windows.Foundation.Point.X and Windows.Foundation.Point.Y\nvalues of this Windows.Foundation.Point structure.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Windows.Foundation.Point.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.Foundation.Point.Parse(System.String)
  commentId: M:Windows.Foundation.Point.Parse(System.String)
  id: Parse(System.String)
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Point.Parse(String)
  fullName: Windows.Foundation.Point.Parse(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: Parse
    path: src/Windows.Foundation/Point.cs
    startLine: 194
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  syntax:
    content: public static Point Parse(string pointAsString)
    parameters:
    - id: pointAsString
      type: System.String
    return:
      type: Windows.Foundation.Point
    content.vb: Public Shared Function Parse(pointAsString As String) As Point
  overload: Windows.Foundation.Point.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.Foundation.Point.ToString(System.String,System.IFormatProvider)
  commentId: M:Windows.Foundation.Point.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: Windows.Foundation.Point
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  nameWithType: Point.ToString(String, IFormatProvider)
  fullName: Windows.Foundation.Point.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Point.cs
    id: ToString
    path: src/Windows.Foundation/Point.cs
    startLine: 214
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: Windows.Foundation.Point.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: Windows.Foundation.Point.#ctor*
  commentId: Overload:Windows.Foundation.Point.#ctor
  name: Point
  nameWithType: Point.Point
  fullName: Windows.Foundation.Point.Point
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Windows.Foundation.Point.op_Inequality*
  commentId: Overload:Windows.Foundation.Point.op_Inequality
  name: Inequality
  nameWithType: Point.Inequality
  fullName: Windows.Foundation.Point.Inequality
- uid: Windows.Foundation.Point
  commentId: T:Windows.Foundation.Point
  parent: Windows.Foundation
  name: Point
  nameWithType: Point
  fullName: Windows.Foundation.Point
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Windows.Foundation.Point.op_Equality*
  commentId: Overload:Windows.Foundation.Point.op_Equality
  name: Equality
  nameWithType: Point.Equality
  fullName: Windows.Foundation.Point.Equality
- uid: Windows.Foundation.Point.X*
  commentId: Overload:Windows.Foundation.Point.X
  name: X
  nameWithType: Point.X
  fullName: Windows.Foundation.Point.X
- uid: Windows.Foundation.Point.Y*
  commentId: Overload:Windows.Foundation.Point.Y
  name: Y
  nameWithType: Point.Y
  fullName: Windows.Foundation.Point.Y
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.Point.Equals*
  commentId: Overload:Windows.Foundation.Point.Equals
  name: Equals
  nameWithType: Point.Equals
  fullName: Windows.Foundation.Point.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.Point.GetHashCode*
  commentId: Overload:Windows.Foundation.Point.GetHashCode
  name: GetHashCode
  nameWithType: Point.GetHashCode
  fullName: Windows.Foundation.Point.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.Point.ToString*
  commentId: Overload:Windows.Foundation.Point.ToString
  name: ToString
  nameWithType: Point.ToString
  fullName: Windows.Foundation.Point.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Windows.Foundation.Point.Parse*
  commentId: Overload:Windows.Foundation.Point.Parse
  name: Parse
  nameWithType: Point.Parse
  fullName: Windows.Foundation.Point.Parse
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
