### YamlMime:ManagedReference
items:
- uid: Windows.Foundation.Size
  commentId: T:Windows.Foundation.Size
  id: Size
  parent: Windows.Foundation
  children:
  - Windows.Foundation.Size.#ctor(System.Double,System.Double)
  - Windows.Foundation.Size.Empty
  - Windows.Foundation.Size.Equals(System.Object)
  - Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  - Windows.Foundation.Size.Equals(Windows.Foundation.Size,Windows.Foundation.Size)
  - Windows.Foundation.Size.GetHashCode
  - Windows.Foundation.Size.Height
  - Windows.Foundation.Size.IsEmpty
  - Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  - Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  - Windows.Foundation.Size.Parse(System.String)
  - Windows.Foundation.Size.ToString
  - Windows.Foundation.Size.Width
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Size
  fullName: Windows.Foundation.Size
  type: Struct
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Size
    path: src/Windows.Foundation/Size.cs
    startLine: 37
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nDescribes the width and height of an object.\n"
  example: []
  syntax:
    content: public struct Size
    content.vb: Public Structure Size
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Windows.Foundation.Size.#ctor(System.Double,System.Double)
  commentId: M:Windows.Foundation.Size.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Size(Double, Double)
  nameWithType: Size.Size(Double, Double)
  fullName: Windows.Foundation.Size.Size(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: .ctor
    path: src/Windows.Foundation/Size.cs
    startLine: 61
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nInitializes a new instance of the Windows.Foundation.Size\nstructure and assigns it an initial width and height.\n"
  example: []
  syntax:
    content: public Size(double width, double height)
    parameters:
    - id: width
      type: System.Double
      description: The initial width of the instance of Windows.Foundation.Size.
    - id: height
      type: System.Double
      description: The initial height of the instance of Windows.Foundation.Size.
    content.vb: Public Sub New(width As Double, height As Double)
  overload: Windows.Foundation.Size.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  id: op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Inequality(Size, Size)
  nameWithType: Size.Inequality(Size, Size)
  fullName: Windows.Foundation.Size.Inequality(Windows.Foundation.Size, Windows.Foundation.Size)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: op_Inequality
    path: src/Windows.Foundation/Size.cs
    startLine: 88
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares two instances of Windows.Foundation.Size for\ninequality."
  example: []
  syntax:
    content: public static bool operator !=(Size size1, Size size2)
    parameters:
    - id: size1
      type: Windows.Foundation.Size
      description: The first instance of Windows.Foundation.Size to compare.
    - id: size2
      type: Windows.Foundation.Size
      description: The second instance of Windows.Foundation.Size to compare.
    return:
      type: System.Boolean
      description: "\ntrue if the instances of Windows.Foundation.Size are not equal; otherwise\nfalse.\n"
    content.vb: Public Shared Operator <>(size1 As Size, size2 As Size) As Boolean
  overload: Windows.Foundation.Size.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  id: op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equality(Size, Size)
  nameWithType: Size.Equality(Size, Size)
  fullName: Windows.Foundation.Size.Equality(Windows.Foundation.Size, Windows.Foundation.Size)
  type: Operator
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: op_Equality
    path: src/Windows.Foundation/Size.cs
    startLine: 102
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares two instances of Windows.Foundation.Size for\nequality."
  example: []
  syntax:
    content: public static bool operator ==(Size size1, Size size2)
    parameters:
    - id: size1
      type: Windows.Foundation.Size
      description: The first instance of Windows.Foundation.Size to compare.
    - id: size2
      type: Windows.Foundation.Size
      description: The second instance of Windows.Foundation.Size to compare.
    return:
      type: System.Boolean
      description: "\ntrue if the two instances of Windows.Foundation.Size are equal; otherwise\nfalse.\n"
    content.vb: Public Shared Operator =(size1 As Size, size2 As Size) As Boolean
  overload: Windows.Foundation.Size.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.Foundation.Size.Empty
  commentId: P:Windows.Foundation.Size.Empty
  id: Empty
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Size.Empty
  fullName: Windows.Foundation.Size.Empty
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Empty
    path: src/Windows.Foundation/Size.cs
    startLine: 110
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets a value that represents a static empty Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public static Size Empty { get; }
    parameters: []
    return:
      type: Windows.Foundation.Size
    content.vb: Public Shared ReadOnly Property Empty As Size
  overload: Windows.Foundation.Size.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.Foundation.Size.Height
  commentId: P:Windows.Foundation.Size.Height
  id: Height
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Size.Height
  fullName: Windows.Foundation.Size.Height
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Height
    path: src/Windows.Foundation/Size.cs
    startLine: 121
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets or sets the height of this instance of Windows.Foundation.Size in pixels. The default is 0. The value cannot be negative.\n"
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: Windows.Foundation.Size.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Size.IsEmpty
  commentId: P:Windows.Foundation.Size.IsEmpty
  id: IsEmpty
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: Windows.Foundation.Size.IsEmpty
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: IsEmpty
    path: src/Windows.Foundation/Size.cs
    startLine: 145
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets a value that indicates whether this instance of\nWindows.Foundation.Size is Windows.Foundation.Size.Empty.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: Windows.Foundation.Size.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.Foundation.Size.Width
  commentId: P:Windows.Foundation.Size.Width
  id: Width
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Size.Width
  fullName: Windows.Foundation.Size.Width
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Width
    path: src/Windows.Foundation/Size.cs
    startLine: 156
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets or sets the width of this instance of Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public double Width { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Width As Double
  overload: Windows.Foundation.Size.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Size.Equals(Windows.Foundation.Size,Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.Equals(Windows.Foundation.Size,Windows.Foundation.Size)
  id: Equals(Windows.Foundation.Size,Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equals(Size, Size)
  nameWithType: Size.Equals(Size, Size)
  fullName: Windows.Foundation.Size.Equals(Windows.Foundation.Size, Windows.Foundation.Size)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Equals
    path: src/Windows.Foundation/Size.cs
    startLine: 176
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  syntax:
    content: public static bool Equals(Size size1, Size size2)
    parameters:
    - id: size1
      type: Windows.Foundation.Size
    - id: size2
      type: Windows.Foundation.Size
    return:
      type: System.Boolean
    content.vb: Public Shared Function Equals(size1 As Size, size2 As Size) As Boolean
  overload: Windows.Foundation.Size.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.Foundation.Size.Equals(System.Object)
  commentId: M:Windows.Foundation.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: Windows.Foundation.Size.Equals(System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Equals
    path: src/Windows.Foundation/Size.cs
    startLine: 194
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares an object to an instance of Windows.Foundation.Size\nfor equality.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: The System.Object to compare.
    return:
      type: System.Boolean
      description: true if the sizes are equal; otherwise, false.
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Windows.Foundation.Size.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  id: Equals(Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equals(Size)
  nameWithType: Size.Equals(Size)
  fullName: Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Equals
    path: src/Windows.Foundation/Size.cs
    startLine: 210
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nCompares a value to an instance of Windows.Foundation.Size\nfor equality.\n"
  example: []
  syntax:
    content: public bool Equals(Size value)
    parameters:
    - id: value
      type: Windows.Foundation.Size
      description: The size to compare to this current instance of Windows.Foundation.Size.
    return:
      type: System.Boolean
      description: true if the instances of Windows.Foundation.Size are equal; otherwise, false.
    content.vb: Public Function Equals(value As Size) As Boolean
  overload: Windows.Foundation.Size.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.Foundation.Size.GetHashCode
  commentId: M:Windows.Foundation.Size.GetHashCode
  id: GetHashCode
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: Windows.Foundation.Size.GetHashCode()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: GetHashCode
    path: src/Windows.Foundation/Size.cs
    startLine: 219
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nGets the hash code for this instance of Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code for this instance of Windows.Foundation.Size.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Windows.Foundation.Size.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.Foundation.Size.ToString
  commentId: M:Windows.Foundation.Size.ToString
  id: ToString
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Size.ToString()
  fullName: Windows.Foundation.Size.ToString()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: ToString
    path: src/Windows.Foundation/Size.cs
    startLine: 236
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  summary: "\nReturns a string representation of this Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of this Windows.Foundation.Size.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Windows.Foundation.Size.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.Foundation.Size.Parse(System.String)
  commentId: M:Windows.Foundation.Size.Parse(System.String)
  id: Parse(System.String)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Size.Parse(String)
  fullName: Windows.Foundation.Size.Parse(System.String)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.Foundation/Size.cs
    id: Parse
    path: src/Windows.Foundation/Size.cs
    startLine: 245
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.Foundation
  syntax:
    content: public static Size Parse(string sizeAsString)
    parameters:
    - id: sizeAsString
      type: System.String
    return:
      type: Windows.Foundation.Size
    content.vb: Public Shared Function Parse(sizeAsString As String) As Size
  overload: Windows.Foundation.Size.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: Windows.Foundation.Size.#ctor*
  commentId: Overload:Windows.Foundation.Size.#ctor
  name: Size
  nameWithType: Size.Size
  fullName: Windows.Foundation.Size.Size
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Windows.Foundation.Size.op_Inequality*
  commentId: Overload:Windows.Foundation.Size.op_Inequality
  name: Inequality
  nameWithType: Size.Inequality
  fullName: Windows.Foundation.Size.Inequality
- uid: Windows.Foundation.Size
  commentId: T:Windows.Foundation.Size
  parent: Windows.Foundation
  name: Size
  nameWithType: Size
  fullName: Windows.Foundation.Size
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Windows.Foundation.Size.op_Equality*
  commentId: Overload:Windows.Foundation.Size.op_Equality
  name: Equality
  nameWithType: Size.Equality
  fullName: Windows.Foundation.Size.Equality
- uid: Windows.Foundation.Size.Empty*
  commentId: Overload:Windows.Foundation.Size.Empty
  name: Empty
  nameWithType: Size.Empty
  fullName: Windows.Foundation.Size.Empty
- uid: Windows.Foundation.Size.Height*
  commentId: Overload:Windows.Foundation.Size.Height
  name: Height
  nameWithType: Size.Height
  fullName: Windows.Foundation.Size.Height
- uid: Windows.Foundation.Size.IsEmpty*
  commentId: Overload:Windows.Foundation.Size.IsEmpty
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: Windows.Foundation.Size.IsEmpty
- uid: Windows.Foundation.Size.Width*
  commentId: Overload:Windows.Foundation.Size.Width
  name: Width
  nameWithType: Size.Width
  fullName: Windows.Foundation.Size.Width
- uid: Windows.Foundation.Size.Equals*
  commentId: Overload:Windows.Foundation.Size.Equals
  name: Equals
  nameWithType: Size.Equals
  fullName: Windows.Foundation.Size.Equals
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.Size.GetHashCode*
  commentId: Overload:Windows.Foundation.Size.GetHashCode
  name: GetHashCode
  nameWithType: Size.GetHashCode
  fullName: Windows.Foundation.Size.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.Size.ToString*
  commentId: Overload:Windows.Foundation.Size.ToString
  name: ToString
  nameWithType: Size.ToString
  fullName: Windows.Foundation.Size.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Windows.Foundation.Size.Parse*
  commentId: Overload:Windows.Foundation.Size.Parse
  name: Parse
  nameWithType: Size.Parse
  fullName: Windows.Foundation.Size.Parse
