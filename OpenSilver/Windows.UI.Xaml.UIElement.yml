### YamlMime:ManagedReference
items:
- uid: Windows.UI.Xaml.UIElement
  commentId: T:Windows.UI.Xaml.UIElement
  id: UIElement
  parent: Windows.UI.Xaml
  children:
  - Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)
  - Windows.UI.Xaml.UIElement.AllowDrop
  - Windows.UI.Xaml.UIElement.AllowDropProperty
  - Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove
  - Windows.UI.Xaml.UIElement.AllowScrollOnTouchMoveProperty
  - Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)
  - Windows.UI.Xaml.UIElement.ClipToBounds
  - Windows.UI.Xaml.UIElement.ClipToBoundsProperty
  - Windows.UI.Xaml.UIElement.CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  - Windows.UI.Xaml.UIElement.CreateDomElement(System.Object,System.Object@)
  - Windows.UI.Xaml.UIElement.Effect
  - Windows.UI.Xaml.UIElement.EffectProperty
  - Windows.UI.Xaml.UIElement.GetChildsWrapper(Windows.UI.Xaml.UIElement)
  - Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild(Windows.UI.Xaml.UIElement)
  - Windows.UI.Xaml.UIElement.GotFocus
  - Windows.UI.Xaml.UIElement.GotFocusEvent
  - Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents
  - Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents
  - Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree
  - Windows.UI.Xaml.UIElement.IsHitTestVisible
  - Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty
  - Windows.UI.Xaml.UIElement.IsPointerCaptured
  - Windows.UI.Xaml.UIElement.KeyDown
  - Windows.UI.Xaml.UIElement.KeyDownEvent
  - Windows.UI.Xaml.UIElement.KeyUp
  - Windows.UI.Xaml.UIElement.KeyUpEvent
  - Windows.UI.Xaml.UIElement.LostFocus
  - Windows.UI.Xaml.UIElement.LostFocusEvent
  - Windows.UI.Xaml.UIElement.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)
  - Windows.UI.Xaml.UIElement.Opacity
  - Windows.UI.Xaml.UIElement.OpacityProperty
  - Windows.UI.Xaml.UIElement.PointerCaptureLost
  - Windows.UI.Xaml.UIElement.PointerEntered
  - Windows.UI.Xaml.UIElement.PointerEnteredEvent
  - Windows.UI.Xaml.UIElement.PointerExited
  - Windows.UI.Xaml.UIElement.PointerExitedEvent
  - Windows.UI.Xaml.UIElement.PointerMoved
  - Windows.UI.Xaml.UIElement.PointerMovedEvent
  - Windows.UI.Xaml.UIElement.PointerPressed
  - Windows.UI.Xaml.UIElement.PointerPressedEvent
  - Windows.UI.Xaml.UIElement.PointerReleased
  - Windows.UI.Xaml.UIElement.PointerReleasedEvent
  - Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)
  - Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)
  - Windows.UI.Xaml.UIElement.RenderTransform
  - Windows.UI.Xaml.UIElement.RenderTransformOrigin
  - Windows.UI.Xaml.UIElement.RenderTransformOriginProperty
  - Windows.UI.Xaml.UIElement.RenderTransformProperty
  - Windows.UI.Xaml.UIElement.RightTapped
  - Windows.UI.Xaml.UIElement.RightTappedEvent
  - Windows.UI.Xaml.UIElement.Tapped
  - Windows.UI.Xaml.UIElement.TappedEvent
  - Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)
  - Windows.UI.Xaml.UIElement.UseLayoutRounding
  - Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty
  - Windows.UI.Xaml.UIElement.Visibility
  - Windows.UI.Xaml.UIElement.VisibilityProperty
  - Windows.UI.Xaml.UIElement.XamlSourcePath
  langs:
  - csharp
  - vb
  name: UIElement
  nameWithType: UIElement
  fullName: Windows.UI.Xaml.UIElement
  type: Class
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: UIElement
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 52
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nUIElement is a base class for most of the objects that have visual appearance\nand can process basic input in a user interface.\n"
  example: []
  syntax:
    content: 'public abstract class UIElement : DependencyObject'
    content.vb: >-
      Public MustInherit Class UIElement

          Inherits DependencyObject
  inheritance:
  - System.Object
  - Windows.UI.Xaml.DependencyObject
  derivedClasses:
  - Windows.UI.Xaml.FrameworkElement
  inheritedMembers:
  - Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)
  - Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  - Windows.UI.Xaml.DependencyObject.SetCurrentValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  - Windows.UI.Xaml.DependencyObject.CoerceCurrentValue(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.PropertyMetadata)
  - Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
  - Windows.UI.Xaml.DependencyObject.GetVisualStateValue(Windows.UI.Xaml.DependencyProperty)
  - Windows.UI.Xaml.DependencyObject.SetVisualStateValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  - Windows.UI.Xaml.DependencyObject.SetAnimationValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  - Windows.UI.Xaml.DependencyObject.GetAnimationValue(Windows.UI.Xaml.DependencyProperty)
  - Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  - Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)
  - Windows.UI.Xaml.DependencyObject.CoerceValue(Windows.UI.Xaml.DependencyProperty)
  - Windows.UI.Xaml.DependencyObject.Dispatcher
  - Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Windows.UI.Xaml.UIElement.XamlSourcePath
  commentId: F:Windows.UI.Xaml.UIElement.XamlSourcePath
  id: XamlSourcePath
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: XamlSourcePath
  nameWithType: UIElement.XamlSourcePath
  fullName: Windows.UI.Xaml.UIElement.XamlSourcePath
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: XamlSourcePath
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 90
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public string XamlSourcePath
    return:
      type: System.String
    content.vb: Public XamlSourcePath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.ClipToBounds
  commentId: P:Windows.UI.Xaml.UIElement.ClipToBounds
  id: ClipToBounds
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
  fullName: Windows.UI.Xaml.UIElement.ClipToBounds
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: ClipToBounds
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 141
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets a value indicating whether to clip the content of this element\n(or content coming from the child elements of this element) to fit into the\nsize of the containing element. This is a dependency property.\n"
  example: []
  syntax:
    content: public bool ClipToBounds { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClipToBounds As Boolean
  overload: Windows.UI.Xaml.UIElement.ClipToBounds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.ClipToBoundsProperty
  commentId: F:Windows.UI.Xaml.UIElement.ClipToBoundsProperty
  id: ClipToBoundsProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: ClipToBoundsProperty
  nameWithType: UIElement.ClipToBoundsProperty
  fullName: Windows.UI.Xaml.UIElement.ClipToBoundsProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: ClipToBoundsProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 147
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly DependencyProperty ClipToBoundsProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.CreateDomElement(System.Object,System.Object@)
  commentId: M:Windows.UI.Xaml.UIElement.CreateDomElement(System.Object,System.Object@)
  id: CreateDomElement(System.Object,System.Object@)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: CreateDomElement(Object, out Object)
  nameWithType: UIElement.CreateDomElement(Object, out Object)
  fullName: Windows.UI.Xaml.UIElement.CreateDomElement(System.Object, out System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: CreateDomElement
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 183
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nWhen overriden, creates the dom elements designed to represent an instance of an UIElement and defines the place where its child(ren) will be added.\n"
  example: []
  syntax:
    content: public abstract object CreateDomElement(object parentRef, out object domElementWhereToPlaceChildren)
    parameters:
    - id: parentRef
      type: System.Object
      description: The parent of the UIElement
    - id: domElementWhereToPlaceChildren
      type: System.Object
      description: The dom element where the UIElement&apos;s children will be added.
    return:
      type: System.Object
      description: The &quot;root&quot; dom element of the UIElement.
    content.vb: Public MustOverride Function CreateDomElement(parentRef As Object, ByRef domElementWhereToPlaceChildren As Object) As Object
  overload: Windows.UI.Xaml.UIElement.CreateDomElement*
  nameWithType.vb: UIElement.CreateDomElement(Object, ByRef Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Windows.UI.Xaml.UIElement.CreateDomElement(System.Object, ByRef System.Object)
  name.vb: CreateDomElement(Object, ByRef Object)
- uid: Windows.UI.Xaml.UIElement.CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  commentId: M:Windows.UI.Xaml.UIElement.CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  id: CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: CreateDomChildWrapper(Object, out Object, Int32)
  nameWithType: UIElement.CreateDomChildWrapper(Object, out Object, Int32)
  fullName: Windows.UI.Xaml.UIElement.CreateDomChildWrapper(System.Object, out System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: CreateDomChildWrapper
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 192
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nWhen overriden, creates a dom wrapper for each child that is added to the UIElement.\n"
  example: []
  syntax:
    content: public virtual object CreateDomChildWrapper(object parentRef, out object domElementWhereToPlaceChild, int index = -1)
    parameters:
    - id: parentRef
      type: System.Object
      description: ''
    - id: domElementWhereToPlaceChild
      type: System.Object
      description: ''
    - id: index
      type: System.Int32
      description: The index for the position in which to add the child.
    return:
      type: System.Object
      description: ''
    content.vb: Public Overridable Function CreateDomChildWrapper(parentRef As Object, ByRef domElementWhereToPlaceChild As Object, index As Integer = -1) As Object
  overload: Windows.UI.Xaml.UIElement.CreateDomChildWrapper*
  nameWithType.vb: UIElement.CreateDomChildWrapper(Object, ByRef Object, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Windows.UI.Xaml.UIElement.CreateDomChildWrapper(System.Object, ByRef System.Object, System.Int32)
  name.vb: CreateDomChildWrapper(Object, ByRef Object, Int32)
- uid: Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild(Windows.UI.Xaml.UIElement)
  commentId: M:Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild(Windows.UI.Xaml.UIElement)
  id: GetDomElementWhereToPlaceChild(Windows.UI.Xaml.UIElement)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: GetDomElementWhereToPlaceChild(UIElement)
  nameWithType: UIElement.GetDomElementWhereToPlaceChild(UIElement)
  fullName: Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild(Windows.UI.Xaml.UIElement)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: GetDomElementWhereToPlaceChild
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 199
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public virtual dynamic GetDomElementWhereToPlaceChild(UIElement child)
    parameters:
    - id: child
      type: Windows.UI.Xaml.UIElement
    return:
      type: System.Object
    content.vb: Public Overridable Function GetDomElementWhereToPlaceChild(child As UIElement) As Object
  overload: Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Windows.UI.Xaml.UIElement.GetChildsWrapper(Windows.UI.Xaml.UIElement)
  commentId: M:Windows.UI.Xaml.UIElement.GetChildsWrapper(Windows.UI.Xaml.UIElement)
  id: GetChildsWrapper(Windows.UI.Xaml.UIElement)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: GetChildsWrapper(UIElement)
  nameWithType: UIElement.GetChildsWrapper(UIElement)
  fullName: Windows.UI.Xaml.UIElement.GetChildsWrapper(Windows.UI.Xaml.UIElement)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: GetChildsWrapper
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 204
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public dynamic GetChildsWrapper(UIElement child)
    parameters:
    - id: child
      type: Windows.UI.Xaml.UIElement
    return:
      type: System.Object
    content.vb: Public Function GetChildsWrapper(child As UIElement) As Object
  overload: Windows.UI.Xaml.UIElement.GetChildsWrapper*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.Effect
  commentId: P:Windows.UI.Xaml.UIElement.Effect
  id: Effect
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: UIElement.Effect
  fullName: Windows.UI.Xaml.UIElement.Effect
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: Effect
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 224
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public Effect Effect { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
    content.vb: Public Property Effect As Effect
  overload: Windows.UI.Xaml.UIElement.Effect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.EffectProperty
  commentId: F:Windows.UI.Xaml.UIElement.EffectProperty
  id: EffectProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: EffectProperty
  nameWithType: UIElement.EffectProperty
  fullName: Windows.UI.Xaml.UIElement.EffectProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: EffectProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 230
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly DependencyProperty EffectProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly EffectProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.RenderTransform
  commentId: P:Windows.UI.Xaml.UIElement.RenderTransform
  id: RenderTransform
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
  fullName: Windows.UI.Xaml.UIElement.RenderTransform
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: RenderTransform
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 262
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets transform information that affects the rendering position of\na UIElement.\n"
  example: []
  syntax:
    content: public Transform RenderTransform { get; set; }
    parameters: []
    return:
      type: Windows.UI.Xaml.Media.Transform
    content.vb: Public Property RenderTransform As Transform
  overload: Windows.UI.Xaml.UIElement.RenderTransform*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.RenderTransformProperty
  commentId: F:Windows.UI.Xaml.UIElement.RenderTransformProperty
  id: RenderTransformProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransformProperty
  nameWithType: UIElement.RenderTransformProperty
  fullName: Windows.UI.Xaml.UIElement.RenderTransformProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: RenderTransformProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 271
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the RenderTransform dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty RenderTransformProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly RenderTransformProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.RenderTransformOrigin
  commentId: P:Windows.UI.Xaml.UIElement.RenderTransformOrigin
  id: RenderTransformOrigin
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
  fullName: Windows.UI.Xaml.UIElement.RenderTransformOrigin
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: RenderTransformOrigin
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 330
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public Point RenderTransformOrigin { get; set; }
    parameters: []
    return:
      type: Windows.Foundation.Point
    content.vb: Public Property RenderTransformOrigin As Point
  overload: Windows.UI.Xaml.UIElement.RenderTransformOrigin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.RenderTransformOriginProperty
  commentId: F:Windows.UI.Xaml.UIElement.RenderTransformOriginProperty
  id: RenderTransformOriginProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransformOriginProperty
  nameWithType: UIElement.RenderTransformOriginProperty
  fullName: Windows.UI.Xaml.UIElement.RenderTransformOriginProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: RenderTransformOriginProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 336
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly DependencyProperty RenderTransformOriginProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.UseLayoutRounding
  commentId: P:Windows.UI.Xaml.UIElement.UseLayoutRounding
  id: UseLayoutRounding
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: UseLayoutRounding
  nameWithType: UIElement.UseLayoutRounding
  fullName: Windows.UI.Xaml.UIElement.UseLayoutRounding
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: UseLayoutRounding
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 400
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets a value that determines whether rendering for the object and\nits visual subtree should use rounding behavior that aligns rendering to\nwhole pixels.\n"
  example: []
  syntax:
    content: public bool UseLayoutRounding { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseLayoutRounding As Boolean
  overload: Windows.UI.Xaml.UIElement.UseLayoutRounding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty
  commentId: F:Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty
  id: UseLayoutRoundingProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: UseLayoutRoundingProperty
  nameWithType: UIElement.UseLayoutRoundingProperty
  fullName: Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: UseLayoutRoundingProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 409
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the UseLayoutRounding dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty UseLayoutRoundingProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly UseLayoutRoundingProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.Visibility
  commentId: P:Windows.UI.Xaml.UIElement.Visibility
  id: Visibility
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: UIElement.Visibility
  fullName: Windows.UI.Xaml.UIElement.Visibility
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: Visibility
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 430
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets the visibility of a UIElement. A UIElement that is not visible\nis not rendered and does not communicate its desired size to layout.\n"
  example: []
  syntax:
    content: public Visibility Visibility { get; set; }
    parameters: []
    return:
      type: Windows.UI.Xaml.Visibility
    content.vb: Public Property Visibility As Visibility
  overload: Windows.UI.Xaml.UIElement.Visibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.VisibilityProperty
  commentId: F:Windows.UI.Xaml.UIElement.VisibilityProperty
  id: VisibilityProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: VisibilityProperty
  nameWithType: UIElement.VisibilityProperty
  fullName: Windows.UI.Xaml.UIElement.VisibilityProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: VisibilityProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 439
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the Visibility dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty VisibilityProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly VisibilityProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.Opacity
  commentId: P:Windows.UI.Xaml.UIElement.Opacity
  id: Opacity
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: Opacity
  nameWithType: UIElement.Opacity
  fullName: Windows.UI.Xaml.UIElement.Opacity
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: Opacity
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 520
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets the degree of the object&apos;s opacity.\nA value between 0 and 1.0 that declares the opacity factor, with 1.0 meaning\nfull opacity and 0 meaning transparent. The default value is 1.0.\n"
  example: []
  syntax:
    content: public double Opacity { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Opacity As Double
  overload: Windows.UI.Xaml.UIElement.Opacity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OpacityProperty
  commentId: F:Windows.UI.Xaml.UIElement.OpacityProperty
  id: OpacityProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OpacityProperty
  nameWithType: UIElement.OpacityProperty
  fullName: Windows.UI.Xaml.UIElement.OpacityProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: OpacityProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 529
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the Opacity dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty OpacityProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly OpacityProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.IsHitTestVisible
  commentId: P:Windows.UI.Xaml.UIElement.IsHitTestVisible
  id: IsHitTestVisible
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
  fullName: Windows.UI.Xaml.UIElement.IsHitTestVisible
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: IsHitTestVisible
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 551
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets whether the contained area of this UIElement can return true\nvalues for hit testing.\n"
  example: []
  syntax:
    content: public bool IsHitTestVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsHitTestVisible As Boolean
  overload: Windows.UI.Xaml.UIElement.IsHitTestVisible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty
  commentId: F:Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty
  id: IsHitTestVisibleProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: IsHitTestVisibleProperty
  nameWithType: UIElement.IsHitTestVisibleProperty
  fullName: Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: IsHitTestVisibleProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 559
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the IsHitTestVisible property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsHitTestVisibleProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.AllowDrop
  commentId: P:Windows.UI.Xaml.UIElement.AllowDrop
  id: AllowDrop
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
  fullName: Windows.UI.Xaml.UIElement.AllowDrop
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: AllowDrop
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 690
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets a value that determines whether this UIElement\ncan be a drop target for purposes of drag-and-drop operations.\n"
  example: []
  syntax:
    content: public bool AllowDrop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowDrop As Boolean
  overload: Windows.UI.Xaml.UIElement.AllowDrop*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.AllowDropProperty
  commentId: F:Windows.UI.Xaml.UIElement.AllowDropProperty
  id: AllowDropProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: AllowDropProperty
  nameWithType: UIElement.AllowDropProperty
  fullName: Windows.UI.Xaml.UIElement.AllowDropProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: AllowDropProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 699
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the AllowDrop dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty AllowDropProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly AllowDropProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)
  commentId: M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)
  id: CapturePointer(Windows.UI.Xaml.Input.Pointer)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: CapturePointer(Pointer)
  nameWithType: UIElement.CapturePointer(Pointer)
  fullName: Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: CapturePointer
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 734
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nSets pointer capture to a UIElement.\n"
  example: []
  syntax:
    content: public bool CapturePointer(Pointer value = null)
    parameters:
    - id: value
      type: Windows.UI.Xaml.Input.Pointer
      description: The pointer object reference.
    return:
      type: System.Boolean
      description: True if the object has pointer capture; otherwise, false.
    content.vb: Public Function CapturePointer(value As Pointer = Nothing) As Boolean
  overload: Windows.UI.Xaml.UIElement.CapturePointer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.IsPointerCaptured
  commentId: P:Windows.UI.Xaml.UIElement.IsPointerCaptured
  id: IsPointerCaptured
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: IsPointerCaptured
  nameWithType: UIElement.IsPointerCaptured
  fullName: Windows.UI.Xaml.UIElement.IsPointerCaptured
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: IsPointerCaptured
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 975
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets a value indicating whether the pointer is captured to this element.\n"
  example: []
  syntax:
    content: public bool IsPointerCaptured { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPointerCaptured As Boolean
  overload: Windows.UI.Xaml.UIElement.IsPointerCaptured*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)
  commentId: M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)
  id: ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: ReleasePointerCapture(Pointer)
  nameWithType: UIElement.ReleasePointerCapture(Pointer)
  fullName: Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: ReleasePointerCapture
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 994
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nReleases pointer captures for capture of one specific pointer by this UIElement.\n"
  example: []
  syntax:
    content: public void ReleasePointerCapture(Pointer value = null)
    parameters:
    - id: value
      type: Windows.UI.Xaml.Input.Pointer
      description: "\nThe pointer reference. Use either saved references from previous captures,\nor pointer event data, to obtain this reference.\n"
    content.vb: Public Sub ReleasePointerCapture(value As Pointer = Nothing)
  overload: Windows.UI.Xaml.UIElement.ReleasePointerCapture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  id: OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnPointerCaptureLost(PointerRoutedEventArgs)
  nameWithType: UIElement.OnPointerCaptureLost(PointerRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: OnPointerCaptureLost
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 1063
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: protected virtual void OnPointerCaptureLost(PointerRoutedEventArgs e)
    parameters:
    - id: e
      type: Windows.UI.Xaml.Input.PointerRoutedEventArgs
    content.vb: Protected Overridable Sub OnPointerCaptureLost(e As PointerRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnPointerCaptureLost*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.PointerCaptureLost
  commentId: E:Windows.UI.Xaml.UIElement.PointerCaptureLost
  id: PointerCaptureLost
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerCaptureLost
  nameWithType: UIElement.PointerCaptureLost
  fullName: Windows.UI.Xaml.UIElement.PointerCaptureLost
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: PointerCaptureLost
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 1078
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public event PointerEventHandler PointerCaptureLost
    return:
      type: Windows.UI.Xaml.Input.PointerEventHandler
    content.vb: Public Event PointerCaptureLost As PointerEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove
  commentId: P:Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove
  id: AllowScrollOnTouchMove
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: AllowScrollOnTouchMove
  nameWithType: UIElement.AllowScrollOnTouchMove
  fullName: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove
  type: Property
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: AllowScrollOnTouchMove
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 1088
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nGets or sets whether pressing (touchscreen devices) on this UIElement then moving should allow scrolling or not. The default value is True.\n"
  example: []
  syntax:
    content: public bool AllowScrollOnTouchMove { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowScrollOnTouchMove As Boolean
  overload: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMoveProperty
  commentId: F:Windows.UI.Xaml.UIElement.AllowScrollOnTouchMoveProperty
  id: AllowScrollOnTouchMoveProperty
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: AllowScrollOnTouchMoveProperty
  nameWithType: UIElement.AllowScrollOnTouchMoveProperty
  fullName: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMoveProperty
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: AllowScrollOnTouchMoveProperty
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 1096
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nIdentifies the AllowScrollOnTouchMove dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty AllowScrollOnTouchMoveProperty
    return:
      type: Windows.UI.Xaml.DependencyProperty
    content.vb: Public Shared ReadOnly AllowScrollOnTouchMoveProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree
  commentId: M:Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree
  id: INTERNAL_OnDetachedFromVisualTree
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: UIElement.INTERNAL_OnDetachedFromVisualTree()
  fullName: Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: INTERNAL_OnDetachedFromVisualTree
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 1122
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: protected override void INTERNAL_OnDetachedFromVisualTree()
    content.vb: Protected Overrides Sub INTERNAL_OnDetachedFromVisualTree
  overridden: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  overload: Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)
  commentId: M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)
  id: TransformToVisual(Windows.UI.Xaml.UIElement)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: TransformToVisual(UIElement)
  nameWithType: UIElement.TransformToVisual(UIElement)
  fullName: Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement.cs
    id: TransformToVisual
    path: src/Windows.UI.Xaml/UIElement.cs
    startLine: 1157
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nReturns a transform object that can be used to transform coordinates from\nthe UIElement to the specified object.\n"
  example: []
  syntax:
    content: public GeneralTransform TransformToVisual(UIElement visual)
    parameters:
    - id: visual
      type: Windows.UI.Xaml.UIElement
      description: "\nThe object to compare to the current object for purposes of obtaining the\ntransform.\n"
    return:
      type: Windows.UI.Xaml.Media.GeneralTransform
      description: "\nThe transform information as an object. Call methods on this object to get\na practical transform.\n"
    content.vb: Public Function TransformToVisual(visual As UIElement) As GeneralTransform
  overload: Windows.UI.Xaml.UIElement.TransformToVisual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.PointerMovedEvent
  commentId: F:Windows.UI.Xaml.UIElement.PointerMovedEvent
  id: PointerMovedEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerMovedEvent
  nameWithType: UIElement.PointerMovedEvent
  fullName: Windows.UI.Xaml.UIElement.PointerMovedEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerMovedEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 68
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent PointerMovedEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly PointerMovedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.PointerMoved
  commentId: E:Windows.UI.Xaml.UIElement.PointerMoved
  id: PointerMoved
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerMoved
  nameWithType: UIElement.PointerMoved
  fullName: Windows.UI.Xaml.UIElement.PointerMoved
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerMoved
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 107
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\nmoved, while within this element.\n"
  example: []
  syntax:
    content: public event PointerEventHandler PointerMoved
    return:
      type: Windows.UI.Xaml.Input.PointerEventHandler
    content.vb: Public Event PointerMoved As PointerEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  id: OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnPointerMoved(PointerRoutedEventArgs)
  nameWithType: UIElement.OnPointerMoved(PointerRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnPointerMoved
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 128
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the PointerMoved event\n"
  example: []
  syntax:
    content: protected virtual void OnPointerMoved(PointerRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.PointerRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnPointerMoved(eventArgs As PointerRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnPointerMoved*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.PointerPressedEvent
  commentId: F:Windows.UI.Xaml.UIElement.PointerPressedEvent
  id: PointerPressedEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerPressedEvent
  nameWithType: UIElement.PointerPressedEvent
  fullName: Windows.UI.Xaml.UIElement.PointerPressedEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerPressedEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 167
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent PointerPressedEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly PointerPressedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.PointerPressed
  commentId: E:Windows.UI.Xaml.UIElement.PointerPressed
  id: PointerPressed
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerPressed
  nameWithType: UIElement.PointerPressed
  fullName: Windows.UI.Xaml.UIElement.PointerPressed
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerPressed
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 218
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\npressed, while within this element.\n"
  example: []
  syntax:
    content: public event PointerEventHandler PointerPressed
    return:
      type: Windows.UI.Xaml.Input.PointerEventHandler
    content.vb: Public Event PointerPressed As PointerEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  id: OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnPointerPressed(PointerRoutedEventArgs)
  nameWithType: UIElement.OnPointerPressed(PointerRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnPointerPressed
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 238
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the PointerPressed event\n"
  example: []
  syntax:
    content: protected virtual void OnPointerPressed(PointerRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.PointerRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnPointerPressed(eventArgs As PointerRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnPointerPressed*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.PointerReleasedEvent
  commentId: F:Windows.UI.Xaml.UIElement.PointerReleasedEvent
  id: PointerReleasedEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerReleasedEvent
  nameWithType: UIElement.PointerReleasedEvent
  fullName: Windows.UI.Xaml.UIElement.PointerReleasedEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerReleasedEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 290
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent PointerReleasedEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly PointerReleasedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.PointerReleased
  commentId: E:Windows.UI.Xaml.UIElement.PointerReleased
  id: PointerReleased
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerReleased
  nameWithType: UIElement.PointerReleased
  fullName: Windows.UI.Xaml.UIElement.PointerReleased
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerReleased
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 330
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\nreleased, while within this element.\n"
  example: []
  syntax:
    content: public event PointerEventHandler PointerReleased
    return:
      type: Windows.UI.Xaml.Input.PointerEventHandler
    content.vb: Public Event PointerReleased As PointerEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  id: OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnPointerReleased(PointerRoutedEventArgs)
  nameWithType: UIElement.OnPointerReleased(PointerRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnPointerReleased
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 351
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the PointerReleased event\n"
  example: []
  syntax:
    content: protected virtual void OnPointerReleased(PointerRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.PointerRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnPointerReleased(eventArgs As PointerRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnPointerReleased*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.PointerEnteredEvent
  commentId: F:Windows.UI.Xaml.UIElement.PointerEnteredEvent
  id: PointerEnteredEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerEnteredEvent
  nameWithType: UIElement.PointerEnteredEvent
  fullName: Windows.UI.Xaml.UIElement.PointerEnteredEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerEnteredEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 394
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent PointerEnteredEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly PointerEnteredEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.PointerEntered
  commentId: E:Windows.UI.Xaml.UIElement.PointerEntered
  id: PointerEntered
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerEntered
  nameWithType: UIElement.PointerEntered
  fullName: Windows.UI.Xaml.UIElement.PointerEntered
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerEntered
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 427
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when a pointer enters the hit test area of this element.\n"
  example: []
  syntax:
    content: public event PointerEventHandler PointerEntered
    return:
      type: Windows.UI.Xaml.Input.PointerEventHandler
    content.vb: Public Event PointerEntered As PointerEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  id: OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnPointerEntered(PointerRoutedEventArgs)
  nameWithType: UIElement.OnPointerEntered(PointerRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnPointerEntered
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 465
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the PointerEntered event\n"
  example: []
  syntax:
    content: protected virtual void OnPointerEntered(PointerRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.PointerRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnPointerEntered(eventArgs As PointerRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnPointerEntered*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.PointerExitedEvent
  commentId: F:Windows.UI.Xaml.UIElement.PointerExitedEvent
  id: PointerExitedEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerExitedEvent
  nameWithType: UIElement.PointerExitedEvent
  fullName: Windows.UI.Xaml.UIElement.PointerExitedEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerExitedEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 506
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent PointerExitedEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly PointerExitedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.PointerExited
  commentId: E:Windows.UI.Xaml.UIElement.PointerExited
  id: PointerExited
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: PointerExited
  nameWithType: UIElement.PointerExited
  fullName: Windows.UI.Xaml.UIElement.PointerExited
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: PointerExited
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 539
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when a pointer leaves the hit test area of this element.\n"
  example: []
  syntax:
    content: public event PointerEventHandler PointerExited
    return:
      type: Windows.UI.Xaml.Input.PointerEventHandler
    content.vb: Public Event PointerExited As PointerEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  id: OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnPointerExited(PointerRoutedEventArgs)
  nameWithType: UIElement.OnPointerExited(PointerRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnPointerExited
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 618
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the PointerExited event\n"
  example: []
  syntax:
    content: protected virtual void OnPointerExited(PointerRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.PointerRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnPointerExited(eventArgs As PointerRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnPointerExited*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.TappedEvent
  commentId: F:Windows.UI.Xaml.UIElement.TappedEvent
  id: TappedEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: TappedEvent
  nameWithType: UIElement.TappedEvent
  fullName: Windows.UI.Xaml.UIElement.TappedEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: TappedEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 701
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent TappedEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly TappedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.Tapped
  commentId: E:Windows.UI.Xaml.UIElement.Tapped
  id: Tapped
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: Tapped
  nameWithType: UIElement.Tapped
  fullName: Windows.UI.Xaml.UIElement.Tapped
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: Tapped
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 720
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when an otherwise unhandled Tap interaction occurs over the hit test\narea of this element.\n"
  example: []
  syntax:
    content: public event TappedEventHandler Tapped
    return:
      type: Windows.UI.Xaml.Input.TappedEventHandler
    content.vb: Public Event Tapped As TappedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)
  id: OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnTapped(TappedRoutedEventArgs)
  nameWithType: UIElement.OnTapped(TappedRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnTapped
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 766
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the Tapped event\n"
  example: []
  syntax:
    content: protected virtual void OnTapped(TappedRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.TappedRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnTapped(eventArgs As TappedRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnTapped*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.RightTappedEvent
  commentId: F:Windows.UI.Xaml.UIElement.RightTappedEvent
  id: RightTappedEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RightTappedEvent
  nameWithType: UIElement.RightTappedEvent
  fullName: Windows.UI.Xaml.UIElement.RightTappedEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: RightTappedEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 792
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent RightTappedEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly RightTappedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.RightTapped
  commentId: E:Windows.UI.Xaml.UIElement.RightTapped
  id: RightTapped
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RightTapped
  nameWithType: UIElement.RightTapped
  fullName: Windows.UI.Xaml.UIElement.RightTapped
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: RightTapped
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 824
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when a right-tap input stimulus happens while the pointer is over\nthe element.\n"
  example: []
  syntax:
    content: public event RightTappedEventHandler RightTapped
    return:
      type: Windows.UI.Xaml.Input.RightTappedEventHandler
    content.vb: Public Event RightTapped As RightTappedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)
  id: OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnRightTapped(RightTappedRoutedEventArgs)
  nameWithType: UIElement.OnRightTapped(RightTappedRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnRightTapped
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 895
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the RightTapped event\n"
  example: []
  syntax:
    content: protected virtual void OnRightTapped(RightTappedRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.RightTappedRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnRightTapped(eventArgs As RightTappedRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnRightTapped*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.KeyDownEvent
  commentId: F:Windows.UI.Xaml.UIElement.KeyDownEvent
  id: KeyDownEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: KeyDownEvent
  nameWithType: UIElement.KeyDownEvent
  fullName: Windows.UI.Xaml.UIElement.KeyDownEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: KeyDownEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 931
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent KeyDownEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly KeyDownEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.KeyDown
  commentId: E:Windows.UI.Xaml.UIElement.KeyDown
  id: KeyDown
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: KeyDown
  nameWithType: UIElement.KeyDown
  fullName: Windows.UI.Xaml.UIElement.KeyDown
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: KeyDown
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 958
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when a keyboard key is pressed while the UIElement has focus.\n"
  example: []
  syntax:
    content: public event KeyEventHandler KeyDown
    return:
      type: Windows.UI.Xaml.Input.KeyEventHandler
    content.vb: Public Event KeyDown As KeyEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  id: OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnKeyDown(KeyRoutedEventArgs)
  nameWithType: UIElement.OnKeyDown(KeyRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnKeyDown
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1018
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the KeyDown event\n"
  example: []
  syntax:
    content: protected virtual void OnKeyDown(KeyRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.KeyRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnKeyDown(eventArgs As KeyRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnKeyDown*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.KeyUpEvent
  commentId: F:Windows.UI.Xaml.UIElement.KeyUpEvent
  id: KeyUpEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: KeyUpEvent
  nameWithType: UIElement.KeyUpEvent
  fullName: Windows.UI.Xaml.UIElement.KeyUpEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: KeyUpEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1046
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent KeyUpEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly KeyUpEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.KeyUp
  commentId: E:Windows.UI.Xaml.UIElement.KeyUp
  id: KeyUp
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: KeyUp
  nameWithType: UIElement.KeyUp
  fullName: Windows.UI.Xaml.UIElement.KeyUp
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: KeyUp
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1073
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when a keyboard key is released while the UIElement has focus.\n"
  example: []
  syntax:
    content: public event KeyEventHandler KeyUp
    return:
      type: Windows.UI.Xaml.Input.KeyEventHandler
    content.vb: Public Event KeyUp As KeyEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  id: OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnKeyUp(KeyRoutedEventArgs)
  nameWithType: UIElement.OnKeyUp(KeyRoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnKeyUp
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1132
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the KeyUp event\n"
  example: []
  syntax:
    content: protected virtual void OnKeyUp(KeyRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.Input.KeyRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnKeyUp(eventArgs As KeyRoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnKeyUp*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.GotFocusEvent
  commentId: F:Windows.UI.Xaml.UIElement.GotFocusEvent
  id: GotFocusEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: GotFocusEvent
  nameWithType: UIElement.GotFocusEvent
  fullName: Windows.UI.Xaml.UIElement.GotFocusEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: GotFocusEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1160
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent GotFocusEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly GotFocusEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.GotFocus
  commentId: E:Windows.UI.Xaml.UIElement.GotFocus
  id: GotFocus
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: GotFocus
  nameWithType: UIElement.GotFocus
  fullName: Windows.UI.Xaml.UIElement.GotFocus
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: GotFocus
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1180
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\npressed, while within this element.\nNote that ONLY sender&apos;s informations are currently filled (not pointer&apos;s)\n"
  example: []
  syntax:
    content: public event RoutedEventHandler GotFocus
    return:
      type: Windows.UI.Xaml.RoutedEventHandler
    content.vb: Public Event GotFocus As RoutedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)
  id: OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement.OnGotFocus(RoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnGotFocus
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1208
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the GotFocus event\n"
  example: []
  syntax:
    content: protected virtual void OnGotFocus(RoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.RoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnGotFocus(eventArgs As RoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnGotFocus*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.LostFocusEvent
  commentId: F:Windows.UI.Xaml.UIElement.LostFocusEvent
  id: LostFocusEvent
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: LostFocusEvent
  nameWithType: UIElement.LostFocusEvent
  fullName: Windows.UI.Xaml.UIElement.LostFocusEvent
  type: Field
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: LostFocusEvent
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1221
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public static readonly RoutedEvent LostFocusEvent
    return:
      type: Windows.UI.Xaml.RoutedEvent
    content.vb: Public Shared ReadOnly LostFocusEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.UIElement.LostFocus
  commentId: E:Windows.UI.Xaml.UIElement.LostFocus
  id: LostFocus
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: LostFocus
  nameWithType: UIElement.LostFocus
  fullName: Windows.UI.Xaml.UIElement.LostFocus
  type: Event
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: LostFocus
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1239
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nOccurs when a UIElement loses focus.\n"
  example: []
  syntax:
    content: public event RoutedEventHandler LostFocus
    return:
      type: Windows.UI.Xaml.RoutedEventHandler
    content.vb: Public Event LostFocus As RoutedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)
  commentId: M:Windows.UI.Xaml.UIElement.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)
  id: OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement.OnLostFocus(RoutedEventArgs)
  fullName: Windows.UI.Xaml.UIElement.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: OnLostFocus
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1267
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRaises the LostFocus event\n"
  example: []
  syntax:
    content: protected virtual void OnLostFocus(RoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: Windows.UI.Xaml.RoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnLostFocus(eventArgs As RoutedEventArgs)
  overload: Windows.UI.Xaml.UIElement.OnLostFocus*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents
  commentId: M:Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents
  id: INTERNAL_AttachToDomEvents
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: INTERNAL_AttachToDomEvents()
  nameWithType: UIElement.INTERNAL_AttachToDomEvents()
  fullName: Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: INTERNAL_AttachToDomEvents
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1588
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public virtual void INTERNAL_AttachToDomEvents()
    content.vb: Public Overridable Sub INTERNAL_AttachToDomEvents
  overload: Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents
  commentId: M:Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents
  id: INTERNAL_DetachFromDomEvents
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: INTERNAL_DetachFromDomEvents()
  nameWithType: UIElement.INTERNAL_DetachFromDomEvents()
  fullName: Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents()
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: INTERNAL_DetachFromDomEvents
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1644
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  syntax:
    content: public virtual void INTERNAL_DetachFromDomEvents()
    content.vb: Public Overridable Sub INTERNAL_DetachFromDomEvents
  overload: Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)
  commentId: M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)
  id: AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: AddHandler(RoutedEvent, Object, Boolean)
  nameWithType: UIElement.AddHandler(RoutedEvent, Object, Boolean)
  fullName: Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: AddHandler
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1709
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nAdds a routed event handler for a specified routed event, adding the handler\nto the handler collection on the current element. Specify handledEventsToo\nas true to have the provided handler be invoked for a routed event case that\nhad already been marked as handled by another element along the event route.\n"
  example: []
  syntax:
    content: public void AddHandler(RoutedEvent routedEvent, object handler, bool handledEventsToo)
    parameters:
    - id: routedEvent
      type: Windows.UI.Xaml.RoutedEvent
      description: An identifier for the routed event to be handled.
    - id: handler
      type: System.Object
      description: A reference to the handler implementation.
    - id: handledEventsToo
      type: System.Boolean
      description: "\nTrue to register the handler such that it is invoked even when the routed\nevent is marked handled in its event data. False to register the handler\nwith the default condition that it will not be invoked if the routed event\nis already marked handled. The default is false.\n"
    content.vb: Public Sub AddHandler(routedEvent As RoutedEvent, handler As Object, handledEventsToo As Boolean)
  overload: Windows.UI.Xaml.UIElement.AddHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)
  commentId: M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)
  id: RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)
  parent: Windows.UI.Xaml.UIElement
  langs:
  - csharp
  - vb
  name: RemoveHandler(RoutedEvent, Object)
  nameWithType: UIElement.RemoveHandler(RoutedEvent, Object)
  fullName: Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent, System.Object)
  type: Method
  source:
    remote:
      path: G:/Document/Userware/docfx/docfx_project/src/Windows.UI.Xaml/UIElement_Events.cs
    id: RemoveHandler
    path: src/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1826
  assemblies:
  - OpenSilver.Runtime
  namespace: Windows.UI.Xaml
  summary: "\nRemoves the specified routed event handler from this UIElement. Typically\nthe handler in question was added by AddHandler.\n"
  example: []
  syntax:
    content: public void RemoveHandler(RoutedEvent routedEvent, object handler)
    parameters:
    - id: routedEvent
      type: Windows.UI.Xaml.RoutedEvent
      description: The identifier of the routed event for which the handler is attached.
    - id: handler
      type: System.Object
      description: >-
        The specific handler implementation to remove from the event handler collection

        on this UIElement.
    content.vb: Public Sub RemoveHandler(routedEvent As RoutedEvent, handler As Object)
  overload: Windows.UI.Xaml.UIElement.RemoveHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Windows.UI.Xaml
  commentId: N:Windows.UI.Xaml
  name: Windows.UI.Xaml
  nameWithType: Windows.UI.Xaml
  fullName: Windows.UI.Xaml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Windows.UI.Xaml.DependencyObject
  commentId: T:Windows.UI.Xaml.DependencyObject
  parent: Windows.UI.Xaml
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: Windows.UI.Xaml.DependencyObject
- uid: Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: Windows.UI.Xaml.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: Windows.UI.Xaml.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  commentId: M:Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  parent: Windows.UI.Xaml.DependencyObject
  isExternal: true
  name: SetLocalValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetLocalValue(DependencyProperty, Object)
  fullName: Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty, System.Object)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetLocalValue
    nameWithType: DependencyObject.SetLocalValue
    fullName: Windows.UI.Xaml.DependencyObject.SetLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetLocalValue
    nameWithType: DependencyObject.SetLocalValue
    fullName: Windows.UI.Xaml.DependencyObject.SetLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.SetCurrentValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  commentId: M:Windows.UI.Xaml.DependencyObject.SetCurrentValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  parent: Windows.UI.Xaml.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: Windows.UI.Xaml.DependencyObject.SetCurrentValue(Windows.UI.Xaml.DependencyProperty, System.Object)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.SetCurrentValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: Windows.UI.Xaml.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.SetCurrentValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: Windows.UI.Xaml.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.CoerceCurrentValue(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.PropertyMetadata)
  commentId: M:Windows.UI.Xaml.DependencyObject.CoerceCurrentValue(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.PropertyMetadata)
  parent: Windows.UI.Xaml.DependencyObject
  name: CoerceCurrentValue(DependencyProperty, PropertyMetadata)
  nameWithType: DependencyObject.CoerceCurrentValue(DependencyProperty, PropertyMetadata)
  fullName: Windows.UI.Xaml.DependencyObject.CoerceCurrentValue(Windows.UI.Xaml.DependencyProperty, Windows.UI.Xaml.PropertyMetadata)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.CoerceCurrentValue(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.PropertyMetadata)
    name: CoerceCurrentValue
    nameWithType: DependencyObject.CoerceCurrentValue
    fullName: Windows.UI.Xaml.DependencyObject.CoerceCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Windows.UI.Xaml.PropertyMetadata
    name: PropertyMetadata
    nameWithType: PropertyMetadata
    fullName: Windows.UI.Xaml.PropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.CoerceCurrentValue(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.PropertyMetadata)
    name: CoerceCurrentValue
    nameWithType: DependencyObject.CoerceCurrentValue
    fullName: Windows.UI.Xaml.DependencyObject.CoerceCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Windows.UI.Xaml.PropertyMetadata
    name: PropertyMetadata
    nameWithType: PropertyMetadata
    fullName: Windows.UI.Xaml.PropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: Windows.UI.Xaml.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: Windows.UI.Xaml.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.GetVisualStateValue(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.GetVisualStateValue(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.GetVisualStateValue(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.GetVisualStateValue(Windows.UI.Xaml.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: Windows.UI.Xaml.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.GetVisualStateValue(Windows.UI.Xaml.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: Windows.UI.Xaml.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.SetVisualStateValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  commentId: M:Windows.UI.Xaml.DependencyObject.SetVisualStateValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  parent: Windows.UI.Xaml.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: Windows.UI.Xaml.DependencyObject.SetVisualStateValue(Windows.UI.Xaml.DependencyProperty, System.Object)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.SetVisualStateValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: Windows.UI.Xaml.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.SetVisualStateValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: Windows.UI.Xaml.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.SetAnimationValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  commentId: M:Windows.UI.Xaml.DependencyObject.SetAnimationValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  parent: Windows.UI.Xaml.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: Windows.UI.Xaml.DependencyObject.SetAnimationValue(Windows.UI.Xaml.DependencyProperty, System.Object)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.SetAnimationValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: Windows.UI.Xaml.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.SetAnimationValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: Windows.UI.Xaml.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.GetAnimationValue(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.GetAnimationValue(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.GetAnimationValue(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.GetAnimationValue(Windows.UI.Xaml.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: Windows.UI.Xaml.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.GetAnimationValue(Windows.UI.Xaml.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: Windows.UI.Xaml.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  commentId: M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)
  parent: Windows.UI.Xaml.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty, System.Object)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: Windows.UI.Xaml.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: Windows.UI.Xaml.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: Coerce(DependencyProperty)
  nameWithType: DependencyObject.Coerce(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)
    name: Coerce
    nameWithType: DependencyObject.Coerce
    fullName: Windows.UI.Xaml.DependencyObject.Coerce
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)
    name: Coerce
    nameWithType: DependencyObject.Coerce
    fullName: Windows.UI.Xaml.DependencyObject.Coerce
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.CoerceValue(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.CoerceValue(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.CoerceValue(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.CoerceValue(Windows.UI.Xaml.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: Windows.UI.Xaml.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.CoerceValue(Windows.UI.Xaml.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: Windows.UI.Xaml.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.Dispatcher
  commentId: P:Windows.UI.Xaml.DependencyObject.Dispatcher
  parent: Windows.UI.Xaml.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: Windows.UI.Xaml.DependencyObject.Dispatcher
- uid: Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: Windows.UI.Xaml.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)
  commentId: M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)
  parent: Windows.UI.Xaml.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: Windows.UI.Xaml.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: Windows.UI.Xaml.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: Windows.UI.Xaml.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Windows.UI.Xaml.UIElement.ClipToBounds*
  commentId: Overload:Windows.UI.Xaml.UIElement.ClipToBounds
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
  fullName: Windows.UI.Xaml.UIElement.ClipToBounds
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Windows.UI.Xaml.DependencyProperty
  commentId: T:Windows.UI.Xaml.DependencyProperty
  parent: Windows.UI.Xaml
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: Windows.UI.Xaml.DependencyProperty
- uid: Windows.UI.Xaml.UIElement.CreateDomElement*
  commentId: Overload:Windows.UI.Xaml.UIElement.CreateDomElement
  name: CreateDomElement
  nameWithType: UIElement.CreateDomElement
  fullName: Windows.UI.Xaml.UIElement.CreateDomElement
- uid: Windows.UI.Xaml.UIElement.CreateDomChildWrapper*
  commentId: Overload:Windows.UI.Xaml.UIElement.CreateDomChildWrapper
  name: CreateDomChildWrapper
  nameWithType: UIElement.CreateDomChildWrapper
  fullName: Windows.UI.Xaml.UIElement.CreateDomChildWrapper
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild*
  commentId: Overload:Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild
  name: GetDomElementWhereToPlaceChild
  nameWithType: UIElement.GetDomElementWhereToPlaceChild
  fullName: Windows.UI.Xaml.UIElement.GetDomElementWhereToPlaceChild
- uid: Windows.UI.Xaml.UIElement
  commentId: T:Windows.UI.Xaml.UIElement
  parent: Windows.UI.Xaml
  name: UIElement
  nameWithType: UIElement
  fullName: Windows.UI.Xaml.UIElement
- uid: Windows.UI.Xaml.UIElement.GetChildsWrapper*
  commentId: Overload:Windows.UI.Xaml.UIElement.GetChildsWrapper
  name: GetChildsWrapper
  nameWithType: UIElement.GetChildsWrapper
  fullName: Windows.UI.Xaml.UIElement.GetChildsWrapper
- uid: Windows.UI.Xaml.UIElement.Effect*
  commentId: Overload:Windows.UI.Xaml.UIElement.Effect
  name: Effect
  nameWithType: UIElement.Effect
  fullName: Windows.UI.Xaml.UIElement.Effect
- uid: System.Windows.Media.Effects.Effect
  commentId: T:System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Effects
  commentId: N:System.Windows.Media.Effects
  name: System.Windows.Media.Effects
  nameWithType: System.Windows.Media.Effects
  fullName: System.Windows.Media.Effects
- uid: Windows.UI.Xaml.UIElement.RenderTransform*
  commentId: Overload:Windows.UI.Xaml.UIElement.RenderTransform
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
  fullName: Windows.UI.Xaml.UIElement.RenderTransform
- uid: Windows.UI.Xaml.Media.Transform
  commentId: T:Windows.UI.Xaml.Media.Transform
  parent: Windows.UI.Xaml.Media
  name: Transform
  nameWithType: Transform
  fullName: Windows.UI.Xaml.Media.Transform
- uid: Windows.UI.Xaml.Media
  commentId: N:Windows.UI.Xaml.Media
  name: Windows.UI.Xaml.Media
  nameWithType: Windows.UI.Xaml.Media
  fullName: Windows.UI.Xaml.Media
- uid: Windows.UI.Xaml.UIElement.RenderTransformOrigin*
  commentId: Overload:Windows.UI.Xaml.UIElement.RenderTransformOrigin
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
  fullName: Windows.UI.Xaml.UIElement.RenderTransformOrigin
- uid: Windows.Foundation.Point
  commentId: T:Windows.Foundation.Point
  parent: Windows.Foundation
  name: Point
  nameWithType: Point
  fullName: Windows.Foundation.Point
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
- uid: Windows.UI.Xaml.UIElement.UseLayoutRounding*
  commentId: Overload:Windows.UI.Xaml.UIElement.UseLayoutRounding
  name: UseLayoutRounding
  nameWithType: UIElement.UseLayoutRounding
  fullName: Windows.UI.Xaml.UIElement.UseLayoutRounding
- uid: Windows.UI.Xaml.UIElement.Visibility*
  commentId: Overload:Windows.UI.Xaml.UIElement.Visibility
  name: Visibility
  nameWithType: UIElement.Visibility
  fullName: Windows.UI.Xaml.UIElement.Visibility
- uid: Windows.UI.Xaml.Visibility
  commentId: T:Windows.UI.Xaml.Visibility
  parent: Windows.UI.Xaml
  name: Visibility
  nameWithType: Visibility
  fullName: Windows.UI.Xaml.Visibility
- uid: Windows.UI.Xaml.UIElement.Opacity*
  commentId: Overload:Windows.UI.Xaml.UIElement.Opacity
  name: Opacity
  nameWithType: UIElement.Opacity
  fullName: Windows.UI.Xaml.UIElement.Opacity
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Windows.UI.Xaml.UIElement.IsHitTestVisible*
  commentId: Overload:Windows.UI.Xaml.UIElement.IsHitTestVisible
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
  fullName: Windows.UI.Xaml.UIElement.IsHitTestVisible
- uid: Windows.UI.Xaml.UIElement.AllowDrop*
  commentId: Overload:Windows.UI.Xaml.UIElement.AllowDrop
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
  fullName: Windows.UI.Xaml.UIElement.AllowDrop
- uid: Windows.UI.Xaml.UIElement.CapturePointer*
  commentId: Overload:Windows.UI.Xaml.UIElement.CapturePointer
  name: CapturePointer
  nameWithType: UIElement.CapturePointer
  fullName: Windows.UI.Xaml.UIElement.CapturePointer
- uid: Windows.UI.Xaml.Input.Pointer
  commentId: T:Windows.UI.Xaml.Input.Pointer
  parent: Windows.UI.Xaml.Input
  name: Pointer
  nameWithType: Pointer
  fullName: Windows.UI.Xaml.Input.Pointer
- uid: Windows.UI.Xaml.Input
  commentId: N:Windows.UI.Xaml.Input
  name: Windows.UI.Xaml.Input
  nameWithType: Windows.UI.Xaml.Input
  fullName: Windows.UI.Xaml.Input
- uid: Windows.UI.Xaml.UIElement.IsPointerCaptured*
  commentId: Overload:Windows.UI.Xaml.UIElement.IsPointerCaptured
  name: IsPointerCaptured
  nameWithType: UIElement.IsPointerCaptured
  fullName: Windows.UI.Xaml.UIElement.IsPointerCaptured
- uid: Windows.UI.Xaml.UIElement.ReleasePointerCapture*
  commentId: Overload:Windows.UI.Xaml.UIElement.ReleasePointerCapture
  name: ReleasePointerCapture
  nameWithType: UIElement.ReleasePointerCapture
  fullName: Windows.UI.Xaml.UIElement.ReleasePointerCapture
- uid: Windows.UI.Xaml.UIElement.OnPointerCaptureLost*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnPointerCaptureLost
  name: OnPointerCaptureLost
  nameWithType: UIElement.OnPointerCaptureLost
  fullName: Windows.UI.Xaml.UIElement.OnPointerCaptureLost
- uid: Windows.UI.Xaml.Input.PointerRoutedEventArgs
  commentId: T:Windows.UI.Xaml.Input.PointerRoutedEventArgs
  parent: Windows.UI.Xaml.Input
  name: PointerRoutedEventArgs
  nameWithType: PointerRoutedEventArgs
  fullName: Windows.UI.Xaml.Input.PointerRoutedEventArgs
- uid: Windows.UI.Xaml.Input.PointerEventHandler
  commentId: T:Windows.UI.Xaml.Input.PointerEventHandler
  parent: Windows.UI.Xaml.Input
  name: PointerEventHandler
  nameWithType: PointerEventHandler
  fullName: Windows.UI.Xaml.Input.PointerEventHandler
- uid: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove*
  commentId: Overload:Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove
  name: AllowScrollOnTouchMove
  nameWithType: UIElement.AllowScrollOnTouchMove
  fullName: Windows.UI.Xaml.UIElement.AllowScrollOnTouchMove
- uid: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: Windows.UI.Xaml.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree*
  commentId: Overload:Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree
  name: INTERNAL_OnDetachedFromVisualTree
  nameWithType: UIElement.INTERNAL_OnDetachedFromVisualTree
  fullName: Windows.UI.Xaml.UIElement.INTERNAL_OnDetachedFromVisualTree
- uid: Windows.UI.Xaml.UIElement.TransformToVisual*
  commentId: Overload:Windows.UI.Xaml.UIElement.TransformToVisual
  name: TransformToVisual
  nameWithType: UIElement.TransformToVisual
  fullName: Windows.UI.Xaml.UIElement.TransformToVisual
- uid: Windows.UI.Xaml.Media.GeneralTransform
  commentId: T:Windows.UI.Xaml.Media.GeneralTransform
  parent: Windows.UI.Xaml.Media
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: Windows.UI.Xaml.Media.GeneralTransform
- uid: Windows.UI.Xaml.RoutedEvent
  commentId: T:Windows.UI.Xaml.RoutedEvent
  parent: Windows.UI.Xaml
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: Windows.UI.Xaml.RoutedEvent
- uid: Windows.UI.Xaml.UIElement.OnPointerMoved*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnPointerMoved
  name: OnPointerMoved
  nameWithType: UIElement.OnPointerMoved
  fullName: Windows.UI.Xaml.UIElement.OnPointerMoved
- uid: Windows.UI.Xaml.UIElement.OnPointerPressed*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnPointerPressed
  name: OnPointerPressed
  nameWithType: UIElement.OnPointerPressed
  fullName: Windows.UI.Xaml.UIElement.OnPointerPressed
- uid: Windows.UI.Xaml.UIElement.OnPointerReleased*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnPointerReleased
  name: OnPointerReleased
  nameWithType: UIElement.OnPointerReleased
  fullName: Windows.UI.Xaml.UIElement.OnPointerReleased
- uid: Windows.UI.Xaml.UIElement.OnPointerEntered*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnPointerEntered
  name: OnPointerEntered
  nameWithType: UIElement.OnPointerEntered
  fullName: Windows.UI.Xaml.UIElement.OnPointerEntered
- uid: Windows.UI.Xaml.UIElement.OnPointerExited*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnPointerExited
  name: OnPointerExited
  nameWithType: UIElement.OnPointerExited
  fullName: Windows.UI.Xaml.UIElement.OnPointerExited
- uid: Windows.UI.Xaml.Input.TappedEventHandler
  commentId: T:Windows.UI.Xaml.Input.TappedEventHandler
  parent: Windows.UI.Xaml.Input
  name: TappedEventHandler
  nameWithType: TappedEventHandler
  fullName: Windows.UI.Xaml.Input.TappedEventHandler
- uid: Windows.UI.Xaml.UIElement.OnTapped*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnTapped
  name: OnTapped
  nameWithType: UIElement.OnTapped
  fullName: Windows.UI.Xaml.UIElement.OnTapped
- uid: Windows.UI.Xaml.Input.TappedRoutedEventArgs
  commentId: T:Windows.UI.Xaml.Input.TappedRoutedEventArgs
  parent: Windows.UI.Xaml.Input
  name: TappedRoutedEventArgs
  nameWithType: TappedRoutedEventArgs
  fullName: Windows.UI.Xaml.Input.TappedRoutedEventArgs
- uid: Windows.UI.Xaml.Input.RightTappedEventHandler
  commentId: T:Windows.UI.Xaml.Input.RightTappedEventHandler
  parent: Windows.UI.Xaml.Input
  name: RightTappedEventHandler
  nameWithType: RightTappedEventHandler
  fullName: Windows.UI.Xaml.Input.RightTappedEventHandler
- uid: Windows.UI.Xaml.UIElement.OnRightTapped*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnRightTapped
  name: OnRightTapped
  nameWithType: UIElement.OnRightTapped
  fullName: Windows.UI.Xaml.UIElement.OnRightTapped
- uid: Windows.UI.Xaml.Input.RightTappedRoutedEventArgs
  commentId: T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs
  parent: Windows.UI.Xaml.Input
  name: RightTappedRoutedEventArgs
  nameWithType: RightTappedRoutedEventArgs
  fullName: Windows.UI.Xaml.Input.RightTappedRoutedEventArgs
- uid: Windows.UI.Xaml.Input.KeyEventHandler
  commentId: T:Windows.UI.Xaml.Input.KeyEventHandler
  parent: Windows.UI.Xaml.Input
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: Windows.UI.Xaml.Input.KeyEventHandler
- uid: Windows.UI.Xaml.UIElement.OnKeyDown*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnKeyDown
  name: OnKeyDown
  nameWithType: UIElement.OnKeyDown
  fullName: Windows.UI.Xaml.UIElement.OnKeyDown
- uid: Windows.UI.Xaml.Input.KeyRoutedEventArgs
  commentId: T:Windows.UI.Xaml.Input.KeyRoutedEventArgs
  parent: Windows.UI.Xaml.Input
  name: KeyRoutedEventArgs
  nameWithType: KeyRoutedEventArgs
  fullName: Windows.UI.Xaml.Input.KeyRoutedEventArgs
- uid: Windows.UI.Xaml.UIElement.OnKeyUp*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnKeyUp
  name: OnKeyUp
  nameWithType: UIElement.OnKeyUp
  fullName: Windows.UI.Xaml.UIElement.OnKeyUp
- uid: Windows.UI.Xaml.RoutedEventHandler
  commentId: T:Windows.UI.Xaml.RoutedEventHandler
  parent: Windows.UI.Xaml
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: Windows.UI.Xaml.RoutedEventHandler
- uid: Windows.UI.Xaml.UIElement.OnGotFocus*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnGotFocus
  name: OnGotFocus
  nameWithType: UIElement.OnGotFocus
  fullName: Windows.UI.Xaml.UIElement.OnGotFocus
- uid: Windows.UI.Xaml.RoutedEventArgs
  commentId: T:Windows.UI.Xaml.RoutedEventArgs
  parent: Windows.UI.Xaml
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: Windows.UI.Xaml.RoutedEventArgs
- uid: Windows.UI.Xaml.UIElement.OnLostFocus*
  commentId: Overload:Windows.UI.Xaml.UIElement.OnLostFocus
  name: OnLostFocus
  nameWithType: UIElement.OnLostFocus
  fullName: Windows.UI.Xaml.UIElement.OnLostFocus
- uid: Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents*
  commentId: Overload:Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents
  name: INTERNAL_AttachToDomEvents
  nameWithType: UIElement.INTERNAL_AttachToDomEvents
  fullName: Windows.UI.Xaml.UIElement.INTERNAL_AttachToDomEvents
- uid: Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents*
  commentId: Overload:Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents
  name: INTERNAL_DetachFromDomEvents
  nameWithType: UIElement.INTERNAL_DetachFromDomEvents
  fullName: Windows.UI.Xaml.UIElement.INTERNAL_DetachFromDomEvents
- uid: Windows.UI.Xaml.UIElement.AddHandler*
  commentId: Overload:Windows.UI.Xaml.UIElement.AddHandler
  name: AddHandler
  nameWithType: UIElement.AddHandler
  fullName: Windows.UI.Xaml.UIElement.AddHandler
- uid: Windows.UI.Xaml.UIElement.RemoveHandler*
  commentId: Overload:Windows.UI.Xaml.UIElement.RemoveHandler
  name: RemoveHandler
  nameWithType: UIElement.RemoveHandler
  fullName: Windows.UI.Xaml.UIElement.RemoveHandler
