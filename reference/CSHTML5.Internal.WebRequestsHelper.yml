### YamlMime:ManagedReference
items:
- uid: CSHTML5.Internal.WebRequestsHelper
  commentId: T:CSHTML5.Internal.WebRequestsHelper
  id: WebRequestsHelper
  parent: CSHTML5.Internal
  children:
  - CSHTML5.Internal.WebRequestsHelper.MakeRequest(System.String,System.String,System.String,Dictionary{System.String,System.String},System.Boolean)
  langs:
  - csharp
  - vb
  name: WebRequestsHelper
  nameWithType: WebRequestsHelper
  fullName: CSHTML5.Internal.WebRequestsHelper
  type: Class
  source:
    id: WebRequestsHelper
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Internal\WebRequestsHelper.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: CSHTML5.Internal
  syntax:
    content: 'public static class WebRequestsHelper : object'
    content.vb: >-
      Public Module WebRequestsHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CSHTML5.Internal.WebRequestsHelper.MakeRequest(System.String,System.String,System.String,Dictionary{System.String,System.String},System.Boolean)
  commentId: M:CSHTML5.Internal.WebRequestsHelper.MakeRequest(System.String,System.String,System.String,Dictionary{System.String,System.String},System.Boolean)
  id: MakeRequest(System.String,System.String,System.String,Dictionary{System.String,System.String},System.Boolean)
  parent: CSHTML5.Internal.WebRequestsHelper
  langs:
  - csharp
  - vb
  name: MakeRequest(String, String, String, Dictionary<String, String>, Boolean)
  nameWithType: WebRequestsHelper.MakeRequest(String, String, String, Dictionary<String, String>, Boolean)
  fullName: CSHTML5.Internal.WebRequestsHelper.MakeRequest(System.String, System.String, System.String, Dictionary<System.String, System.String>, System.Boolean)
  type: Method
  source:
    id: MakeRequest
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Internal\WebRequestsHelper.cs
    startLine: 23
  assemblies:
  - OpenSilver
  namespace: CSHTML5.Internal
  syntax:
    content: public static string MakeRequest(string address, string method, string body, Dictionary<string, string> headers = null, bool isAsync = false)
    parameters:
    - id: address
      type: System.String
    - id: method
      type: System.String
    - id: body
      type: System.String
    - id: headers
      type: Dictionary{System.String,System.String}
    - id: isAsync
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function MakeRequest(address As String, method As String, body As String, headers As Dictionary(Of String, String) = Nothing, isAsync As Boolean = False) As String
  overload: CSHTML5.Internal.WebRequestsHelper.MakeRequest*
  nameWithType.vb: WebRequestsHelper.MakeRequest(String, String, String, Dictionary(Of String, String), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSHTML5.Internal.WebRequestsHelper.MakeRequest(System.String, System.String, System.String, Dictionary(Of System.String, System.String), System.Boolean)
  name.vb: MakeRequest(String, String, String, Dictionary(Of String, String), Boolean)
references:
- uid: CSHTML5.Internal
  commentId: N:CSHTML5.Internal
  name: CSHTML5.Internal
  nameWithType: CSHTML5.Internal
  fullName: CSHTML5.Internal
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CSHTML5.Internal.WebRequestsHelper.MakeRequest*
  commentId: Overload:CSHTML5.Internal.WebRequestsHelper.MakeRequest
  name: MakeRequest
  nameWithType: WebRequestsHelper.MakeRequest
  fullName: CSHTML5.Internal.WebRequestsHelper.MakeRequest
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
