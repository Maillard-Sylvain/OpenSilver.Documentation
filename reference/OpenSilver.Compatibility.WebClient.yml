### YamlMime:ManagedReference
items:
- uid: OpenSilver.Compatibility.WebClient
  commentId: T:OpenSilver.Compatibility.WebClient
  id: WebClient
  parent: OpenSilver.Compatibility
  children:
  - OpenSilver.Compatibility.WebClient.#ctor
  - OpenSilver.Compatibility.WebClient.DownloadString(System.String)
  - OpenSilver.Compatibility.WebClient.DownloadString(Uri)
  - OpenSilver.Compatibility.WebClient.DownloadStringAsync(Uri)
  - OpenSilver.Compatibility.WebClient.DownloadStringCompleted
  - OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(System.String)
  - OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(Uri)
  - OpenSilver.Compatibility.WebClient.Encoding
  - OpenSilver.Compatibility.WebClient.Headers
  - OpenSilver.Compatibility.WebClient.OpenReadAsync(Uri,System.Object)
  - OpenSilver.Compatibility.WebClient.OpenReadCompleted
  - OpenSilver.Compatibility.WebClient.OpenWriteAsync(Uri)
  - OpenSilver.Compatibility.WebClient.OpenWriteCompleted
  - OpenSilver.Compatibility.WebClient.ResponseHeaders
  - OpenSilver.Compatibility.WebClient.UploadString(System.String,System.String)
  - OpenSilver.Compatibility.WebClient.UploadString(System.String,System.String,System.String)
  - OpenSilver.Compatibility.WebClient.UploadString(Uri,System.String)
  - OpenSilver.Compatibility.WebClient.UploadString(Uri,System.String,System.String)
  - OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri,System.String)
  - OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri,System.String,System.String)
  - OpenSilver.Compatibility.WebClient.UploadStringCompleted
  - OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String,System.String)
  - OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
  - OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri,System.String)
  - OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri,System.String,System.String)
  langs:
  - csharp
  - vb
  name: WebClient
  nameWithType: WebClient
  fullName: OpenSilver.Compatibility.WebClient
  type: Class
  source:
    id: WebClient
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 93
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nProvides common methods for sending data to and receiving data from a resource\nidentified by a URI.\n"
  example:
  - "\nHere is an example of a use of the WebClient to receive data:\n<pre><code>//We create the WebClient with the right encoding and headers:\nvar webClient = new WebClient();\nwebClient.Encoding = Encoding.UTF8;\nwebClient.Headers[HttpRequestHeader.Accept] = &quot;application/xml&quot;;\n\n//We submit the request to the server and wait for its response:\nstring response = await webClient.DownloadStringTaskAsync(&quot;http://someAddress.com&quot;);\n\n//We modify the response so that it can be deserialized (deserialization is not perfect yet):\nresponse = response.Replace(@&quot;xmlns=&quot;&quot;http://NameSpaceOfTheDeserialization&quot;&quot;&quot;, &quot;&quot;);\nresponse = &quot;&lt;ToDoItemsWrapper>&quot; + response.Replace(&quot;ArrayOfToDoItem&quot;, &quot;ToDoItems&quot;) + &quot;&lt;/ToDoItemsWrapper>&quot;; // Workaround for the fact that &quot;ArrayOf&quot; types cannot be directly deserialized by the XmlSerializer in this Beta version.\n\n//We create the Deserializer:\nvar deserializer = new XmlSerializer(typeof(ToDoItemsWrapper));\nvar memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(response));\nvar xmlReader = XmlReader.Create(memoryStream);\n\n//We deserialize:\nToDoItemsWrapper items = (ToDoItemsWrapper)deserializer.Deserialize(xmlReader);</code></pre>\nHere is what the ToDoItemsWrapper class looks like (with ToDoItem a Serializable class) :\n<pre><code>// Workaround for the fact that &quot;ArrayOf&quot; types cannot directly be deserialized by the XmlSerializer in this Beta version:\n[DataContract]\npublic partial class ToDoItemsWrapper\n{\n    public List&lt;ToDoItem> ToDoItems { get; set; }\n}</code></pre>\nHere is another example that shows how you can use the WebClient to send data:\n<pre><code>//We parse the data in a string:\nstring data = string.Format(@&quot;{{&quot;&quot;Id&quot;&quot;: &quot;&quot;{0}&quot;&quot;,&quot;&quot;Description&quot;&quot;: &quot;&quot;{1}&quot;&quot;}}&quot;Guid.NewGuid(), MyTextBox.Text.Replace(&quot;\\&quot;&quot;, &quot;&apos;&quot;));\n//We create the WebClient:\nvar webClient = new WebClient();\nWe set the encoding and Headers (note: our data is formatted in json so we set the HttpRequestHeader.ContentType header accordingly) \nwebClient.Headers[HttpRequestHeader.ContentType] = &quot;application/json&quot;;\nwebClient.Encoding = Encoding.UTF8;\nstring response = await webClient.UploadStringTaskAsync(&quot;http://cshtml5-rest-sample.azurewebsites.net/api/Todo/&quot;, &quot;POST&quot;, data);</code></pre>\n"
  syntax:
    content: 'public class WebClient : object'
    content.vb: >-
      Public Class WebClient
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenSilver.Compatibility.WebClient.Encoding
  commentId: P:OpenSilver.Compatibility.WebClient.Encoding
  id: Encoding
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: WebClient.Encoding
  fullName: OpenSilver.Compatibility.WebClient.Encoding
  type: Property
  source:
    id: Encoding
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 105
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nGets or sets the System.Text.Encoding used to upload and download strings.\n"
  example: []
  syntax:
    content: public Encoding Encoding { get; set; }
    parameters: []
    return:
      type: Encoding
    content.vb: Public Property Encoding As Encoding
  overload: OpenSilver.Compatibility.WebClient.Encoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.Headers
  commentId: P:OpenSilver.Compatibility.WebClient.Headers
  id: Headers
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: WebClient.Headers
  fullName: OpenSilver.Compatibility.WebClient.Headers
  type: Property
  source:
    id: Headers
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 115
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nGets or sets a collection of header name/value pairs associated with the\nrequest.\n"
  example: []
  syntax:
    content: public WebHeaderCollection Headers { get; set; }
    parameters: []
    return:
      type: WebHeaderCollection
    content.vb: Public Property Headers As WebHeaderCollection
  overload: OpenSilver.Compatibility.WebClient.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.#ctor
  commentId: M:OpenSilver.Compatibility.WebClient.#ctor
  id: '#ctor'
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: WebClient()
  nameWithType: WebClient.WebClient()
  fullName: OpenSilver.Compatibility.WebClient.WebClient()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 126
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nInitializes a new instance of the System.Net.WebClient class.\n"
  example: []
  syntax:
    content: public WebClient()
    content.vb: Public Sub New
  overload: OpenSilver.Compatibility.WebClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.DownloadStringCompleted
  commentId: E:OpenSilver.Compatibility.WebClient.DownloadStringCompleted
  id: DownloadStringCompleted
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: DownloadStringCompleted
  nameWithType: WebClient.DownloadStringCompleted
  fullName: OpenSilver.Compatibility.WebClient.DownloadStringCompleted
  type: Event
  source:
    id: DownloadStringCompleted
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 133
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nOccurs when an asynchronous resource-download operation completes.\n"
  example: []
  syntax:
    content: public event DownloadStringCompletedEventHandler DownloadStringCompleted
    return:
      type: OpenSilver.Compatibility.DownloadStringCompletedEventHandler
    content.vb: Public Event DownloadStringCompleted As DownloadStringCompletedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.DownloadString(System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.DownloadString(System.String)
  id: DownloadString(System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: DownloadString(String)
  nameWithType: WebClient.DownloadString(String)
  fullName: OpenSilver.Compatibility.WebClient.DownloadString(System.String)
  type: Method
  source:
    id: DownloadString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 160
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nDownloads the requested resource as a System.String. The resource to download\nis specified as a System.String containing the URI.\n"
  example: []
  syntax:
    content: public string DownloadString(string address)
    parameters:
    - id: address
      type: System.String
      description: A System.String containing the URI to download.
    return:
      type: System.String
      description: A System.String containing the requested resource.
    content.vb: Public Function DownloadString(address As String) As String
  overload: OpenSilver.Compatibility.WebClient.DownloadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.DownloadString(Uri)
  commentId: M:OpenSilver.Compatibility.WebClient.DownloadString(Uri)
  id: DownloadString(Uri)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: DownloadString(Uri)
  nameWithType: WebClient.DownloadString(Uri)
  fullName: OpenSilver.Compatibility.WebClient.DownloadString(Uri)
  type: Method
  source:
    id: DownloadString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 181
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nDownloads the requested resource as a System.String. The resource to download\nis specified as a System.Uri.\n"
  example: []
  syntax:
    content: public string DownloadString(Uri address)
    parameters:
    - id: address
      type: Uri
      description: A System.Uri object containing the URI to download.
    return:
      type: System.String
      description: A System.String containing the requested resource.
    content.vb: Public Function DownloadString(address As Uri) As String
  overload: OpenSilver.Compatibility.WebClient.DownloadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.DownloadStringAsync(Uri)
  commentId: M:OpenSilver.Compatibility.WebClient.DownloadStringAsync(Uri)
  id: DownloadStringAsync(Uri)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: DownloadStringAsync(Uri)
  nameWithType: WebClient.DownloadStringAsync(Uri)
  fullName: OpenSilver.Compatibility.WebClient.DownloadStringAsync(Uri)
  type: Method
  source:
    id: DownloadStringAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 226
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nDownloads the resource specified as a System.Uri. This method does not block\nthe calling thread.\n"
  example: []
  syntax:
    content: public void DownloadStringAsync(Uri address)
    parameters:
    - id: address
      type: Uri
      description: A System.Uri containing the URI to download.
    content.vb: Public Sub DownloadStringAsync(address As Uri)
  overload: OpenSilver.Compatibility.WebClient.DownloadStringAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(System.String)
  id: DownloadStringTaskAsync(System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: DownloadStringTaskAsync(String)
  nameWithType: WebClient.DownloadStringTaskAsync(String)
  fullName: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(System.String)
  type: Method
  source:
    id: DownloadStringTaskAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 317
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nDownloads the resource as a String from the URI specified as an asynchronous operation using a task object.\n"
  example: []
  syntax:
    content: public Task<string> DownloadStringTaskAsync(string address)
    parameters:
    - id: address
      type: System.String
      description: A System.Uri containing the URI to download.
    return:
      type: Task{System.String}
      description: Returns the resource as <see cref="!:System.Threading.Tasks.Task&lt;TResult>"></see>.
    content.vb: Public Function DownloadStringTaskAsync(address As String) As Task(Of String)
  overload: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(Uri)
  commentId: M:OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(Uri)
  id: DownloadStringTaskAsync(Uri)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: DownloadStringTaskAsync(Uri)
  nameWithType: WebClient.DownloadStringTaskAsync(Uri)
  fullName: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync(Uri)
  type: Method
  source:
    id: DownloadStringTaskAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 329
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nDownloads the resource as a String from the URI specified as an asynchronous operation using a task object.\n"
  example: []
  syntax:
    content: public Task<string> DownloadStringTaskAsync(Uri address)
    parameters:
    - id: address
      type: Uri
      description: A System.Uri containing the URI to download.
    return:
      type: Task{System.String}
      description: Returns the resource as <see cref="!:System.Threading.Tasks.Task&lt;TResult>"></see>.
    content.vb: Public Function DownloadStringTaskAsync(address As Uri) As Task(Of String)
  overload: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.ResponseHeaders
  commentId: P:OpenSilver.Compatibility.WebClient.ResponseHeaders
  id: ResponseHeaders
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: ResponseHeaders
  nameWithType: WebClient.ResponseHeaders
  fullName: OpenSilver.Compatibility.WebClient.ResponseHeaders
  type: Property
  source:
    id: ResponseHeaders
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 399
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  syntax:
    content: public WebHeaderCollection ResponseHeaders { get; }
    parameters: []
    return:
      type: WebHeaderCollection
    content.vb: Public ReadOnly Property ResponseHeaders As WebHeaderCollection
  overload: OpenSilver.Compatibility.WebClient.ResponseHeaders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OpenSilver.Compatibility.WebClient.UploadString(System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadString(System.String,System.String)
  id: UploadString(System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadString(String, String)
  nameWithType: WebClient.UploadString(String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadString(System.String, System.String)
  type: Method
  source:
    id: UploadString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 438
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource, using the POST method.\n"
  example: []
  syntax:
    content: public string UploadString(string address, string data)
    parameters:
    - id: address
      type: System.String
      description: "\nThe URI of the resource to receive the string. For Http resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: System.String
      description: A System.String containing the response sent by the server.
    content.vb: Public Function UploadString(address As String, data As String) As String
  overload: OpenSilver.Compatibility.WebClient.UploadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadString(Uri,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadString(Uri,System.String)
  id: UploadString(Uri,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadString(Uri, String)
  nameWithType: WebClient.UploadString(Uri, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadString(Uri, System.String)
  type: Method
  source:
    id: UploadString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 461
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource, using the POST method.\n"
  example: []
  syntax:
    content: public string UploadString(Uri address, string data)
    parameters:
    - id: address
      type: Uri
      description: "\nThe URI of the resource to receive the string. For Http resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: System.String
      description: A System.String containing the response sent by the server.
    content.vb: Public Function UploadString(address As Uri, data As String) As String
  overload: OpenSilver.Compatibility.WebClient.UploadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadString(System.String,System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadString(System.String,System.String,System.String)
  id: UploadString(System.String,System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadString(String, String, String)
  nameWithType: WebClient.UploadString(String, String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadString(System.String, System.String, System.String)
  type: Method
  source:
    id: UploadString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 488
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource, using the specified\nmethod.\n"
  example: []
  syntax:
    content: public string UploadString(string address, string method, string data)
    parameters:
    - id: address
      type: System.String
      description: "\nThe URI of the resource to receive the file. This URI must identify a resource\nthat can accept a request sent with the method method.\n"
    - id: method
      type: System.String
      description: "\nThe HTTP method used to send the string to the resource. If null, the default\nis POST for http and STOR for ftp.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: System.String
      description: A System.String containing the response sent by the server.
    content.vb: Public Function UploadString(address As String, method As String, data As String) As String
  overload: OpenSilver.Compatibility.WebClient.UploadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadString(Uri,System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadString(Uri,System.String,System.String)
  id: UploadString(Uri,System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadString(Uri, String, String)
  nameWithType: WebClient.UploadString(Uri, String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadString(Uri, System.String, System.String)
  type: Method
  source:
    id: UploadString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 515
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource, using the specified\nmethod.\n"
  example: []
  syntax:
    content: public string UploadString(Uri address, string method, string data)
    parameters:
    - id: address
      type: Uri
      description: "\nThe URI of the resource to receive the file. This URI must identify a resource\nthat can accept a request sent with the method method.\n"
    - id: method
      type: System.String
      description: "\nThe HTTP method used to send the string to the resource. If null, the default\nis POST for http and STOR for ftp.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: System.String
      description: A System.String containing the response sent by the server.
    content.vb: Public Function UploadString(address As Uri, method As String, data As String) As String
  overload: OpenSilver.Compatibility.WebClient.UploadString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri,System.String)
  id: UploadStringAsync(Uri,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringAsync(Uri, String)
  nameWithType: WebClient.UploadStringAsync(Uri, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri, System.String)
  type: Method
  source:
    id: UploadStringAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 610
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource. This method does\nnot block the calling thread.\n"
  example: []
  syntax:
    content: public void UploadStringAsync(Uri address, string data)
    parameters:
    - id: address
      type: Uri
      description: "\nThe URI of the resource to receive the file. For HTTP resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    content.vb: Public Sub UploadStringAsync(address As Uri, data As String)
  overload: OpenSilver.Compatibility.WebClient.UploadStringAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri,System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri,System.String,System.String)
  id: UploadStringAsync(Uri,System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringAsync(Uri, String, String)
  nameWithType: WebClient.UploadStringAsync(Uri, String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadStringAsync(Uri, System.String, System.String)
  type: Method
  source:
    id: UploadStringAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 636
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource. This method does\nnot block the calling thread.\n"
  example: []
  syntax:
    content: public void UploadStringAsync(Uri address, string method, string data)
    parameters:
    - id: address
      type: Uri
      description: "\nThe URI of the resource to receive the file. For HTTP resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: method
      type: System.String
      description: "\nThe HTTP method used to send the file to the resource. If null, the default\nis POST for http and STOR for ftp.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    content.vb: Public Sub UploadStringAsync(address As Uri, method As String, data As String)
  overload: OpenSilver.Compatibility.WebClient.UploadStringAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String,System.String)
  id: UploadStringTaskAsync(System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringTaskAsync(String, String)
  nameWithType: WebClient.UploadStringTaskAsync(String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String, System.String)
  type: Method
  source:
    id: UploadStringTaskAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 660
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource as an asynchronous operation using a task object.\n"
  example: []
  syntax:
    content: public Task<string> UploadStringTaskAsync(string address, string data)
    parameters:
    - id: address
      type: System.String
      description: "\nThe URI of the resource to receive the string. For HTTP resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: Task{System.String}
      description: "\nReturns <see cref=\"!:System.Threading.Tasks.Task&lt;TResult>\"></see>.\nThe task object representing the asynchronous operation. The Result property\non the task object returns a String containing the response sent by the server.\n"
    content.vb: Public Function UploadStringTaskAsync(address As String, data As String) As Task(Of String)
  overload: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri,System.String)
  id: UploadStringTaskAsync(Uri,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringTaskAsync(Uri, String)
  nameWithType: WebClient.UploadStringTaskAsync(Uri, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri, System.String)
  type: Method
  source:
    id: UploadStringTaskAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 679
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource as an asynchronous operation using a task object.\n"
  example: []
  syntax:
    content: public Task<string> UploadStringTaskAsync(Uri address, string data)
    parameters:
    - id: address
      type: Uri
      description: "\nThe URI of the resource to receive the string. For HTTP resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: Task{System.String}
      description: "\nReturns <see cref=\"!:System.Threading.Tasks.Task&lt;TResult>\"></see>.\nThe task object representing the asynchronous operation. The Result property\non the task object returns a String containing the response sent by the server.\n"
    content.vb: Public Function UploadStringTaskAsync(address As Uri, data As String) As Task(Of String)
  overload: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
  id: UploadStringTaskAsync(System.String,System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringTaskAsync(String, String, String)
  nameWithType: WebClient.UploadStringTaskAsync(String, String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(System.String, System.String, System.String)
  type: Method
  source:
    id: UploadStringTaskAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 702
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource as an asynchronous operation using a task object.\n"
  example: []
  syntax:
    content: public Task<string> UploadStringTaskAsync(string address, string method, string data)
    parameters:
    - id: address
      type: System.String
      description: "\nThe URI of the resource to receive the string. For HTTP resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: method
      type: System.String
      description: "\nThe HTTP method used to send the file to the resource. If null, the default\nis POST for http and STOR for ftp.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: Task{System.String}
      description: "\nReturns <see cref=\"!:System.Threading.Tasks.Task&lt;TResult>\"></see>.\nThe task object representing the asynchronous operation. The Result property\non the task object returns a String containing the response sent by the server.\n"
    content.vb: Public Function UploadStringTaskAsync(address As String, method As String, data As String) As Task(Of String)
  overload: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri,System.String,System.String)
  commentId: M:OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri,System.String,System.String)
  id: UploadStringTaskAsync(Uri,System.String,System.String)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringTaskAsync(Uri, String, String)
  nameWithType: WebClient.UploadStringTaskAsync(Uri, String, String)
  fullName: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync(Uri, System.String, System.String)
  type: Method
  source:
    id: UploadStringTaskAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 725
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nUploads the specified string to the specified resource as an asynchronous operation using a task object.\n"
  example: []
  syntax:
    content: public Task<string> UploadStringTaskAsync(Uri address, string method, string data)
    parameters:
    - id: address
      type: Uri
      description: "\nThe URI of the resource to receive the string. For HTTP resources, this URI\nmust identify a resource that can accept a request sent with the POST method,\nsuch as a script or ASP page.\n"
    - id: method
      type: System.String
      description: "\nThe HTTP method used to send the file to the resource. If null, the default\nis POST for http and STOR for ftp.\n"
    - id: data
      type: System.String
      description: The string to be uploaded.
    return:
      type: Task{System.String}
      description: "\nReturns <see cref=\"!:System.Threading.Tasks.Task&lt;TResult>\"></see>.\nThe task object representing the asynchronous operation. The Result property\non the task object returns a String containing the response sent by the server.\n"
    content.vb: Public Function UploadStringTaskAsync(address As Uri, method As String, data As String) As Task(Of String)
  overload: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.UploadStringCompleted
  commentId: E:OpenSilver.Compatibility.WebClient.UploadStringCompleted
  id: UploadStringCompleted
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: UploadStringCompleted
  nameWithType: WebClient.UploadStringCompleted
  fullName: OpenSilver.Compatibility.WebClient.UploadStringCompleted
  type: Event
  source:
    id: UploadStringCompleted
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 800
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  summary: "\nOccurs when an asynchronous string-upload operation completes.\n"
  example: []
  syntax:
    content: public event UploadStringCompletedEventHandler UploadStringCompleted
    return:
      type: OpenSilver.Compatibility.UploadStringCompletedEventHandler
    content.vb: Public Event UploadStringCompleted As UploadStringCompletedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.OpenReadCompleted
  commentId: E:OpenSilver.Compatibility.WebClient.OpenReadCompleted
  id: OpenReadCompleted
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: OpenReadCompleted
  nameWithType: WebClient.OpenReadCompleted
  fullName: OpenSilver.Compatibility.WebClient.OpenReadCompleted
  type: Event
  source:
    id: OpenReadCompleted
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 919
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  syntax:
    content: public event OpenReadCompletedEventHandler OpenReadCompleted
    return:
      type: OpenReadCompletedEventHandler
    content.vb: Public Event OpenReadCompleted As OpenReadCompletedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.OpenWriteCompleted
  commentId: E:OpenSilver.Compatibility.WebClient.OpenWriteCompleted
  id: OpenWriteCompleted
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: OpenWriteCompleted
  nameWithType: WebClient.OpenWriteCompleted
  fullName: OpenSilver.Compatibility.WebClient.OpenWriteCompleted
  type: Event
  source:
    id: OpenWriteCompleted
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 926
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  syntax:
    content: public event OpenWriteCompletedEventHandler OpenWriteCompleted
    return:
      type: OpenWriteCompletedEventHandler
    content.vb: Public Event OpenWriteCompleted As OpenWriteCompletedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.OpenReadAsync(Uri,System.Object)
  commentId: M:OpenSilver.Compatibility.WebClient.OpenReadAsync(Uri,System.Object)
  id: OpenReadAsync(Uri,System.Object)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: OpenReadAsync(Uri, Object)
  nameWithType: WebClient.OpenReadAsync(Uri, Object)
  fullName: OpenSilver.Compatibility.WebClient.OpenReadAsync(Uri, System.Object)
  type: Method
  source:
    id: OpenReadAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 1364
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  syntax:
    content: public void OpenReadAsync(Uri address, object userToken)
    parameters:
    - id: address
      type: Uri
    - id: userToken
      type: System.Object
    content.vb: Public Sub OpenReadAsync(address As Uri, userToken As Object)
  overload: OpenSilver.Compatibility.WebClient.OpenReadAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Compatibility.WebClient.OpenWriteAsync(Uri)
  commentId: M:OpenSilver.Compatibility.WebClient.OpenWriteAsync(Uri)
  id: OpenWriteAsync(Uri)
  parent: OpenSilver.Compatibility.WebClient
  langs:
  - csharp
  - vb
  name: OpenWriteAsync(Uri)
  nameWithType: WebClient.OpenWriteAsync(Uri)
  fullName: OpenSilver.Compatibility.WebClient.OpenWriteAsync(Uri)
  type: Method
  source:
    id: OpenWriteAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Net\WebClient.cs
    startLine: 1477
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Compatibility
  syntax:
    content: public void OpenWriteAsync(Uri address)
    parameters:
    - id: address
      type: Uri
    content.vb: Public Sub OpenWriteAsync(address As Uri)
  overload: OpenSilver.Compatibility.WebClient.OpenWriteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OpenSilver.Compatibility
  commentId: N:OpenSilver.Compatibility
  name: OpenSilver.Compatibility
  nameWithType: OpenSilver.Compatibility
  fullName: OpenSilver.Compatibility
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: OpenSilver.Compatibility.WebClient.Encoding*
  commentId: Overload:OpenSilver.Compatibility.WebClient.Encoding
  name: Encoding
  nameWithType: WebClient.Encoding
  fullName: OpenSilver.Compatibility.WebClient.Encoding
- uid: Encoding
  commentId: '!:Encoding'
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: OpenSilver.Compatibility.WebClient.Headers*
  commentId: Overload:OpenSilver.Compatibility.WebClient.Headers
  name: Headers
  nameWithType: WebClient.Headers
  fullName: OpenSilver.Compatibility.WebClient.Headers
- uid: WebHeaderCollection
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: WebHeaderCollection
- uid: OpenSilver.Compatibility.WebClient.#ctor*
  commentId: Overload:OpenSilver.Compatibility.WebClient.#ctor
  name: WebClient
  nameWithType: WebClient.WebClient
  fullName: OpenSilver.Compatibility.WebClient.WebClient
- uid: OpenSilver.Compatibility.DownloadStringCompletedEventHandler
  commentId: T:OpenSilver.Compatibility.DownloadStringCompletedEventHandler
  parent: OpenSilver.Compatibility
  name: DownloadStringCompletedEventHandler
  nameWithType: DownloadStringCompletedEventHandler
  fullName: OpenSilver.Compatibility.DownloadStringCompletedEventHandler
- uid: OpenSilver.Compatibility.WebClient.DownloadString*
  commentId: Overload:OpenSilver.Compatibility.WebClient.DownloadString
  name: DownloadString
  nameWithType: WebClient.DownloadString
  fullName: OpenSilver.Compatibility.WebClient.DownloadString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: OpenSilver.Compatibility.WebClient.DownloadStringAsync*
  commentId: Overload:OpenSilver.Compatibility.WebClient.DownloadStringAsync
  name: DownloadStringAsync
  nameWithType: WebClient.DownloadStringAsync
  fullName: OpenSilver.Compatibility.WebClient.DownloadStringAsync
- uid: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync*
  commentId: Overload:OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync
  name: DownloadStringTaskAsync
  nameWithType: WebClient.DownloadStringTaskAsync
  fullName: OpenSilver.Compatibility.WebClient.DownloadStringTaskAsync
- uid: Task{System.String}
  commentId: '!:Task{System.String}'
  definition: Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenSilver.Compatibility.WebClient.ResponseHeaders*
  commentId: Overload:OpenSilver.Compatibility.WebClient.ResponseHeaders
  name: ResponseHeaders
  nameWithType: WebClient.ResponseHeaders
  fullName: OpenSilver.Compatibility.WebClient.ResponseHeaders
- uid: OpenSilver.Compatibility.WebClient.UploadString*
  commentId: Overload:OpenSilver.Compatibility.WebClient.UploadString
  name: UploadString
  nameWithType: WebClient.UploadString
  fullName: OpenSilver.Compatibility.WebClient.UploadString
- uid: OpenSilver.Compatibility.WebClient.UploadStringAsync*
  commentId: Overload:OpenSilver.Compatibility.WebClient.UploadStringAsync
  name: UploadStringAsync
  nameWithType: WebClient.UploadStringAsync
  fullName: OpenSilver.Compatibility.WebClient.UploadStringAsync
- uid: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync*
  commentId: Overload:OpenSilver.Compatibility.WebClient.UploadStringTaskAsync
  name: UploadStringTaskAsync
  nameWithType: WebClient.UploadStringTaskAsync
  fullName: OpenSilver.Compatibility.WebClient.UploadStringTaskAsync
- uid: OpenSilver.Compatibility.UploadStringCompletedEventHandler
  commentId: T:OpenSilver.Compatibility.UploadStringCompletedEventHandler
  parent: OpenSilver.Compatibility
  name: UploadStringCompletedEventHandler
  nameWithType: UploadStringCompletedEventHandler
  fullName: OpenSilver.Compatibility.UploadStringCompletedEventHandler
- uid: OpenReadCompletedEventHandler
  commentId: '!:OpenReadCompletedEventHandler'
  isExternal: true
  name: OpenReadCompletedEventHandler
  nameWithType: OpenReadCompletedEventHandler
  fullName: OpenReadCompletedEventHandler
- uid: OpenWriteCompletedEventHandler
  commentId: '!:OpenWriteCompletedEventHandler'
  isExternal: true
  name: OpenWriteCompletedEventHandler
  nameWithType: OpenWriteCompletedEventHandler
  fullName: OpenWriteCompletedEventHandler
- uid: OpenSilver.Compatibility.WebClient.OpenReadAsync*
  commentId: Overload:OpenSilver.Compatibility.WebClient.OpenReadAsync
  name: OpenReadAsync
  nameWithType: WebClient.OpenReadAsync
  fullName: OpenSilver.Compatibility.WebClient.OpenReadAsync
- uid: OpenSilver.Compatibility.WebClient.OpenWriteAsync*
  commentId: Overload:OpenSilver.Compatibility.WebClient.OpenWriteAsync
  name: OpenWriteAsync
  nameWithType: WebClient.OpenWriteAsync
  fullName: OpenSilver.Compatibility.WebClient.OpenWriteAsync
