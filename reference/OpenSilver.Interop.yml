### YamlMime:ManagedReference
items:
- uid: OpenSilver.Interop
  commentId: T:OpenSilver.Interop
  id: Interop
  parent: OpenSilver
  children:
  - OpenSilver.Interop.ExecuteJavaScript(System.String)
  - OpenSilver.Interop.ExecuteJavaScript(System.String,System.Object[])
  - OpenSilver.Interop.ExecuteJavaScriptAsync(System.String)
  - OpenSilver.Interop.ExecuteJavaScriptAsync(System.String,System.Object[])
  - OpenSilver.Interop.GetDiv(System.Windows.FrameworkElement)
  - OpenSilver.Interop.IsNull(System.Object)
  - OpenSilver.Interop.IsRunningInTheSimulator
  - OpenSilver.Interop.IsRunningInTheSimulator_WorkAround
  - OpenSilver.Interop.IsUndefined(System.Object)
  - OpenSilver.Interop.LoadCssFile(OpenSilver.Interop.ResourceFile)
  - OpenSilver.Interop.LoadCssFile(System.String)
  - OpenSilver.Interop.LoadCssFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action)
  - OpenSilver.Interop.LoadCssFilesAsync(IEnumerable{System.String},Action)
  - OpenSilver.Interop.LoadJavaScriptFile(OpenSilver.Interop.ResourceFile)
  - OpenSilver.Interop.LoadJavaScriptFile(System.String)
  - OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action,Action)
  - OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable{System.String},Action,Action)
  - OpenSilver.Interop.Unbox(System.Object)
  langs:
  - csharp
  - vb
  name: Interop
  nameWithType: Interop
  fullName: OpenSilver.Interop
  type: Class
  source:
    id: Interop
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nProvides static methods for executing JavaScript code from within C#.\n"
  example: []
  syntax:
    content: 'public static class Interop : object'
    content.vb: >-
      Public Module Interop
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: OpenSilver.Interop.ExecuteJavaScript(System.String)
  commentId: M:OpenSilver.Interop.ExecuteJavaScript(System.String)
  id: ExecuteJavaScript(System.String)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: ExecuteJavaScript(String)
  nameWithType: Interop.ExecuteJavaScript(String)
  fullName: OpenSilver.Interop.ExecuteJavaScript(System.String)
  type: Method
  source:
    id: ExecuteJavaScript
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAllows calling JavaScript code from within C#.\n"
  example: []
  syntax:
    content: public static object ExecuteJavaScript(string javascript)
    parameters:
    - id: javascript
      type: System.String
      description: The JavaScript code to execute.
    return:
      type: System.Object
      description: The result, if any, of the JavaScript call.
    content.vb: Public Shared Function ExecuteJavaScript(javascript As String) As Object
  overload: OpenSilver.Interop.ExecuteJavaScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.ExecuteJavaScript(System.String,System.Object[])
  commentId: M:OpenSilver.Interop.ExecuteJavaScript(System.String,System.Object[])
  id: ExecuteJavaScript(System.String,System.Object[])
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: ExecuteJavaScript(String, Object[])
  nameWithType: Interop.ExecuteJavaScript(String, Object[])
  fullName: OpenSilver.Interop.ExecuteJavaScript(System.String, System.Object[])
  type: Method
  source:
    id: ExecuteJavaScript
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAllows calling JavaScript code from within C#.\n"
  example: []
  syntax:
    content: public static object ExecuteJavaScript(string javascript, params object[] variables)
    parameters:
    - id: javascript
      type: System.String
      description: The JavaScript code to execute.
    - id: variables
      type: System.Object[]
      description: The objects to use inside the JavaScript call.
    return:
      type: System.Object
      description: The result, if any, of the JavaScript call.
    content.vb: Public Shared Function ExecuteJavaScript(javascript As String, ParamArray variables As Object()) As Object
  overload: OpenSilver.Interop.ExecuteJavaScript*
  nameWithType.vb: Interop.ExecuteJavaScript(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.Interop.ExecuteJavaScript(System.String, System.Object())
  name.vb: ExecuteJavaScript(String, Object())
- uid: OpenSilver.Interop.ExecuteJavaScriptAsync(System.String)
  commentId: M:OpenSilver.Interop.ExecuteJavaScriptAsync(System.String)
  id: ExecuteJavaScriptAsync(System.String)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: ExecuteJavaScriptAsync(String)
  nameWithType: Interop.ExecuteJavaScriptAsync(String)
  fullName: OpenSilver.Interop.ExecuteJavaScriptAsync(System.String)
  type: Method
  source:
    id: ExecuteJavaScriptAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 66
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAllows calling JavaScript code from within C#. The call will be asynchronous when run in the Simulator.\n"
  example: []
  syntax:
    content: public static object ExecuteJavaScriptAsync(string javascript)
    parameters:
    - id: javascript
      type: System.String
      description: The JavaScript code to execute.
    return:
      type: System.Object
    content.vb: Public Shared Function ExecuteJavaScriptAsync(javascript As String) As Object
  overload: OpenSilver.Interop.ExecuteJavaScriptAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.ExecuteJavaScriptAsync(System.String,System.Object[])
  commentId: M:OpenSilver.Interop.ExecuteJavaScriptAsync(System.String,System.Object[])
  id: ExecuteJavaScriptAsync(System.String,System.Object[])
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: ExecuteJavaScriptAsync(String, Object[])
  nameWithType: Interop.ExecuteJavaScriptAsync(String, Object[])
  fullName: OpenSilver.Interop.ExecuteJavaScriptAsync(System.String, System.Object[])
  type: Method
  source:
    id: ExecuteJavaScriptAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAllows calling JavaScript code from within C#. The call will be asynchronous when run in the Simulator.\n"
  example: []
  syntax:
    content: public static object ExecuteJavaScriptAsync(string javascript, params object[] variables)
    parameters:
    - id: javascript
      type: System.String
      description: The JavaScript code to execute.
    - id: variables
      type: System.Object[]
      description: The objects to use inside the JavaScript call.
    return:
      type: System.Object
    content.vb: Public Shared Function ExecuteJavaScriptAsync(javascript As String, ParamArray variables As Object()) As Object
  overload: OpenSilver.Interop.ExecuteJavaScriptAsync*
  nameWithType.vb: Interop.ExecuteJavaScriptAsync(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.Interop.ExecuteJavaScriptAsync(System.String, System.Object())
  name.vb: ExecuteJavaScriptAsync(String, Object())
- uid: OpenSilver.Interop.Unbox(System.Object)
  commentId: M:OpenSilver.Interop.Unbox(System.Object)
  id: Unbox(System.Object)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: Unbox(Object)
  nameWithType: Interop.Unbox(Object)
  fullName: OpenSilver.Interop.Unbox(System.Object)
  type: Method
  source:
    id: Unbox
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 92
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nUnboxes the value passed as a parameter. It is particularly useful for the variables of the ExecuteJavaScript Methods calls aimed at using third party libraries.\n"
  example: []
  syntax:
    content: public static object Unbox(object value)
    parameters:
    - id: value
      type: System.Object
      description: The value to unbox.
    return:
      type: System.Object
      description: the unboxed value if the value was boxed, the value itself otherwise.
    content.vb: Public Shared Function Unbox(value As Object) As Object
  overload: OpenSilver.Interop.Unbox*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.LoadJavaScriptFile(System.String)
  commentId: M:OpenSilver.Interop.LoadJavaScriptFile(System.String)
  id: LoadJavaScriptFile(System.String)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadJavaScriptFile(String)
  nameWithType: Interop.LoadJavaScriptFile(String)
  fullName: OpenSilver.Interop.LoadJavaScriptFile(System.String)
  type: Method
  source:
    id: LoadJavaScriptFile
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAdds a &apos;script&apos; tag to the HTML page and waits for the script to finish loading.\n"
  example: []
  syntax:
    content: public static Task<object> LoadJavaScriptFile(string url)
    parameters:
    - id: url
      type: System.String
      description: The URL of the JavaScript file, with the syntax ms-appx:///AssemblyName/Folder/FileName.js or /AssemblyName;component/Folder/FileName.js
    return:
      type: Task{System.Object}
      description: Nothing.
    content.vb: Public Shared Function LoadJavaScriptFile(url As String) As Task(Of Object)
  overload: OpenSilver.Interop.LoadJavaScriptFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.LoadJavaScriptFile(OpenSilver.Interop.ResourceFile)
  commentId: M:OpenSilver.Interop.LoadJavaScriptFile(OpenSilver.Interop.ResourceFile)
  id: LoadJavaScriptFile(OpenSilver.Interop.ResourceFile)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadJavaScriptFile(Interop.ResourceFile)
  nameWithType: Interop.LoadJavaScriptFile(Interop.ResourceFile)
  fullName: OpenSilver.Interop.LoadJavaScriptFile(OpenSilver.Interop.ResourceFile)
  type: Method
  source:
    id: LoadJavaScriptFile
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 125
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  syntax:
    content: public static Task<object> LoadJavaScriptFile(Interop.ResourceFile resourceFile)
    parameters:
    - id: resourceFile
      type: OpenSilver.Interop.ResourceFile
    return:
      type: Task{System.Object}
    content.vb: Public Shared Function LoadJavaScriptFile(resourceFile As Interop.ResourceFile) As Task(Of Object)
  overload: OpenSilver.Interop.LoadJavaScriptFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable{System.String},Action,Action)
  commentId: M:OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable{System.String},Action,Action)
  id: LoadJavaScriptFilesAsync(IEnumerable{System.String},Action,Action)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadJavaScriptFilesAsync(IEnumerable<String>, Action, Action)
  nameWithType: Interop.LoadJavaScriptFilesAsync(IEnumerable<String>, Action, Action)
  fullName: OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable<System.String>, Action, Action)
  type: Method
  source:
    id: LoadJavaScriptFilesAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 163
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nLoads a list of JavaScript files from either an online location (http/https) or the local project. Note: This method will stop at the first script it cannot load, meaning that all subsequent scripts will not be loaded.\n"
  example: []
  syntax:
    content: public static void LoadJavaScriptFilesAsync(IEnumerable<string> urls, Action callback, Action callbackOnError = null)
    parameters:
    - id: urls
      type: IEnumerable{System.String}
      description: >
        The URLs of the JavaScript files, with the syntax ms-appx:///AssemblyName/Folder/FileName.js or /AssemblyName;component/Folder/FileName.js or https://someAddress/FileName.js
    - id: callback
      type: Action
      description: The method that is called when all the files have successfully finished loading.
    - id: callbackOnError
      type: Action
      description: The method that is called when one of the files could not be loaded.
    content.vb: Public Shared Sub LoadJavaScriptFilesAsync(urls As IEnumerable(Of String), callback As Action, callbackOnError As Action = Nothing)
  overload: OpenSilver.Interop.LoadJavaScriptFilesAsync*
  nameWithType.vb: Interop.LoadJavaScriptFilesAsync(IEnumerable(Of String), Action, Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable(Of System.String), Action, Action)
  name.vb: LoadJavaScriptFilesAsync(IEnumerable(Of String), Action, Action)
- uid: OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action,Action)
  commentId: M:OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action,Action)
  id: LoadJavaScriptFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action,Action)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadJavaScriptFilesAsync(IEnumerable<Interop.ResourceFile>, Action, Action)
  nameWithType: Interop.LoadJavaScriptFilesAsync(IEnumerable<Interop.ResourceFile>, Action, Action)
  fullName: OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable<OpenSilver.Interop.ResourceFile>, Action, Action)
  type: Method
  source:
    id: LoadJavaScriptFilesAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 178
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  syntax:
    content: public static void LoadJavaScriptFilesAsync(IEnumerable<Interop.ResourceFile> resourceFiles, Action callback, Action callbackOnError = null)
    parameters:
    - id: resourceFiles
      type: IEnumerable{OpenSilver.Interop.ResourceFile}
    - id: callback
      type: Action
    - id: callbackOnError
      type: Action
    content.vb: Public Shared Sub LoadJavaScriptFilesAsync(resourceFiles As IEnumerable(Of Interop.ResourceFile), callback As Action, callbackOnError As Action = Nothing)
  overload: OpenSilver.Interop.LoadJavaScriptFilesAsync*
  nameWithType.vb: Interop.LoadJavaScriptFilesAsync(IEnumerable(Of Interop.ResourceFile), Action, Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.Interop.LoadJavaScriptFilesAsync(IEnumerable(Of OpenSilver.Interop.ResourceFile), Action, Action)
  name.vb: LoadJavaScriptFilesAsync(IEnumerable(Of Interop.ResourceFile), Action, Action)
- uid: OpenSilver.Interop.LoadCssFile(System.String)
  commentId: M:OpenSilver.Interop.LoadCssFile(System.String)
  id: LoadCssFile(System.String)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadCssFile(String)
  nameWithType: Interop.LoadCssFile(String)
  fullName: OpenSilver.Interop.LoadCssFile(System.String)
  type: Method
  source:
    id: LoadCssFile
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 207
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAdds a &apos;link&apos; tag to the HTML page and waits for the CSS file to finish loading.\n"
  example: []
  syntax:
    content: public static Task<object> LoadCssFile(string url)
    parameters:
    - id: url
      type: System.String
      description: The URL of the CSS file, with the syntax ms-appx:///AssemblyName/Folder/FileName.css or /AssemblyName;component/Folder/FileName.css
    return:
      type: Task{System.Object}
      description: Nothing
    content.vb: Public Shared Function LoadCssFile(url As String) As Task(Of Object)
  overload: OpenSilver.Interop.LoadCssFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.LoadCssFile(OpenSilver.Interop.ResourceFile)
  commentId: M:OpenSilver.Interop.LoadCssFile(OpenSilver.Interop.ResourceFile)
  id: LoadCssFile(OpenSilver.Interop.ResourceFile)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadCssFile(Interop.ResourceFile)
  nameWithType: Interop.LoadCssFile(Interop.ResourceFile)
  fullName: OpenSilver.Interop.LoadCssFile(OpenSilver.Interop.ResourceFile)
  type: Method
  source:
    id: LoadCssFile
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 215
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  syntax:
    content: public static Task<object> LoadCssFile(Interop.ResourceFile resourceFile)
    parameters:
    - id: resourceFile
      type: OpenSilver.Interop.ResourceFile
    return:
      type: Task{System.Object}
    content.vb: Public Shared Function LoadCssFile(resourceFile As Interop.ResourceFile) As Task(Of Object)
  overload: OpenSilver.Interop.LoadCssFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.LoadCssFilesAsync(IEnumerable{System.String},Action)
  commentId: M:OpenSilver.Interop.LoadCssFilesAsync(IEnumerable{System.String},Action)
  id: LoadCssFilesAsync(IEnumerable{System.String},Action)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadCssFilesAsync(IEnumerable<String>, Action)
  nameWithType: Interop.LoadCssFilesAsync(IEnumerable<String>, Action)
  fullName: OpenSilver.Interop.LoadCssFilesAsync(IEnumerable<System.String>, Action)
  type: Method
  source:
    id: LoadCssFilesAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 236
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nAdds &apos;link&apos; tags to the HTML page and waits for the CSS files to finish loading.\n"
  example: []
  syntax:
    content: public static void LoadCssFilesAsync(IEnumerable<string> urls, Action callback)
    parameters:
    - id: urls
      type: IEnumerable{System.String}
      description: The URL of the CSS files, with the syntax ms-appx:///AssemblyName/Folder/FileName.css or /AssemblyName;component/Folder/FileName.css
    - id: callback
      type: Action
      description: The method that is called when the CSS files have finished loading.
    content.vb: Public Shared Sub LoadCssFilesAsync(urls As IEnumerable(Of String), callback As Action)
  overload: OpenSilver.Interop.LoadCssFilesAsync*
  nameWithType.vb: Interop.LoadCssFilesAsync(IEnumerable(Of String), Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.Interop.LoadCssFilesAsync(IEnumerable(Of System.String), Action)
  name.vb: LoadCssFilesAsync(IEnumerable(Of String), Action)
- uid: OpenSilver.Interop.LoadCssFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action)
  commentId: M:OpenSilver.Interop.LoadCssFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action)
  id: LoadCssFilesAsync(IEnumerable{OpenSilver.Interop.ResourceFile},Action)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: LoadCssFilesAsync(IEnumerable<Interop.ResourceFile>, Action)
  nameWithType: Interop.LoadCssFilesAsync(IEnumerable<Interop.ResourceFile>, Action)
  fullName: OpenSilver.Interop.LoadCssFilesAsync(IEnumerable<OpenSilver.Interop.ResourceFile>, Action)
  type: Method
  source:
    id: LoadCssFilesAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 242
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  syntax:
    content: public static void LoadCssFilesAsync(IEnumerable<Interop.ResourceFile> resourceFiles, Action callback)
    parameters:
    - id: resourceFiles
      type: IEnumerable{OpenSilver.Interop.ResourceFile}
    - id: callback
      type: Action
    content.vb: Public Shared Sub LoadCssFilesAsync(resourceFiles As IEnumerable(Of Interop.ResourceFile), callback As Action)
  overload: OpenSilver.Interop.LoadCssFilesAsync*
  nameWithType.vb: Interop.LoadCssFilesAsync(IEnumerable(Of Interop.ResourceFile), Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.Interop.LoadCssFilesAsync(IEnumerable(Of OpenSilver.Interop.ResourceFile), Action)
  name.vb: LoadCssFilesAsync(IEnumerable(Of Interop.ResourceFile), Action)
- uid: OpenSilver.Interop.GetDiv(System.Windows.FrameworkElement)
  commentId: M:OpenSilver.Interop.GetDiv(System.Windows.FrameworkElement)
  id: GetDiv(System.Windows.FrameworkElement)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: GetDiv(FrameworkElement)
  nameWithType: Interop.GetDiv(FrameworkElement)
  fullName: OpenSilver.Interop.GetDiv(System.Windows.FrameworkElement)
  type: Method
  source:
    id: GetDiv
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 264
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nReturns the HTML Div that is associated to the specified FrameworkElement.\nNote: the FrameworkElement must be in the visual tree. Consider calling this\nmethod from the &apos;Loaded&apos; event to ensure that the element is in the visual tree.\n"
  example: []
  syntax:
    content: public static object GetDiv(FrameworkElement frameworkElement)
    parameters:
    - id: frameworkElement
      type: System.Windows.FrameworkElement
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Shared Function GetDiv(frameworkElement As FrameworkElement) As Object
  overload: OpenSilver.Interop.GetDiv*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.IsRunningInTheSimulator
  commentId: P:OpenSilver.Interop.IsRunningInTheSimulator
  id: IsRunningInTheSimulator
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: IsRunningInTheSimulator
  nameWithType: Interop.IsRunningInTheSimulator
  fullName: OpenSilver.Interop.IsRunningInTheSimulator
  type: Property
  source:
    id: IsRunningInTheSimulator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 289
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nReturns True is the app is running in C#, and False otherwise. \nTo know if you&apos;re in the simulator use IsRunningInTheSimulator_WorkAround.\n"
  example: []
  syntax:
    content: public static bool IsRunningInTheSimulator { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsRunningInTheSimulator As Boolean
  overload: OpenSilver.Interop.IsRunningInTheSimulator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: OpenSilver.Interop.IsRunningInTheSimulator_WorkAround
  commentId: P:OpenSilver.Interop.IsRunningInTheSimulator_WorkAround
  id: IsRunningInTheSimulator_WorkAround
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: IsRunningInTheSimulator_WorkAround
  nameWithType: Interop.IsRunningInTheSimulator_WorkAround
  fullName: OpenSilver.Interop.IsRunningInTheSimulator_WorkAround
  type: Property
  source:
    id: IsRunningInTheSimulator_WorkAround
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 307
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nReturns True is the app is running inside the Simulator, and False otherwise.\n"
  example: []
  syntax:
    content: public static bool IsRunningInTheSimulator_WorkAround { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsRunningInTheSimulator_WorkAround As Boolean
  overload: OpenSilver.Interop.IsRunningInTheSimulator_WorkAround*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: OpenSilver.Interop.IsUndefined(System.Object)
  commentId: M:OpenSilver.Interop.IsUndefined(System.Object)
  id: IsUndefined(System.Object)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: IsUndefined(Object)
  nameWithType: Interop.IsUndefined(Object)
  fullName: OpenSilver.Interop.IsUndefined(System.Object)
  type: Method
  source:
    id: IsUndefined
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 323
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nCheck if the given jsnode is undefined\n"
  example: []
  syntax:
    content: public static bool IsUndefined(object jsObject)
    parameters:
    - id: jsObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsUndefined(jsObject As Object) As Boolean
  overload: OpenSilver.Interop.IsUndefined*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OpenSilver.Interop.IsNull(System.Object)
  commentId: M:OpenSilver.Interop.IsNull(System.Object)
  id: IsNull(System.Object)
  parent: OpenSilver.Interop
  langs:
  - csharp
  - vb
  name: IsNull(Object)
  nameWithType: Interop.IsNull(Object)
  fullName: OpenSilver.Interop.IsNull(System.Object)
  type: Method
  source:
    id: IsNull
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PublicAPI\Interop\Interop.cs
    startLine: 334
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nCheck if the given jsnode is undefined\n"
  example: []
  syntax:
    content: public static bool IsNull(object jsObject)
    parameters:
    - id: jsObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNull(jsObject As Object) As Boolean
  overload: OpenSilver.Interop.IsNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: OpenSilver
  commentId: N:OpenSilver
  name: OpenSilver
  nameWithType: OpenSilver
  fullName: OpenSilver
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OpenSilver.Interop.ExecuteJavaScript*
  commentId: Overload:OpenSilver.Interop.ExecuteJavaScript
  name: ExecuteJavaScript
  nameWithType: Interop.ExecuteJavaScript
  fullName: OpenSilver.Interop.ExecuteJavaScript
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OpenSilver.Interop.ExecuteJavaScriptAsync*
  commentId: Overload:OpenSilver.Interop.ExecuteJavaScriptAsync
  name: ExecuteJavaScriptAsync
  nameWithType: Interop.ExecuteJavaScriptAsync
  fullName: OpenSilver.Interop.ExecuteJavaScriptAsync
- uid: OpenSilver.Interop.Unbox*
  commentId: Overload:OpenSilver.Interop.Unbox
  name: Unbox
  nameWithType: Interop.Unbox
  fullName: OpenSilver.Interop.Unbox
- uid: OpenSilver.Interop.LoadJavaScriptFile*
  commentId: Overload:OpenSilver.Interop.LoadJavaScriptFile
  name: LoadJavaScriptFile
  nameWithType: Interop.LoadJavaScriptFile
  fullName: OpenSilver.Interop.LoadJavaScriptFile
- uid: Task{System.Object}
  commentId: '!:Task{System.Object}'
  definition: Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullName.vb: Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenSilver.Interop.ResourceFile
  commentId: T:OpenSilver.Interop.ResourceFile
  parent: OpenSilver
  name: Interop.ResourceFile
  nameWithType: Interop.ResourceFile
  fullName: OpenSilver.Interop.ResourceFile
- uid: OpenSilver.Interop.LoadJavaScriptFilesAsync*
  commentId: Overload:OpenSilver.Interop.LoadJavaScriptFilesAsync
  name: LoadJavaScriptFilesAsync
  nameWithType: Interop.LoadJavaScriptFilesAsync
  fullName: OpenSilver.Interop.LoadJavaScriptFilesAsync
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{OpenSilver.Interop.ResourceFile}
  commentId: '!:IEnumerable{OpenSilver.Interop.ResourceFile}'
  definition: IEnumerable`1
  name: IEnumerable<Interop.ResourceFile>
  nameWithType: IEnumerable<Interop.ResourceFile>
  fullName: IEnumerable<OpenSilver.Interop.ResourceFile>
  nameWithType.vb: IEnumerable(Of Interop.ResourceFile)
  fullName.vb: IEnumerable(Of OpenSilver.Interop.ResourceFile)
  name.vb: IEnumerable(Of Interop.ResourceFile)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenSilver.Interop.ResourceFile
    name: Interop.ResourceFile
    nameWithType: Interop.ResourceFile
    fullName: OpenSilver.Interop.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenSilver.Interop.ResourceFile
    name: Interop.ResourceFile
    nameWithType: Interop.ResourceFile
    fullName: OpenSilver.Interop.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenSilver.Interop.LoadCssFile*
  commentId: Overload:OpenSilver.Interop.LoadCssFile
  name: LoadCssFile
  nameWithType: Interop.LoadCssFile
  fullName: OpenSilver.Interop.LoadCssFile
- uid: OpenSilver.Interop.LoadCssFilesAsync*
  commentId: Overload:OpenSilver.Interop.LoadCssFilesAsync
  name: LoadCssFilesAsync
  nameWithType: Interop.LoadCssFilesAsync
  fullName: OpenSilver.Interop.LoadCssFilesAsync
- uid: OpenSilver.Interop.GetDiv*
  commentId: Overload:OpenSilver.Interop.GetDiv
  name: GetDiv
  nameWithType: Interop.GetDiv
  fullName: OpenSilver.Interop.GetDiv
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: OpenSilver.Interop.IsRunningInTheSimulator*
  commentId: Overload:OpenSilver.Interop.IsRunningInTheSimulator
  name: IsRunningInTheSimulator
  nameWithType: Interop.IsRunningInTheSimulator
  fullName: OpenSilver.Interop.IsRunningInTheSimulator
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OpenSilver.Interop.IsRunningInTheSimulator_WorkAround*
  commentId: Overload:OpenSilver.Interop.IsRunningInTheSimulator_WorkAround
  name: IsRunningInTheSimulator_WorkAround
  nameWithType: Interop.IsRunningInTheSimulator_WorkAround
  fullName: OpenSilver.Interop.IsRunningInTheSimulator_WorkAround
- uid: OpenSilver.Interop.IsUndefined*
  commentId: Overload:OpenSilver.Interop.IsUndefined
  name: IsUndefined
  nameWithType: Interop.IsUndefined
  fullName: OpenSilver.Interop.IsUndefined
- uid: OpenSilver.Interop.IsNull*
  commentId: Overload:OpenSilver.Interop.IsNull
  name: IsNull
  nameWithType: Interop.IsNull
  fullName: OpenSilver.Interop.IsNull
