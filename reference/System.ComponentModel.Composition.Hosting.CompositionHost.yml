### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionHost
  commentId: T:System.ComponentModel.Composition.Hosting.CompositionHost
  id: CompositionHost
  parent: System.ComponentModel.Composition.Hosting
  children:
  - System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(ComposablePartCatalog[])
  - System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(CompositionContainer)
  langs:
  - csharp
  - vb
  name: CompositionHost
  nameWithType: CompositionHost
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost
  type: Class
  source:
    id: CompositionHost
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel.Composition.Hosting\WORKINPROGRESS\CompositionHost.cs
    startLine: 7
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: 'public static class CompositionHost : object'
    content.vb: >-
      Public Module CompositionHost
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(CompositionContainer)
  commentId: M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(CompositionContainer)
  id: Initialize(CompositionContainer)
  parent: System.ComponentModel.Composition.Hosting.CompositionHost
  langs:
  - csharp
  - vb
  name: Initialize(CompositionContainer)
  nameWithType: CompositionHost.Initialize(CompositionContainer)
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(CompositionContainer)
  type: Method
  source:
    id: Initialize
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel.Composition.Hosting\WORKINPROGRESS\CompositionHost.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public static void Initialize(CompositionContainer container)
    parameters:
    - id: container
      type: CompositionContainer
    content.vb: Public Shared Sub Initialize(container As CompositionContainer)
  overload: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(ComposablePartCatalog[])
  commentId: M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(ComposablePartCatalog[])
  id: Initialize(ComposablePartCatalog[])
  parent: System.ComponentModel.Composition.Hosting.CompositionHost
  langs:
  - csharp
  - vb
  name: Initialize(ComposablePartCatalog[])
  nameWithType: CompositionHost.Initialize(ComposablePartCatalog[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(ComposablePartCatalog[])
  type: Method
  source:
    id: Initialize
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel.Composition.Hosting\WORKINPROGRESS\CompositionHost.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public static CompositionContainer Initialize(params ComposablePartCatalog[] catalogs)
    parameters:
    - id: catalogs
      type: ComposablePartCatalog[]
    return:
      type: CompositionContainer
    content.vb: Public Shared Function Initialize(ParamArray catalogs As ComposablePartCatalog()) As CompositionContainer
  overload: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize*
  nameWithType.vb: CompositionHost.Initialize(ComposablePartCatalog())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(ComposablePartCatalog())
  name.vb: Initialize(ComposablePartCatalog())
references:
- uid: System.ComponentModel.Composition.Hosting
  commentId: N:System.ComponentModel.Composition.Hosting
  name: System.ComponentModel.Composition.Hosting
  nameWithType: System.ComponentModel.Composition.Hosting
  fullName: System.ComponentModel.Composition.Hosting
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize*
  commentId: Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize
  name: Initialize
  nameWithType: CompositionHost.Initialize
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize
- uid: CompositionContainer
  isExternal: true
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: CompositionContainer
- uid: ComposablePartCatalog[]
  isExternal: true
  name: ComposablePartCatalog[]
  nameWithType: ComposablePartCatalog[]
  fullName: ComposablePartCatalog[]
  nameWithType.vb: ComposablePartCatalog()
  fullName.vb: ComposablePartCatalog()
  name.vb: ComposablePartCatalog()
  spec.csharp:
  - uid: ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: ComposablePartCatalog
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: ComposablePartCatalog
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
