### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CurrentChangingEventArgs
  commentId: T:System.ComponentModel.CurrentChangingEventArgs
  id: CurrentChangingEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.CurrentChangingEventArgs.#ctor
  - System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)
  - System.ComponentModel.CurrentChangingEventArgs.Cancel
  - System.ComponentModel.CurrentChangingEventArgs.IsCancelable
  langs:
  - csharp
  - vb
  name: CurrentChangingEventArgs
  nameWithType: CurrentChangingEventArgs
  fullName: System.ComponentModel.CurrentChangingEventArgs
  type: Class
  source:
    id: CurrentChangingEventArgs
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel\CurrentChangingEventArgs.cs
    startLine: 27
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nArguments for the CurrentChanging event.\nA collection that supports ICollectionView raises this event\nwhenever the CurrentItem is changing, or when the contents\nof the collection has been reset.\nBy default, the event is cancelable when CurrentChange is \ncaused by a move current operation and uncancelable when \ncaused by an irreversable collection change operation.\n"
  example: []
  syntax:
    content: 'public class CurrentChangingEventArgs : EventArgs'
    content.vb: >-
      Public Class CurrentChangingEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor
  commentId: M:System.ComponentModel.CurrentChangingEventArgs.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CurrentChangingEventArgs
  langs:
  - csharp
  - vb
  name: CurrentChangingEventArgs()
  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs()
  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel\CurrentChangingEventArgs.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nConstruct a cancelable CurrentChangingEventArgs that is used\nto notify listeners when CurrentItem is about to change.\n"
  example: []
  syntax:
    content: public CurrentChangingEventArgs()
    content.vb: Public Sub New
  overload: System.ComponentModel.CurrentChangingEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.CurrentChangingEventArgs
  langs:
  - csharp
  - vb
  name: CurrentChangingEventArgs(Boolean)
  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)
  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs(System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel\CurrentChangingEventArgs.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nConstruct a CurrentChangingEventArgs that is used to notify listeners when CurrentItem is about to change.\n"
  example: []
  syntax:
    content: public CurrentChangingEventArgs(bool isCancelable)
    parameters:
    - id: isCancelable
      type: System.Boolean
      description: if false, setting Cancel to true will cause an InvalidOperationException to be thrown.
    content.vb: Public Sub New(isCancelable As Boolean)
  overload: System.ComponentModel.CurrentChangingEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable
  commentId: P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable
  id: IsCancelable
  parent: System.ComponentModel.CurrentChangingEventArgs
  langs:
  - csharp
  - vb
  name: IsCancelable
  nameWithType: CurrentChangingEventArgs.IsCancelable
  fullName: System.ComponentModel.CurrentChangingEventArgs.IsCancelable
  type: Property
  source:
    id: IsCancelable
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel\CurrentChangingEventArgs.cs
    startLine: 67
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nIf this event can be canceled.  When this is False, setting Cancel to True will cause an InvalidOperationException to be thrown.\n"
  example: []
  syntax:
    content: public bool IsCancelable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCancelable As Boolean
  overload: System.ComponentModel.CurrentChangingEventArgs.IsCancelable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel
  commentId: P:System.ComponentModel.CurrentChangingEventArgs.Cancel
  id: Cancel
  parent: System.ComponentModel.CurrentChangingEventArgs
  langs:
  - csharp
  - vb
  name: Cancel
  nameWithType: CurrentChangingEventArgs.Cancel
  fullName: System.ComponentModel.CurrentChangingEventArgs.Cancel
  type: Property
  source:
    id: Cancel
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ComponentModel\CurrentChangingEventArgs.cs
    startLine: 78
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nWhen set to true, this event will be canceled.\n"
  remarks: "\nIf IsCancelable is False, setting this value to True will cause an InvalidOperationException to be thrown.\n"
  example: []
  syntax:
    content: public bool Cancel { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Cancel As Boolean
  overload: System.ComponentModel.CurrentChangingEventArgs.Cancel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor*
  commentId: Overload:System.ComponentModel.CurrentChangingEventArgs.#ctor
  name: CurrentChangingEventArgs
  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs
  fullName: System.ComponentModel.CurrentChangingEventArgs.CurrentChangingEventArgs
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable*
  commentId: Overload:System.ComponentModel.CurrentChangingEventArgs.IsCancelable
  name: IsCancelable
  nameWithType: CurrentChangingEventArgs.IsCancelable
  fullName: System.ComponentModel.CurrentChangingEventArgs.IsCancelable
- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel*
  commentId: Overload:System.ComponentModel.CurrentChangingEventArgs.Cancel
  name: Cancel
  nameWithType: CurrentChangingEventArgs.Cancel
  fullName: System.ComponentModel.CurrentChangingEventArgs.Cancel
