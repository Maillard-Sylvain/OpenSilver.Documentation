### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.AssemblyBuilder
  commentId: T:System.Reflection.Emit.AssemblyBuilder
  id: AssemblyBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
  type: Class
  source:
    id: AssemblyBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\AssemblyBuilder.cs
    startLine: 7
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class AssemblyBuilder : Assembly'
    content.vb: >-
      Public NotInheritable Class AssemblyBuilder
          Inherits Assembly
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  id: DefineDynamicModule(System.String)
  parent: System.Reflection.Emit.AssemblyBuilder
  langs:
  - csharp
  - vb
  name: DefineDynamicModule(String)
  nameWithType: AssemblyBuilder.DefineDynamicModule(String)
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  type: Method
  source:
    id: DefineDynamicModule
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\AssemblyBuilder.cs
    startLine: 10
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public ModuleBuilder DefineDynamicModule(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Reflection.Emit.ModuleBuilder
    content.vb: Public Function DefineDynamicModule(name As String) As ModuleBuilder
  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)
  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)
  id: DefineDynamicModule(System.String,System.Boolean)
  parent: System.Reflection.Emit.AssemblyBuilder
  langs:
  - csharp
  - vb
  name: DefineDynamicModule(String, Boolean)
  nameWithType: AssemblyBuilder.DefineDynamicModule(String, Boolean)
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String, System.Boolean)
  type: Method
  source:
    id: DefineDynamicModule
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\AssemblyBuilder.cs
    startLine: 16
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo)
    parameters:
    - id: name
      type: System.String
    - id: emitSymbolInfo
      type: System.Boolean
    return:
      type: System.Reflection.Emit.ModuleBuilder
    content.vb: Public Function DefineDynamicModule(name As String, emitSymbolInfo As Boolean) As ModuleBuilder
  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*
  commentId: Overload:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule
  name: DefineDynamicModule
  nameWithType: AssemblyBuilder.DefineDynamicModule
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.ModuleBuilder
  commentId: T:System.Reflection.Emit.ModuleBuilder
  parent: System.Reflection.Emit
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
