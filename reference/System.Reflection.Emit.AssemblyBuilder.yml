### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.AssemblyBuilder
  commentId: T:System.Reflection.Emit.AssemblyBuilder
  id: AssemblyBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
  type: Class
  source:
    id: AssemblyBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\AssemblyBuilder.cs
    startLine: 7
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public sealed class AssemblyBuilder : Assembly, _Assembly, IEvidenceFactory, ICustomAttributeProvider, ISerializable
    content.vb: >-
      <NotImplemented>

      Public NotInheritable Class AssemblyBuilder
          Inherits Assembly
          Implements _Assembly, IEvidenceFactory, ICustomAttributeProvider, ISerializable
  inheritance:
  - System.Object
  - System.Reflection.Assembly
  implements:
  - System.Runtime.InteropServices._Assembly
  - System.Security.IEvidenceFactory
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  - System.Reflection.Assembly.GetAssembly(System.Type)
  - System.Reflection.Assembly.Equals(System.Object)
  - System.Reflection.Assembly.GetHashCode
  - System.Reflection.Assembly.LoadFrom(System.String)
  - System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  - System.Reflection.Assembly.Load(System.String)
  - System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  - System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadWithPartialName(System.String)
  - System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.Byte[])
  - System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadFile(System.String)
  - System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.GetExecutingAssembly
  - System.Reflection.Assembly.GetCallingAssembly
  - System.Reflection.Assembly.GetEntryAssembly
  - System.Reflection.Assembly.GetName
  - System.Reflection.Assembly.GetName(System.Boolean)
  - System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  - System.Reflection.Assembly.GetType(System.String)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  - System.Reflection.Assembly.GetExportedTypes
  - System.Reflection.Assembly.GetTypes
  - System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  - System.Reflection.Assembly.GetManifestResourceStream(System.String)
  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  - System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  - System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Assembly.GetCustomAttributesData
  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  - System.Reflection.Assembly.CreateInstance(System.String)
  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Reflection.Assembly.GetLoadedModules
  - System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  - System.Reflection.Assembly.GetModules
  - System.Reflection.Assembly.GetModules(System.Boolean)
  - System.Reflection.Assembly.GetModule(System.String)
  - System.Reflection.Assembly.GetFile(System.String)
  - System.Reflection.Assembly.GetFiles
  - System.Reflection.Assembly.GetFiles(System.Boolean)
  - System.Reflection.Assembly.GetManifestResourceNames
  - System.Reflection.Assembly.GetReferencedAssemblies
  - System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  - System.Reflection.Assembly.ToString
  - System.Reflection.Assembly.CodeBase
  - System.Reflection.Assembly.EscapedCodeBase
  - System.Reflection.Assembly.FullName
  - System.Reflection.Assembly.EntryPoint
  - System.Reflection.Assembly.ExportedTypes
  - System.Reflection.Assembly.DefinedTypes
  - System.Reflection.Assembly.Evidence
  - System.Reflection.Assembly.PermissionSet
  - System.Reflection.Assembly.IsFullyTrusted
  - System.Reflection.Assembly.SecurityRuleSet
  - System.Reflection.Assembly.ManifestModule
  - System.Reflection.Assembly.CustomAttributes
  - System.Reflection.Assembly.ReflectionOnly
  - System.Reflection.Assembly.Modules
  - System.Reflection.Assembly.Location
  - System.Reflection.Assembly.ImageRuntimeVersion
  - System.Reflection.Assembly.GlobalAssemblyCache
  - System.Reflection.Assembly.HostContext
  - System.Reflection.Assembly.IsDynamic
  - System.Reflection.Assembly.ModuleResolve
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  id: DefineDynamicModule(System.String)
  parent: System.Reflection.Emit.AssemblyBuilder
  langs:
  - csharp
  - vb
  name: DefineDynamicModule(String)
  nameWithType: AssemblyBuilder.DefineDynamicModule(String)
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)
  type: Method
  source:
    id: DefineDynamicModule
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\AssemblyBuilder.cs
    startLine: 10
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public ModuleBuilder DefineDynamicModule(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Reflection.Emit.ModuleBuilder
    content.vb: >-
      <NotImplemented>

      Public Function DefineDynamicModule(name As String) As ModuleBuilder
  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)
  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)
  id: DefineDynamicModule(System.String,System.Boolean)
  parent: System.Reflection.Emit.AssemblyBuilder
  langs:
  - csharp
  - vb
  name: DefineDynamicModule(String, Boolean)
  nameWithType: AssemblyBuilder.DefineDynamicModule(String, Boolean)
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String, System.Boolean)
  type: Method
  source:
    id: DefineDynamicModule
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\AssemblyBuilder.cs
    startLine: 16
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo)
    parameters:
    - id: name
      type: System.String
    - id: emitSymbolInfo
      type: System.Boolean
    return:
      type: System.Reflection.Emit.ModuleBuilder
    content.vb: >-
      <NotImplemented>

      Public Function DefineDynamicModule(name As String, emitSymbolInfo As Boolean) As ModuleBuilder
  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Assembly
  commentId: T:System.Runtime.InteropServices._Assembly
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Assembly
  nameWithType: _Assembly
  fullName: System.Runtime.InteropServices._Assembly
- uid: System.Security.IEvidenceFactory
  commentId: T:System.Security.IEvidenceFactory
  parent: System.Security
  isExternal: true
  name: IEvidenceFactory
  nameWithType: IEvidenceFactory
  fullName: System.Security.IEvidenceFactory
- uid: System.Reflection.ICustomAttributeProvider
  commentId: T:System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: true
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  commentId: M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateQualifiedName(String, String)
  nameWithType: Assembly.CreateQualifiedName(String, String)
  fullName: System.Reflection.Assembly.CreateQualifiedName(System.String, System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
    name: CreateQualifiedName
    nameWithType: Assembly.CreateQualifiedName
    fullName: System.Reflection.Assembly.CreateQualifiedName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
    name: CreateQualifiedName
    nameWithType: Assembly.CreateQualifiedName
    fullName: System.Reflection.Assembly.CreateQualifiedName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetAssembly(System.Type)
  commentId: M:System.Reflection.Assembly.GetAssembly(System.Type)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetAssembly(Type)
  nameWithType: Assembly.GetAssembly(Type)
  fullName: System.Reflection.Assembly.GetAssembly(System.Type)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetAssembly(System.Type)
    name: GetAssembly
    nameWithType: Assembly.GetAssembly
    fullName: System.Reflection.Assembly.GetAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetAssembly(System.Type)
    name: GetAssembly
    nameWithType: Assembly.GetAssembly
    fullName: System.Reflection.Assembly.GetAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Equals(System.Object)
  commentId: M:System.Reflection.Assembly.Equals(System.Object)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Equals(Object)
  nameWithType: Assembly.Equals(Object)
  fullName: System.Reflection.Assembly.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.Assembly.Equals(System.Object)
    name: Equals
    nameWithType: Assembly.Equals
    fullName: System.Reflection.Assembly.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Equals(System.Object)
    name: Equals
    nameWithType: Assembly.Equals
    fullName: System.Reflection.Assembly.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetHashCode
  commentId: M:System.Reflection.Assembly.GetHashCode
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetHashCode()
  nameWithType: Assembly.GetHashCode()
  fullName: System.Reflection.Assembly.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetHashCode
    name: GetHashCode
    nameWithType: Assembly.GetHashCode
    fullName: System.Reflection.Assembly.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetHashCode
    name: GetHashCode
    nameWithType: Assembly.GetHashCode
    fullName: System.Reflection.Assembly.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String)
  commentId: M:System.Reflection.Assembly.LoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String)
  nameWithType: Assembly.LoadFrom(String)
  fullName: System.Reflection.Assembly.LoadFrom(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  commentId: M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnlyLoadFrom(String)
  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
    name: ReflectionOnlyLoadFrom
    nameWithType: Assembly.ReflectionOnlyLoadFrom
    fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
    name: ReflectionOnlyLoadFrom
    nameWithType: Assembly.ReflectionOnlyLoadFrom
    fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  commentId: M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String, Evidence)
  nameWithType: Assembly.LoadFrom(String, Evidence)
  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  commentId: M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)
  nameWithType: Assembly.LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)
  nameWithType.vb: Assembly.LoadFrom(String, Evidence, Byte(), AssemblyHashAlgorithm)
  fullName.vb: System.Reflection.Assembly.LoadFrom(System.String, System.Security.Policy.Evidence, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)
  name.vb: LoadFrom(String, Evidence, Byte(), AssemblyHashAlgorithm)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    nameWithType: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    nameWithType: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  commentId: M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFrom(String, Byte[], AssemblyHashAlgorithm)
  nameWithType: Assembly.LoadFrom(String, Byte[], AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(System.String, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)
  nameWithType.vb: Assembly.LoadFrom(String, Byte(), AssemblyHashAlgorithm)
  fullName.vb: System.Reflection.Assembly.LoadFrom(System.String, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)
  name.vb: LoadFrom(String, Byte(), AssemblyHashAlgorithm)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    nameWithType: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
    name: LoadFrom
    nameWithType: Assembly.LoadFrom
    fullName: System.Reflection.Assembly.LoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
    name: AssemblyHashAlgorithm
    nameWithType: AssemblyHashAlgorithm
    fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  commentId: M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: UnsafeLoadFrom(String)
  nameWithType: Assembly.UnsafeLoadFrom(String)
  fullName: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
    name: UnsafeLoadFrom
    nameWithType: Assembly.UnsafeLoadFrom
    fullName: System.Reflection.Assembly.UnsafeLoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
    name: UnsafeLoadFrom
    nameWithType: Assembly.UnsafeLoadFrom
    fullName: System.Reflection.Assembly.UnsafeLoadFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.String)
  commentId: M:System.Reflection.Assembly.Load(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(String)
  nameWithType: Assembly.Load(String)
  fullName: System.Reflection.Assembly.Load(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.String)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.String)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  commentId: M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnlyLoad(String)
  nameWithType: Assembly.ReflectionOnlyLoad(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
    name: ReflectionOnlyLoad
    nameWithType: Assembly.ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
    name: ReflectionOnlyLoad
    nameWithType: Assembly.ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  commentId: M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(String, Evidence)
  nameWithType: Assembly.Load(String, Evidence)
  fullName: System.Reflection.Assembly.Load(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  commentId: M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(AssemblyName)
  nameWithType: Assembly.Load(AssemblyName)
  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  commentId: M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(AssemblyName, Evidence)
  nameWithType: Assembly.Load(AssemblyName, Evidence)
  fullName: System.Reflection.Assembly.Load(System.Reflection.AssemblyName, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: System.Reflection.AssemblyName
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
  commentId: M:System.Reflection.Assembly.LoadWithPartialName(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadWithPartialName(String)
  nameWithType: Assembly.LoadWithPartialName(String)
  fullName: System.Reflection.Assembly.LoadWithPartialName(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
    name: LoadWithPartialName
    nameWithType: Assembly.LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
    name: LoadWithPartialName
    nameWithType: Assembly.LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  commentId: M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadWithPartialName(String, Evidence)
  nameWithType: Assembly.LoadWithPartialName(String, Evidence)
  fullName: System.Reflection.Assembly.LoadWithPartialName(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
    name: LoadWithPartialName
    nameWithType: Assembly.LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
    name: LoadWithPartialName
    nameWithType: Assembly.LoadWithPartialName
    fullName: System.Reflection.Assembly.LoadWithPartialName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[])
  commentId: M:System.Reflection.Assembly.Load(System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[])
  nameWithType: Assembly.Load(Byte[])
  fullName: System.Reflection.Assembly.Load(System.Byte[])
  nameWithType.vb: Assembly.Load(Byte())
  fullName.vb: System.Reflection.Assembly.Load(System.Byte())
  name.vb: Load(Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[])
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[])
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  commentId: M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnlyLoad(Byte[])
  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  nameWithType.vb: Assembly.ReflectionOnlyLoad(Byte())
  fullName.vb: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte())
  name.vb: ReflectionOnlyLoad(Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
    name: ReflectionOnlyLoad
    nameWithType: Assembly.ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
    name: ReflectionOnlyLoad
    nameWithType: Assembly.ReflectionOnlyLoad
    fullName: System.Reflection.Assembly.ReflectionOnlyLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  commentId: M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[], Byte[])
  nameWithType: Assembly.Load(Byte[], Byte[])
  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[])
  nameWithType.vb: Assembly.Load(Byte(), Byte())
  fullName.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte())
  name.vb: Load(Byte(), Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  commentId: M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[], Byte[], SecurityContextSource)
  nameWithType: Assembly.Load(Byte[], Byte[], SecurityContextSource)
  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[], System.Security.SecurityContextSource)
  nameWithType.vb: Assembly.Load(Byte(), Byte(), SecurityContextSource)
  fullName.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte(), System.Security.SecurityContextSource)
  name.vb: Load(Byte(), Byte(), SecurityContextSource)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecurityContextSource
    name: SecurityContextSource
    nameWithType: SecurityContextSource
    fullName: System.Security.SecurityContextSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.SecurityContextSource
    name: SecurityContextSource
    nameWithType: SecurityContextSource
    fullName: System.Security.SecurityContextSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  commentId: M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: Load(Byte[], Byte[], Evidence)
  nameWithType: Assembly.Load(Byte[], Byte[], Evidence)
  fullName: System.Reflection.Assembly.Load(System.Byte[], System.Byte[], System.Security.Policy.Evidence)
  nameWithType.vb: Assembly.Load(Byte(), Byte(), Evidence)
  fullName.vb: System.Reflection.Assembly.Load(System.Byte(), System.Byte(), System.Security.Policy.Evidence)
  name.vb: Load(Byte(), Byte(), Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
    name: Load
    nameWithType: Assembly.Load
    fullName: System.Reflection.Assembly.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFile(System.String)
  commentId: M:System.Reflection.Assembly.LoadFile(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFile(String)
  nameWithType: Assembly.LoadFile(String)
  fullName: System.Reflection.Assembly.LoadFile(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFile(System.String)
    name: LoadFile
    nameWithType: Assembly.LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFile(System.String)
    name: LoadFile
    nameWithType: Assembly.LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  commentId: M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadFile(String, Evidence)
  nameWithType: Assembly.LoadFile(String, Evidence)
  fullName: System.Reflection.Assembly.LoadFile(System.String, System.Security.Policy.Evidence)
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
    name: LoadFile
    nameWithType: Assembly.LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
    name: LoadFile
    nameWithType: Assembly.LoadFile
    fullName: System.Reflection.Assembly.LoadFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: System.Security.Policy.Evidence
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetExecutingAssembly
  commentId: M:System.Reflection.Assembly.GetExecutingAssembly
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetExecutingAssembly()
  nameWithType: Assembly.GetExecutingAssembly()
  fullName: System.Reflection.Assembly.GetExecutingAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetExecutingAssembly
    name: GetExecutingAssembly
    nameWithType: Assembly.GetExecutingAssembly
    fullName: System.Reflection.Assembly.GetExecutingAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetExecutingAssembly
    name: GetExecutingAssembly
    nameWithType: Assembly.GetExecutingAssembly
    fullName: System.Reflection.Assembly.GetExecutingAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetCallingAssembly
  commentId: M:System.Reflection.Assembly.GetCallingAssembly
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCallingAssembly()
  nameWithType: Assembly.GetCallingAssembly()
  fullName: System.Reflection.Assembly.GetCallingAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCallingAssembly
    name: GetCallingAssembly
    nameWithType: Assembly.GetCallingAssembly
    fullName: System.Reflection.Assembly.GetCallingAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCallingAssembly
    name: GetCallingAssembly
    nameWithType: Assembly.GetCallingAssembly
    fullName: System.Reflection.Assembly.GetCallingAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetEntryAssembly
  commentId: M:System.Reflection.Assembly.GetEntryAssembly
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetEntryAssembly()
  nameWithType: Assembly.GetEntryAssembly()
  fullName: System.Reflection.Assembly.GetEntryAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetEntryAssembly
    name: GetEntryAssembly
    nameWithType: Assembly.GetEntryAssembly
    fullName: System.Reflection.Assembly.GetEntryAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetEntryAssembly
    name: GetEntryAssembly
    nameWithType: Assembly.GetEntryAssembly
    fullName: System.Reflection.Assembly.GetEntryAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetName
  commentId: M:System.Reflection.Assembly.GetName
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetName()
  nameWithType: Assembly.GetName()
  fullName: System.Reflection.Assembly.GetName()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetName
    name: GetName
    nameWithType: Assembly.GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetName
    name: GetName
    nameWithType: Assembly.GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetName(System.Boolean)
  commentId: M:System.Reflection.Assembly.GetName(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetName(Boolean)
  nameWithType: Assembly.GetName(Boolean)
  fullName: System.Reflection.Assembly.GetName(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetName(System.Boolean)
    name: GetName
    nameWithType: Assembly.GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetName(System.Boolean)
    name: GetName
    nameWithType: Assembly.GetName
    fullName: System.Reflection.Assembly.GetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  commentId: M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  parent: System.Reflection.Assembly
  isExternal: true
  name: _Assembly.GetType()
  nameWithType: Assembly._Assembly.GetType()
  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()
  nameWithType.vb: Assembly.System.Runtime.InteropServices._Assembly.GetType()
  name.vb: System.Runtime.InteropServices._Assembly.GetType()
  spec.csharp:
  - uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
    name: _Assembly.GetType
    nameWithType: Assembly._Assembly.GetType
    fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
    name: System.Runtime.InteropServices._Assembly.GetType
    nameWithType: Assembly.System.Runtime.InteropServices._Assembly.GetType
    fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetType(System.String)
  commentId: M:System.Reflection.Assembly.GetType(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetType(String)
  nameWithType: Assembly.GetType(String)
  fullName: System.Reflection.Assembly.GetType(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetType(System.String)
    name: GetType
    nameWithType: Assembly.GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetType(System.String)
    name: GetType
    nameWithType: Assembly.GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
  commentId: M:System.Reflection.Assembly.GetType(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetType(String, Boolean)
  nameWithType: Assembly.GetType(String, Boolean)
  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
    name: GetType
    nameWithType: Assembly.GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
    name: GetType
    nameWithType: Assembly.GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  commentId: M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetType(String, Boolean, Boolean)
  nameWithType: Assembly.GetType(String, Boolean, Boolean)
  fullName: System.Reflection.Assembly.GetType(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    nameWithType: Assembly.GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
    name: GetType
    nameWithType: Assembly.GetType
    fullName: System.Reflection.Assembly.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetExportedTypes
  commentId: M:System.Reflection.Assembly.GetExportedTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetExportedTypes()
  nameWithType: Assembly.GetExportedTypes()
  fullName: System.Reflection.Assembly.GetExportedTypes()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetExportedTypes
    name: GetExportedTypes
    nameWithType: Assembly.GetExportedTypes
    fullName: System.Reflection.Assembly.GetExportedTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetExportedTypes
    name: GetExportedTypes
    nameWithType: Assembly.GetExportedTypes
    fullName: System.Reflection.Assembly.GetExportedTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetTypes
  commentId: M:System.Reflection.Assembly.GetTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetTypes()
  nameWithType: Assembly.GetTypes()
  fullName: System.Reflection.Assembly.GetTypes()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetTypes
    name: GetTypes
    nameWithType: Assembly.GetTypes
    fullName: System.Reflection.Assembly.GetTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetTypes
    name: GetTypes
    nameWithType: Assembly.GetTypes
    fullName: System.Reflection.Assembly.GetTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  commentId: M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceStream(Type, String)
  nameWithType: Assembly.GetManifestResourceStream(Type, String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.Type, System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
    name: GetManifestResourceStream
    nameWithType: Assembly.GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
    name: GetManifestResourceStream
    nameWithType: Assembly.GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  commentId: M:System.Reflection.Assembly.GetManifestResourceStream(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceStream(String)
  nameWithType: Assembly.GetManifestResourceStream(String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
    name: GetManifestResourceStream
    nameWithType: Assembly.GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
    name: GetManifestResourceStream
    nameWithType: Assembly.GetManifestResourceStream
    fullName: System.Reflection.Assembly.GetManifestResourceStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  commentId: M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetSatelliteAssembly(CultureInfo)
  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
    name: GetSatelliteAssembly
    nameWithType: Assembly.GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
    name: GetSatelliteAssembly
    nameWithType: Assembly.GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  commentId: M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetSatelliteAssembly(CultureInfo, Version)
  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo, Version)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo, System.Version)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
    name: GetSatelliteAssembly
    nameWithType: Assembly.GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
    name: GetSatelliteAssembly
    nameWithType: Assembly.GetSatelliteAssembly
    fullName: System.Reflection.Assembly.GetSatelliteAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: System.Version
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Assembly.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Assembly.GetObjectData
    fullName: System.Reflection.Assembly.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Assembly.GetObjectData
    fullName: System.Reflection.Assembly.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCustomAttributes(Boolean)
  nameWithType: Assembly.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    nameWithType: Assembly.GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    nameWithType: Assembly.GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: Assembly.GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    nameWithType: Assembly.GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    nameWithType: Assembly.GetCustomAttributes
    fullName: System.Reflection.Assembly.GetCustomAttributes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: IsDefined(Type, Boolean)
  nameWithType: Assembly.IsDefined(Type, Boolean)
  fullName: System.Reflection.Assembly.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    nameWithType: Assembly.IsDefined
    fullName: System.Reflection.Assembly.IsDefined
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    nameWithType: Assembly.IsDefined
    fullName: System.Reflection.Assembly.IsDefined
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetCustomAttributesData
  commentId: M:System.Reflection.Assembly.GetCustomAttributesData
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetCustomAttributesData()
  nameWithType: Assembly.GetCustomAttributesData()
  fullName: System.Reflection.Assembly.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetCustomAttributesData
    name: GetCustomAttributesData
    nameWithType: Assembly.GetCustomAttributesData
    fullName: System.Reflection.Assembly.GetCustomAttributesData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetCustomAttributesData
    name: GetCustomAttributesData
    nameWithType: Assembly.GetCustomAttributesData
    fullName: System.Reflection.Assembly.GetCustomAttributesData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  commentId: M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadModule(String, Byte[])
  nameWithType: Assembly.LoadModule(String, Byte[])
  fullName: System.Reflection.Assembly.LoadModule(System.String, System.Byte[])
  nameWithType.vb: Assembly.LoadModule(String, Byte())
  fullName.vb: System.Reflection.Assembly.LoadModule(System.String, System.Byte())
  name.vb: LoadModule(String, Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
    name: LoadModule
    nameWithType: Assembly.LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
    name: LoadModule
    nameWithType: Assembly.LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  commentId: M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: LoadModule(String, Byte[], Byte[])
  nameWithType: Assembly.LoadModule(String, Byte[], Byte[])
  fullName: System.Reflection.Assembly.LoadModule(System.String, System.Byte[], System.Byte[])
  nameWithType.vb: Assembly.LoadModule(String, Byte(), Byte())
  fullName.vb: System.Reflection.Assembly.LoadModule(System.String, System.Byte(), System.Byte())
  name.vb: LoadModule(String, Byte(), Byte())
  spec.csharp:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
    name: LoadModule
    nameWithType: Assembly.LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
    name: LoadModule
    nameWithType: Assembly.LoadModule
    fullName: System.Reflection.Assembly.LoadModule
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.CreateInstance(System.String)
  commentId: M:System.Reflection.Assembly.CreateInstance(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateInstance(String)
  nameWithType: Assembly.CreateInstance(String)
  fullName: System.Reflection.Assembly.CreateInstance(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateInstance(System.String)
    name: CreateInstance
    nameWithType: Assembly.CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateInstance(System.String)
    name: CreateInstance
    nameWithType: Assembly.CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  commentId: M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateInstance(String, Boolean)
  nameWithType: Assembly.CreateInstance(String, Boolean)
  fullName: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
    name: CreateInstance
    nameWithType: Assembly.CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
    name: CreateInstance
    nameWithType: Assembly.CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  commentId: M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Reflection.Assembly
  isExternal: true
  name: CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  nameWithType: Assembly.CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  fullName: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  nameWithType.vb: Assembly.CreateInstance(String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName.vb: System.Reflection.Assembly.CreateInstance(System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  name.vb: CreateInstance(String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  spec.csharp:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
    name: CreateInstance
    nameWithType: Assembly.CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    nameWithType: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
    name: CreateInstance
    nameWithType: Assembly.CreateInstance
    fullName: System.Reflection.Assembly.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    nameWithType: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetLoadedModules
  commentId: M:System.Reflection.Assembly.GetLoadedModules
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetLoadedModules()
  nameWithType: Assembly.GetLoadedModules()
  fullName: System.Reflection.Assembly.GetLoadedModules()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetLoadedModules
    name: GetLoadedModules
    nameWithType: Assembly.GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetLoadedModules
    name: GetLoadedModules
    nameWithType: Assembly.GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  commentId: M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetLoadedModules(Boolean)
  nameWithType: Assembly.GetLoadedModules(Boolean)
  fullName: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
    name: GetLoadedModules
    nameWithType: Assembly.GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
    name: GetLoadedModules
    nameWithType: Assembly.GetLoadedModules
    fullName: System.Reflection.Assembly.GetLoadedModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetModules
  commentId: M:System.Reflection.Assembly.GetModules
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetModules()
  nameWithType: Assembly.GetModules()
  fullName: System.Reflection.Assembly.GetModules()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetModules
    name: GetModules
    nameWithType: Assembly.GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetModules
    name: GetModules
    nameWithType: Assembly.GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetModules(System.Boolean)
  commentId: M:System.Reflection.Assembly.GetModules(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetModules(Boolean)
  nameWithType: Assembly.GetModules(Boolean)
  fullName: System.Reflection.Assembly.GetModules(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetModules(System.Boolean)
    name: GetModules
    nameWithType: Assembly.GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetModules(System.Boolean)
    name: GetModules
    nameWithType: Assembly.GetModules
    fullName: System.Reflection.Assembly.GetModules
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetModule(System.String)
  commentId: M:System.Reflection.Assembly.GetModule(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetModule(String)
  nameWithType: Assembly.GetModule(String)
  fullName: System.Reflection.Assembly.GetModule(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetModule(System.String)
    name: GetModule
    nameWithType: Assembly.GetModule
    fullName: System.Reflection.Assembly.GetModule
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetModule(System.String)
    name: GetModule
    nameWithType: Assembly.GetModule
    fullName: System.Reflection.Assembly.GetModule
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetFile(System.String)
  commentId: M:System.Reflection.Assembly.GetFile(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetFile(String)
  nameWithType: Assembly.GetFile(String)
  fullName: System.Reflection.Assembly.GetFile(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetFile(System.String)
    name: GetFile
    nameWithType: Assembly.GetFile
    fullName: System.Reflection.Assembly.GetFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetFile(System.String)
    name: GetFile
    nameWithType: Assembly.GetFile
    fullName: System.Reflection.Assembly.GetFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetFiles
  commentId: M:System.Reflection.Assembly.GetFiles
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetFiles()
  nameWithType: Assembly.GetFiles()
  fullName: System.Reflection.Assembly.GetFiles()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetFiles
    name: GetFiles
    nameWithType: Assembly.GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetFiles
    name: GetFiles
    nameWithType: Assembly.GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetFiles(System.Boolean)
  commentId: M:System.Reflection.Assembly.GetFiles(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetFiles(Boolean)
  nameWithType: Assembly.GetFiles(Boolean)
  fullName: System.Reflection.Assembly.GetFiles(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetFiles(System.Boolean)
    name: GetFiles
    nameWithType: Assembly.GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetFiles(System.Boolean)
    name: GetFiles
    nameWithType: Assembly.GetFiles
    fullName: System.Reflection.Assembly.GetFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetManifestResourceNames
  commentId: M:System.Reflection.Assembly.GetManifestResourceNames
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceNames()
  nameWithType: Assembly.GetManifestResourceNames()
  fullName: System.Reflection.Assembly.GetManifestResourceNames()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceNames
    name: GetManifestResourceNames
    nameWithType: Assembly.GetManifestResourceNames
    fullName: System.Reflection.Assembly.GetManifestResourceNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceNames
    name: GetManifestResourceNames
    nameWithType: Assembly.GetManifestResourceNames
    fullName: System.Reflection.Assembly.GetManifestResourceNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetReferencedAssemblies
  commentId: M:System.Reflection.Assembly.GetReferencedAssemblies
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetReferencedAssemblies()
  nameWithType: Assembly.GetReferencedAssemblies()
  fullName: System.Reflection.Assembly.GetReferencedAssemblies()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetReferencedAssemblies
    name: GetReferencedAssemblies
    nameWithType: Assembly.GetReferencedAssemblies
    fullName: System.Reflection.Assembly.GetReferencedAssemblies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetReferencedAssemblies
    name: GetReferencedAssemblies
    nameWithType: Assembly.GetReferencedAssemblies
    fullName: System.Reflection.Assembly.GetReferencedAssemblies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  commentId: M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  parent: System.Reflection.Assembly
  isExternal: true
  name: GetManifestResourceInfo(String)
  nameWithType: Assembly.GetManifestResourceInfo(String)
  fullName: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  spec.csharp:
  - uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
    name: GetManifestResourceInfo
    nameWithType: Assembly.GetManifestResourceInfo
    fullName: System.Reflection.Assembly.GetManifestResourceInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
    name: GetManifestResourceInfo
    nameWithType: Assembly.GetManifestResourceInfo
    fullName: System.Reflection.Assembly.GetManifestResourceInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.ToString
  commentId: M:System.Reflection.Assembly.ToString
  parent: System.Reflection.Assembly
  isExternal: true
  name: ToString()
  nameWithType: Assembly.ToString()
  fullName: System.Reflection.Assembly.ToString()
  spec.csharp:
  - uid: System.Reflection.Assembly.ToString
    name: ToString
    nameWithType: Assembly.ToString
    fullName: System.Reflection.Assembly.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.Assembly.ToString
    name: ToString
    nameWithType: Assembly.ToString
    fullName: System.Reflection.Assembly.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Assembly.CodeBase
  commentId: P:System.Reflection.Assembly.CodeBase
  parent: System.Reflection.Assembly
  isExternal: true
  name: CodeBase
  nameWithType: Assembly.CodeBase
  fullName: System.Reflection.Assembly.CodeBase
- uid: System.Reflection.Assembly.EscapedCodeBase
  commentId: P:System.Reflection.Assembly.EscapedCodeBase
  parent: System.Reflection.Assembly
  isExternal: true
  name: EscapedCodeBase
  nameWithType: Assembly.EscapedCodeBase
  fullName: System.Reflection.Assembly.EscapedCodeBase
- uid: System.Reflection.Assembly.FullName
  commentId: P:System.Reflection.Assembly.FullName
  parent: System.Reflection.Assembly
  isExternal: true
  name: FullName
  nameWithType: Assembly.FullName
  fullName: System.Reflection.Assembly.FullName
- uid: System.Reflection.Assembly.EntryPoint
  commentId: P:System.Reflection.Assembly.EntryPoint
  parent: System.Reflection.Assembly
  isExternal: true
  name: EntryPoint
  nameWithType: Assembly.EntryPoint
  fullName: System.Reflection.Assembly.EntryPoint
- uid: System.Reflection.Assembly.ExportedTypes
  commentId: P:System.Reflection.Assembly.ExportedTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: ExportedTypes
  nameWithType: Assembly.ExportedTypes
  fullName: System.Reflection.Assembly.ExportedTypes
- uid: System.Reflection.Assembly.DefinedTypes
  commentId: P:System.Reflection.Assembly.DefinedTypes
  parent: System.Reflection.Assembly
  isExternal: true
  name: DefinedTypes
  nameWithType: Assembly.DefinedTypes
  fullName: System.Reflection.Assembly.DefinedTypes
- uid: System.Reflection.Assembly.Evidence
  commentId: P:System.Reflection.Assembly.Evidence
  parent: System.Reflection.Assembly
  isExternal: true
  name: Evidence
  nameWithType: Assembly.Evidence
  fullName: System.Reflection.Assembly.Evidence
- uid: System.Reflection.Assembly.PermissionSet
  commentId: P:System.Reflection.Assembly.PermissionSet
  parent: System.Reflection.Assembly
  isExternal: true
  name: PermissionSet
  nameWithType: Assembly.PermissionSet
  fullName: System.Reflection.Assembly.PermissionSet
- uid: System.Reflection.Assembly.IsFullyTrusted
  commentId: P:System.Reflection.Assembly.IsFullyTrusted
  parent: System.Reflection.Assembly
  isExternal: true
  name: IsFullyTrusted
  nameWithType: Assembly.IsFullyTrusted
  fullName: System.Reflection.Assembly.IsFullyTrusted
- uid: System.Reflection.Assembly.SecurityRuleSet
  commentId: P:System.Reflection.Assembly.SecurityRuleSet
  parent: System.Reflection.Assembly
  isExternal: true
  name: SecurityRuleSet
  nameWithType: Assembly.SecurityRuleSet
  fullName: System.Reflection.Assembly.SecurityRuleSet
- uid: System.Reflection.Assembly.ManifestModule
  commentId: P:System.Reflection.Assembly.ManifestModule
  parent: System.Reflection.Assembly
  isExternal: true
  name: ManifestModule
  nameWithType: Assembly.ManifestModule
  fullName: System.Reflection.Assembly.ManifestModule
- uid: System.Reflection.Assembly.CustomAttributes
  commentId: P:System.Reflection.Assembly.CustomAttributes
  parent: System.Reflection.Assembly
  isExternal: true
  name: CustomAttributes
  nameWithType: Assembly.CustomAttributes
  fullName: System.Reflection.Assembly.CustomAttributes
- uid: System.Reflection.Assembly.ReflectionOnly
  commentId: P:System.Reflection.Assembly.ReflectionOnly
  parent: System.Reflection.Assembly
  isExternal: true
  name: ReflectionOnly
  nameWithType: Assembly.ReflectionOnly
  fullName: System.Reflection.Assembly.ReflectionOnly
- uid: System.Reflection.Assembly.Modules
  commentId: P:System.Reflection.Assembly.Modules
  parent: System.Reflection.Assembly
  isExternal: true
  name: Modules
  nameWithType: Assembly.Modules
  fullName: System.Reflection.Assembly.Modules
- uid: System.Reflection.Assembly.Location
  commentId: P:System.Reflection.Assembly.Location
  parent: System.Reflection.Assembly
  isExternal: true
  name: Location
  nameWithType: Assembly.Location
  fullName: System.Reflection.Assembly.Location
- uid: System.Reflection.Assembly.ImageRuntimeVersion
  commentId: P:System.Reflection.Assembly.ImageRuntimeVersion
  parent: System.Reflection.Assembly
  isExternal: true
  name: ImageRuntimeVersion
  nameWithType: Assembly.ImageRuntimeVersion
  fullName: System.Reflection.Assembly.ImageRuntimeVersion
- uid: System.Reflection.Assembly.GlobalAssemblyCache
  commentId: P:System.Reflection.Assembly.GlobalAssemblyCache
  parent: System.Reflection.Assembly
  isExternal: true
  name: GlobalAssemblyCache
  nameWithType: Assembly.GlobalAssemblyCache
  fullName: System.Reflection.Assembly.GlobalAssemblyCache
- uid: System.Reflection.Assembly.HostContext
  commentId: P:System.Reflection.Assembly.HostContext
  parent: System.Reflection.Assembly
  isExternal: true
  name: HostContext
  nameWithType: Assembly.HostContext
  fullName: System.Reflection.Assembly.HostContext
- uid: System.Reflection.Assembly.IsDynamic
  commentId: P:System.Reflection.Assembly.IsDynamic
  parent: System.Reflection.Assembly
  isExternal: true
  name: IsDynamic
  nameWithType: Assembly.IsDynamic
  fullName: System.Reflection.Assembly.IsDynamic
- uid: System.Reflection.Assembly.ModuleResolve
  commentId: E:System.Reflection.Assembly.ModuleResolve
  parent: System.Reflection.Assembly
  isExternal: true
  name: ModuleResolve
  nameWithType: Assembly.ModuleResolve
  fullName: System.Reflection.Assembly.ModuleResolve
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: true
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Security
  commentId: N:System.Security
  isExternal: true
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*
  commentId: Overload:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule
  name: DefineDynamicModule
  nameWithType: AssemblyBuilder.DefineDynamicModule
  fullName: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.ModuleBuilder
  commentId: T:System.Reflection.Emit.ModuleBuilder
  parent: System.Reflection.Emit
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
