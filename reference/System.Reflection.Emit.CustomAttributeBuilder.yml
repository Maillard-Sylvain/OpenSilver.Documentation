### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  id: CustomAttributeBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],FieldInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[],FieldInfo[],System.Object[])
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
  type: Class
  source:
    id: CustomAttributeBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\CustomAttributeBuilder.cs
    startLine: 8
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public class CustomAttributeBuilder : object, _CustomAttributeBuilder'
    content.vb: >-
      Public Class CustomAttributeBuilder
          Inherits Object
          Implements _CustomAttributeBuilder
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[])
  id: '#ctor(ConstructorInfo,System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\CustomAttributeBuilder.cs
    startLine: 36
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs)
    parameters:
    - id: con
      type: ConstructorInfo
    - id: constructorArgs
      type: System.Object[]
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object())
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object())
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[])
  id: '#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object[], PropertyInfo[], System.Object[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\CustomAttributeBuilder.cs
    startLine: 74
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, PropertyInfo[] namedProperties, object[] propertyValues)
    parameters:
    - id: con
      type: ConstructorInfo
    - id: constructorArgs
      type: System.Object[]
    - id: namedProperties
      type: PropertyInfo[]
    - id: propertyValues
      type: System.Object[]
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object())
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object(), PropertyInfo(), System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object())
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],FieldInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],FieldInfo[],System.Object[])
  id: '#ctor(ConstructorInfo,System.Object[],FieldInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object[], FieldInfo[], System.Object[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\CustomAttributeBuilder.cs
    startLine: 111
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, FieldInfo[] namedFields, object[] fieldValues)
    parameters:
    - id: con
      type: ConstructorInfo
    - id: constructorArgs
      type: System.Object[]
    - id: namedFields
      type: FieldInfo[]
    - id: fieldValues
      type: System.Object[]
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedFields As FieldInfo(), fieldValues As Object())
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object(), FieldInfo(), Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object(), FieldInfo(), System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), FieldInfo(), Object())
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[],FieldInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[],FieldInfo[],System.Object[])
  id: '#ctor(ConstructorInfo,System.Object[],PropertyInfo[],System.Object[],FieldInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  - vb
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object[], PropertyInfo[], System.Object[], FieldInfo[], System.Object[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\CustomAttributeBuilder.cs
    startLine: 157
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, PropertyInfo[] namedProperties, object[] propertyValues, FieldInfo[] namedFields, object[] fieldValues)
    parameters:
    - id: con
      type: ConstructorInfo
    - id: constructorArgs
      type: System.Object[]
    - id: namedProperties
      type: PropertyInfo[]
    - id: propertyValues
      type: System.Object[]
    - id: namedFields
      type: FieldInfo[]
    - id: fieldValues
      type: System.Object[]
    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object(), namedFields As FieldInfo(), fieldValues As Object())
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object(), FieldInfo(), Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, System.Object(), PropertyInfo(), System.Object(), FieldInfo(), System.Object())
  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object(), FieldInfo(), Object())
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  commentId: Overload:System.Reflection.Emit.CustomAttributeBuilder.#ctor
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder
- uid: ConstructorInfo
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: ConstructorInfo
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PropertyInfo[]
  isExternal: true
  name: PropertyInfo[]
  nameWithType: PropertyInfo[]
  fullName: PropertyInfo[]
  nameWithType.vb: PropertyInfo()
  fullName.vb: PropertyInfo()
  name.vb: PropertyInfo()
  spec.csharp:
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FieldInfo[]
  isExternal: true
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
