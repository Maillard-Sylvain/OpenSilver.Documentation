### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.DynamicMethod
  commentId: T:System.Reflection.Emit.DynamicMethod
  id: DynamicMethod
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,Type,Type[])
  - System.Reflection.Emit.DynamicMethod.Attributes
  - System.Reflection.Emit.DynamicMethod.CallingConvention
  - System.Reflection.Emit.DynamicMethod.CreateDelegate(Type)
  - System.Reflection.Emit.DynamicMethod.CreateDelegate(Type,System.Object)
  - System.Reflection.Emit.DynamicMethod.DeclaringType
  - System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,ParameterAttributes,System.String)
  - System.Reflection.Emit.DynamicMethod.GetBaseDefinition
  - System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Type,System.Boolean)
  - System.Reflection.Emit.DynamicMethod.GetILGenerator
  - System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  - System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
  - System.Reflection.Emit.DynamicMethod.GetParameters
  - System.Reflection.Emit.DynamicMethod.InitLocals
  - System.Reflection.Emit.DynamicMethod.Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  - System.Reflection.Emit.DynamicMethod.IsDefined(Type,System.Boolean)
  - System.Reflection.Emit.DynamicMethod.MethodHandle
  - System.Reflection.Emit.DynamicMethod.Module
  - System.Reflection.Emit.DynamicMethod.Name
  - System.Reflection.Emit.DynamicMethod.ReflectedType
  - System.Reflection.Emit.DynamicMethod.ReturnParameter
  - System.Reflection.Emit.DynamicMethod.ReturnType
  - System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes
  - System.Reflection.Emit.DynamicMethod.ToString
  langs:
  - csharp
  - vb
  name: DynamicMethod
  nameWithType: DynamicMethod
  fullName: System.Reflection.Emit.DynamicMethod
  type: Class
  source:
    id: DynamicMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 10
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class DynamicMethod : MethodInfo'
    content.vb: >-
      Public NotInheritable Class DynamicMethod
          Inherits MethodInfo
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,Type,Type[])
  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,Type,Type[])
  id: '#ctor(System.String,Type,Type[])'
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: DynamicMethod(String, Type, Type[])
  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[])
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, Type, Type[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public DynamicMethod(string name, Type returnType, Type[] parameterTypes)
    parameters:
    - id: name
      type: System.String
    - id: returnType
      type: Type
    - id: parameterTypes
      type: Type[]
    content.vb: Public Sub New(name As String, returnType As Type, parameterTypes As Type())
  overload: System.Reflection.Emit.DynamicMethod.#ctor*
  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, Type, Type())
  name.vb: DynamicMethod(String, Type, Type())
- uid: System.Reflection.Emit.DynamicMethod.Attributes
  commentId: P:System.Reflection.Emit.DynamicMethod.Attributes
  id: Attributes
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: DynamicMethod.Attributes
  fullName: System.Reflection.Emit.DynamicMethod.Attributes
  type: Property
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodAttributes Attributes { get; }
    parameters: []
    return:
      type: MethodAttributes
    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes
  overload: System.Reflection.Emit.DynamicMethod.Attributes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.CallingConvention
  commentId: P:System.Reflection.Emit.DynamicMethod.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: CallingConvention
  nameWithType: DynamicMethod.CallingConvention
  fullName: System.Reflection.Emit.DynamicMethod.CallingConvention
  type: Property
  source:
    id: CallingConvention
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 64
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override CallingConventions CallingConvention { get; }
    parameters: []
    return:
      type: CallingConventions
    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions
  overload: System.Reflection.Emit.DynamicMethod.CallingConvention*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.DeclaringType
  commentId: P:System.Reflection.Emit.DynamicMethod.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: DynamicMethod.DeclaringType
  fullName: System.Reflection.Emit.DynamicMethod.DeclaringType
  type: Property
  source:
    id: DeclaringType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type DeclaringType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
  overload: System.Reflection.Emit.DynamicMethod.DeclaringType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.InitLocals
  commentId: P:System.Reflection.Emit.DynamicMethod.InitLocals
  id: InitLocals
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: InitLocals
  nameWithType: DynamicMethod.InitLocals
  fullName: System.Reflection.Emit.DynamicMethod.InitLocals
  type: Property
  source:
    id: InitLocals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 82
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public bool InitLocals { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property InitLocals As Boolean
  overload: System.Reflection.Emit.DynamicMethod.InitLocals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.DynamicMethod.MethodHandle
  commentId: P:System.Reflection.Emit.DynamicMethod.MethodHandle
  id: MethodHandle
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: MethodHandle
  nameWithType: DynamicMethod.MethodHandle
  fullName: System.Reflection.Emit.DynamicMethod.MethodHandle
  type: Property
  source:
    id: MethodHandle
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 94
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override RuntimeMethodHandle MethodHandle { get; }
    parameters: []
    return:
      type: RuntimeMethodHandle
    content.vb: Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle
  overload: System.Reflection.Emit.DynamicMethod.MethodHandle*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.Module
  commentId: P:System.Reflection.Emit.DynamicMethod.Module
  id: Module
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: DynamicMethod.Module
  fullName: System.Reflection.Emit.DynamicMethod.Module
  type: Property
  source:
    id: Module
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Module Module { get; }
    parameters: []
    return:
      type: Module
    content.vb: 'Public Overrides ReadOnly Property Module As '
  overload: System.Reflection.Emit.DynamicMethod.Module*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.Name
  commentId: P:System.Reflection.Emit.DynamicMethod.Name
  id: Name
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DynamicMethod.Name
  fullName: System.Reflection.Emit.DynamicMethod.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 110
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overload: System.Reflection.Emit.DynamicMethod.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.ReflectedType
  commentId: P:System.Reflection.Emit.DynamicMethod.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: ReflectedType
  nameWithType: DynamicMethod.ReflectedType
  fullName: System.Reflection.Emit.DynamicMethod.ReflectedType
  type: Property
  source:
    id: ReflectedType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 118
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type ReflectedType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property ReflectedType As Type
  overload: System.Reflection.Emit.DynamicMethod.ReflectedType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.ReturnParameter
  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnParameter
  id: ReturnParameter
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: ReturnParameter
  nameWithType: DynamicMethod.ReturnParameter
  fullName: System.Reflection.Emit.DynamicMethod.ReturnParameter
  type: Property
  source:
    id: ReturnParameter
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 126
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override ParameterInfo ReturnParameter { get; }
    parameters: []
    return:
      type: ParameterInfo
    content.vb: Public Overrides ReadOnly Property ReturnParameter As ParameterInfo
  overload: System.Reflection.Emit.DynamicMethod.ReturnParameter*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.ReturnType
  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnType
  id: ReturnType
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: DynamicMethod.ReturnType
  fullName: System.Reflection.Emit.DynamicMethod.ReturnType
  type: Property
  source:
    id: ReturnType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 135
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type ReturnType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property ReturnType As Type
  overload: System.Reflection.Emit.DynamicMethod.ReturnType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes
  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes
  id: ReturnTypeCustomAttributes
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: ReturnTypeCustomAttributes
  nameWithType: DynamicMethod.ReturnTypeCustomAttributes
  fullName: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes
  type: Property
  source:
    id: ReturnTypeCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 144
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    parameters: []
    return:
      type: ICustomAttributeProvider
    content.vb: Public Overrides ReadOnly Property ReturnTypeCustomAttributes As ICustomAttributeProvider
  overload: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type)
  commentId: M:System.Reflection.Emit.DynamicMethod.CreateDelegate(Type)
  id: CreateDelegate(Type)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: CreateDelegate(Type)
  nameWithType: DynamicMethod.CreateDelegate(Type)
  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type)
  type: Method
  source:
    id: CreateDelegate
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 165
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public sealed override Delegate CreateDelegate(Type delegateType)
    parameters:
    - id: delegateType
      type: Type
    return:
      type: Delegate
    content.vb: 'Public NotOverridable Overrides Function CreateDelegate(delegateType As Type) As '
  overload: System.Reflection.Emit.DynamicMethod.CreateDelegate*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type,System.Object)
  commentId: M:System.Reflection.Emit.DynamicMethod.CreateDelegate(Type,System.Object)
  id: CreateDelegate(Type,System.Object)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: CreateDelegate(Type, Object)
  nameWithType: DynamicMethod.CreateDelegate(Type, Object)
  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type, System.Object)
  type: Method
  source:
    id: CreateDelegate
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 198
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public sealed override Delegate CreateDelegate(Type delegateType, object target)
    parameters:
    - id: delegateType
      type: Type
    - id: target
      type: System.Object
    return:
      type: Delegate
    content.vb: 'Public NotOverridable Overrides Function CreateDelegate(delegateType As Type, target As Object) As '
  overload: System.Reflection.Emit.DynamicMethod.CreateDelegate*
  modifiers.csharp:
  - public
  - sealed
  - override
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,ParameterAttributes,System.String)
  commentId: M:System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,ParameterAttributes,System.String)
  id: DefineParameter(System.Int32,ParameterAttributes,System.String)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: DefineParameter(Int32, ParameterAttributes, String)
  nameWithType: DynamicMethod.DefineParameter(Int32, ParameterAttributes, String)
  fullName: System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32, ParameterAttributes, System.String)
  type: Method
  source:
    id: DefineParameter
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 228
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public ParameterBuilder DefineParameter(int position, ParameterAttributes attributes, string parameterName)
    parameters:
    - id: position
      type: System.Int32
    - id: attributes
      type: ParameterAttributes
    - id: parameterName
      type: System.String
    return:
      type: System.Reflection.Emit.ParameterBuilder
    content.vb: Public Function DefineParameter(position As Integer, attributes As ParameterAttributes, parameterName As String) As ParameterBuilder
  overload: System.Reflection.Emit.DynamicMethod.DefineParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.DynamicMethod.GetBaseDefinition
  commentId: M:System.Reflection.Emit.DynamicMethod.GetBaseDefinition
  id: GetBaseDefinition
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetBaseDefinition()
  nameWithType: DynamicMethod.GetBaseDefinition()
  fullName: System.Reflection.Emit.DynamicMethod.GetBaseDefinition()
  type: Method
  source:
    id: GetBaseDefinition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 239
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodInfo GetBaseDefinition()
    return:
      type: MethodInfo
    content.vb: Public Overrides Function GetBaseDefinition As MethodInfo
  overload: System.Reflection.Emit.DynamicMethod.GetBaseDefinition*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Boolean)
  nameWithType: DynamicMethod.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 255
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(bool inherit)
    parameters:
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(inherit As Boolean) As Object()
  overload: System.Reflection.Emit.DynamicMethod.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Type,System.Boolean)
  id: GetCustomAttributes(Type,System.Boolean)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: DynamicMethod.GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Type, System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 280
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object()
  overload: System.Reflection.Emit.DynamicMethod.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator
  commentId: M:System.Reflection.Emit.DynamicMethod.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetILGenerator()
  nameWithType: DynamicMethod.GetILGenerator()
  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator()
  type: Method
  source:
    id: GetILGenerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 292
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public ILGenerator GetILGenerator()
    return:
      type: System.Reflection.Emit.ILGenerator
    content.vb: Public Function GetILGenerator As ILGenerator
  overload: System.Reflection.Emit.DynamicMethod.GetILGenerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  commentId: M:System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  id: GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetILGenerator(Int32)
  nameWithType: DynamicMethod.GetILGenerator(Int32)
  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)
  type: Method
  source:
    id: GetILGenerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 309
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public ILGenerator GetILGenerator(int streamSize)
    parameters:
    - id: streamSize
      type: System.Int32
    return:
      type: System.Reflection.Emit.ILGenerator
    content.vb: Public Function GetILGenerator(streamSize As Integer) As ILGenerator
  overload: System.Reflection.Emit.DynamicMethod.GetILGenerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
  commentId: M:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetMethodImplementationFlags()
  nameWithType: DynamicMethod.GetMethodImplementationFlags()
  fullName: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags()
  type: Method
  source:
    id: GetMethodImplementationFlags
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 322
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodImplAttributes GetMethodImplementationFlags()
    return:
      type: MethodImplAttributes
    content.vb: Public Overrides Function GetMethodImplementationFlags As MethodImplAttributes
  overload: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.DynamicMethod.GetParameters
  commentId: M:System.Reflection.Emit.DynamicMethod.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: GetParameters()
  nameWithType: DynamicMethod.GetParameters()
  fullName: System.Reflection.Emit.DynamicMethod.GetParameters()
  type: Method
  source:
    id: GetParameters
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 334
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override ParameterInfo[] GetParameters()
    return:
      type: ParameterInfo[]
    content.vb: Public Overrides Function GetParameters As ParameterInfo()
  overload: System.Reflection.Emit.DynamicMethod.GetParameters*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.DynamicMethod.Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  commentId: M:System.Reflection.Emit.DynamicMethod.Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  id: Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: DynamicMethod.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: System.Reflection.Emit.DynamicMethod.Invoke(System.Object, BindingFlags, Binder, System.Object[], CultureInfo)
  type: Method
  source:
    id: Invoke
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 391
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object Invoke(object obj, BindingFlags invokeAttr, Binder binder, object[] parameters, CultureInfo culture)
    parameters:
    - id: obj
      type: System.Object
    - id: invokeAttr
      type: BindingFlags
    - id: binder
      type: Binder
    - id: parameters
      type: System.Object[]
    - id: culture
      type: CultureInfo
    return:
      type: System.Object
    content.vb: Public Overrides Function Invoke(obj As Object, invokeAttr As BindingFlags, binder As Binder, parameters As Object(), culture As CultureInfo) As Object
  overload: System.Reflection.Emit.DynamicMethod.Invoke*
  nameWithType.vb: DynamicMethod.Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Reflection.Emit.DynamicMethod.Invoke(System.Object, BindingFlags, Binder, System.Object(), CultureInfo)
  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
- uid: System.Reflection.Emit.DynamicMethod.IsDefined(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.DynamicMethod.IsDefined(Type,System.Boolean)
  id: IsDefined(Type,System.Boolean)
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: IsDefined(Type, Boolean)
  nameWithType: DynamicMethod.IsDefined(Type, Boolean)
  fullName: System.Reflection.Emit.DynamicMethod.IsDefined(Type, System.Boolean)
  type: Method
  source:
    id: IsDefined
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 411
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsDefined(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsDefined(attributeType As Type, inherit As Boolean) As Boolean
  overload: System.Reflection.Emit.DynamicMethod.IsDefined*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.DynamicMethod.ToString
  commentId: M:System.Reflection.Emit.DynamicMethod.ToString
  id: ToString
  parent: System.Reflection.Emit.DynamicMethod
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DynamicMethod.ToString()
  fullName: System.Reflection.Emit.DynamicMethod.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\DynamicMethod.cs
    startLine: 422
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: System.Reflection.Emit.DynamicMethod.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.DynamicMethod.#ctor*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.#ctor
  name: DynamicMethod
  nameWithType: DynamicMethod.DynamicMethod
  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: Type[]
  nameWithType.vb: Type()
  fullName.vb: Type()
  name.vb: Type()
  spec.csharp:
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.DynamicMethod.Attributes*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.Attributes
  name: Attributes
  nameWithType: DynamicMethod.Attributes
  fullName: System.Reflection.Emit.DynamicMethod.Attributes
- uid: MethodAttributes
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: MethodAttributes
- uid: System.Reflection.Emit.DynamicMethod.CallingConvention*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.CallingConvention
  name: CallingConvention
  nameWithType: DynamicMethod.CallingConvention
  fullName: System.Reflection.Emit.DynamicMethod.CallingConvention
- uid: CallingConventions
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: CallingConventions
- uid: System.Reflection.Emit.DynamicMethod.DeclaringType*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.DeclaringType
  name: DeclaringType
  nameWithType: DynamicMethod.DeclaringType
  fullName: System.Reflection.Emit.DynamicMethod.DeclaringType
- uid: System.Reflection.Emit.DynamicMethod.InitLocals*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.InitLocals
  name: InitLocals
  nameWithType: DynamicMethod.InitLocals
  fullName: System.Reflection.Emit.DynamicMethod.InitLocals
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.DynamicMethod.MethodHandle*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.MethodHandle
  name: MethodHandle
  nameWithType: DynamicMethod.MethodHandle
  fullName: System.Reflection.Emit.DynamicMethod.MethodHandle
- uid: RuntimeMethodHandle
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: RuntimeMethodHandle
- uid: System.Reflection.Emit.DynamicMethod.Module*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.Module
  name: Module
  nameWithType: DynamicMethod.Module
  fullName: System.Reflection.Emit.DynamicMethod.Module
- uid: Module
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: Module
- uid: System.Reflection.Emit.DynamicMethod.Name*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.Name
  name: Name
  nameWithType: DynamicMethod.Name
  fullName: System.Reflection.Emit.DynamicMethod.Name
- uid: System.Reflection.Emit.DynamicMethod.ReflectedType*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.ReflectedType
  name: ReflectedType
  nameWithType: DynamicMethod.ReflectedType
  fullName: System.Reflection.Emit.DynamicMethod.ReflectedType
- uid: System.Reflection.Emit.DynamicMethod.ReturnParameter*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.ReturnParameter
  name: ReturnParameter
  nameWithType: DynamicMethod.ReturnParameter
  fullName: System.Reflection.Emit.DynamicMethod.ReturnParameter
- uid: ParameterInfo
  commentId: '!:ParameterInfo'
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: ParameterInfo
- uid: System.Reflection.Emit.DynamicMethod.ReturnType*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.ReturnType
  name: ReturnType
  nameWithType: DynamicMethod.ReturnType
  fullName: System.Reflection.Emit.DynamicMethod.ReturnType
- uid: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes
  name: ReturnTypeCustomAttributes
  nameWithType: DynamicMethod.ReturnTypeCustomAttributes
  fullName: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes
- uid: ICustomAttributeProvider
  isExternal: true
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: ICustomAttributeProvider
- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.CreateDelegate
  name: CreateDelegate
  nameWithType: DynamicMethod.CreateDelegate
  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate
- uid: Delegate
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: Delegate
- uid: System.Reflection.Emit.DynamicMethod.DefineParameter*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.DefineParameter
  name: DefineParameter
  nameWithType: DynamicMethod.DefineParameter
  fullName: System.Reflection.Emit.DynamicMethod.DefineParameter
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ParameterAttributes
  commentId: '!:ParameterAttributes'
  isExternal: true
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: ParameterAttributes
- uid: System.Reflection.Emit.ParameterBuilder
  commentId: T:System.Reflection.Emit.ParameterBuilder
  parent: System.Reflection.Emit
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
- uid: System.Reflection.Emit.DynamicMethod.GetBaseDefinition*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.GetBaseDefinition
  name: GetBaseDefinition
  nameWithType: DynamicMethod.GetBaseDefinition
  fullName: System.Reflection.Emit.DynamicMethod.GetBaseDefinition
- uid: MethodInfo
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: MethodInfo
- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.GetCustomAttributes
  name: GetCustomAttributes
  nameWithType: DynamicMethod.GetCustomAttributes
  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.GetILGenerator
  name: GetILGenerator
  nameWithType: DynamicMethod.GetILGenerator
  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator
- uid: System.Reflection.Emit.ILGenerator
  commentId: T:System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
  name: GetMethodImplementationFlags
  nameWithType: DynamicMethod.GetMethodImplementationFlags
  fullName: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
- uid: MethodImplAttributes
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: MethodImplAttributes
- uid: System.Reflection.Emit.DynamicMethod.GetParameters*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.GetParameters
  name: GetParameters
  nameWithType: DynamicMethod.GetParameters
  fullName: System.Reflection.Emit.DynamicMethod.GetParameters
- uid: ParameterInfo[]
  isExternal: true
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullName.vb: ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.DynamicMethod.Invoke*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.Invoke
  name: Invoke
  nameWithType: DynamicMethod.Invoke
  fullName: System.Reflection.Emit.DynamicMethod.Invoke
- uid: BindingFlags
  isExternal: true
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: BindingFlags
- uid: Binder
  isExternal: true
  name: Binder
  nameWithType: Binder
  fullName: Binder
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
- uid: System.Reflection.Emit.DynamicMethod.IsDefined*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.IsDefined
  name: IsDefined
  nameWithType: DynamicMethod.IsDefined
  fullName: System.Reflection.Emit.DynamicMethod.IsDefined
- uid: System.Reflection.Emit.DynamicMethod.ToString*
  commentId: Overload:System.Reflection.Emit.DynamicMethod.ToString
  name: ToString
  nameWithType: DynamicMethod.ToString
  fullName: System.Reflection.Emit.DynamicMethod.ToString
