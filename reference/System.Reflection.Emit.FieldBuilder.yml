### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.FieldBuilder
  commentId: T:System.Reflection.Emit.FieldBuilder
  id: FieldBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.FieldBuilder.Attributes
  - System.Reflection.Emit.FieldBuilder.DeclaringType
  - System.Reflection.Emit.FieldBuilder.FieldHandle
  - System.Reflection.Emit.FieldBuilder.FieldType
  - System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.FieldBuilder.GetCustomAttributes(Type,System.Boolean)
  - System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  - System.Reflection.Emit.FieldBuilder.IsDefined(Type,System.Boolean)
  - System.Reflection.Emit.FieldBuilder.Name
  - System.Reflection.Emit.FieldBuilder.ReflectedType
  - System.Reflection.Emit.FieldBuilder.SetValue(System.Object,System.Object,BindingFlags,Binder,CultureInfo)
  langs:
  - csharp
  - vb
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
  type: Class
  source:
    id: FieldBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 7
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class FieldBuilder : FieldInfo'
    content.vb: >-
      Public NotInheritable Class FieldBuilder
          Inherits FieldInfo
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.FieldBuilder.Attributes
  commentId: P:System.Reflection.Emit.FieldBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: FieldBuilder.Attributes
  fullName: System.Reflection.Emit.FieldBuilder.Attributes
  type: Property
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 10
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override FieldAttributes Attributes { get; }
    parameters: []
    return:
      type: FieldAttributes
    content.vb: Public Overrides ReadOnly Property Attributes As FieldAttributes
  overload: System.Reflection.Emit.FieldBuilder.Attributes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.FieldHandle
  commentId: P:System.Reflection.Emit.FieldBuilder.FieldHandle
  id: FieldHandle
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: FieldHandle
  nameWithType: FieldBuilder.FieldHandle
  fullName: System.Reflection.Emit.FieldBuilder.FieldHandle
  type: Property
  source:
    id: FieldHandle
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 13
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override RuntimeFieldHandle FieldHandle { get; }
    parameters: []
    return:
      type: RuntimeFieldHandle
    content.vb: Public Overrides ReadOnly Property FieldHandle As RuntimeFieldHandle
  overload: System.Reflection.Emit.FieldBuilder.FieldHandle*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.FieldType
  commentId: P:System.Reflection.Emit.FieldBuilder.FieldType
  id: FieldType
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: FieldType
  nameWithType: FieldBuilder.FieldType
  fullName: System.Reflection.Emit.FieldBuilder.FieldType
  type: Property
  source:
    id: FieldType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 16
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type FieldType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property FieldType As Type
  overload: System.Reflection.Emit.FieldBuilder.FieldType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.FieldBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: FieldBuilder.DeclaringType
  fullName: System.Reflection.Emit.FieldBuilder.DeclaringType
  type: Property
  source:
    id: DeclaringType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type DeclaringType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
  overload: System.Reflection.Emit.FieldBuilder.DeclaringType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.Name
  commentId: P:System.Reflection.Emit.FieldBuilder.Name
  id: Name
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FieldBuilder.Name
  fullName: System.Reflection.Emit.FieldBuilder.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overload: System.Reflection.Emit.FieldBuilder.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.FieldBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: ReflectedType
  nameWithType: FieldBuilder.ReflectedType
  fullName: System.Reflection.Emit.FieldBuilder.ReflectedType
  type: Property
  source:
    id: ReflectedType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type ReflectedType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property ReflectedType As Type
  overload: System.Reflection.Emit.FieldBuilder.ReflectedType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Boolean)
  nameWithType: FieldBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(bool inherit)
    parameters:
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(inherit As Boolean) As Object()
  overload: System.Reflection.Emit.FieldBuilder.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.FieldBuilder.GetCustomAttributes(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.FieldBuilder.GetCustomAttributes(Type,System.Boolean)
  id: GetCustomAttributes(Type,System.Boolean)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: FieldBuilder.GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Emit.FieldBuilder.GetCustomAttributes(Type, System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object()
  overload: System.Reflection.Emit.FieldBuilder.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  commentId: M:System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: GetValue(Object)
  nameWithType: FieldBuilder.GetValue(Object)
  fullName: System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  type: Method
  source:
    id: GetValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object GetValue(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overrides Function GetValue(obj As Object) As Object
  overload: System.Reflection.Emit.FieldBuilder.GetValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.FieldBuilder.IsDefined(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.FieldBuilder.IsDefined(Type,System.Boolean)
  id: IsDefined(Type,System.Boolean)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: IsDefined(Type, Boolean)
  nameWithType: FieldBuilder.IsDefined(Type, Boolean)
  fullName: System.Reflection.Emit.FieldBuilder.IsDefined(Type, System.Boolean)
  type: Method
  source:
    id: IsDefined
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsDefined(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsDefined(attributeType As Type, inherit As Boolean) As Boolean
  overload: System.Reflection.Emit.FieldBuilder.IsDefined*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.FieldBuilder.SetValue(System.Object,System.Object,BindingFlags,Binder,CultureInfo)
  commentId: M:System.Reflection.Emit.FieldBuilder.SetValue(System.Object,System.Object,BindingFlags,Binder,CultureInfo)
  id: SetValue(System.Object,System.Object,BindingFlags,Binder,CultureInfo)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object, BindingFlags, Binder, CultureInfo)
  nameWithType: FieldBuilder.SetValue(Object, Object, BindingFlags, Binder, CultureInfo)
  fullName: System.Reflection.Emit.FieldBuilder.SetValue(System.Object, System.Object, BindingFlags, Binder, CultureInfo)
  type: Method
  source:
    id: SetValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\FieldBuilder.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
    parameters:
    - id: obj
      type: System.Object
    - id: value
      type: System.Object
    - id: invokeAttr
      type: BindingFlags
    - id: binder
      type: Binder
    - id: culture
      type: CultureInfo
    content.vb: Public Overrides Sub SetValue(obj As Object, value As Object, invokeAttr As BindingFlags, binder As Binder, culture As CultureInfo)
  overload: System.Reflection.Emit.FieldBuilder.SetValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.FieldBuilder.Attributes*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.Attributes
  name: Attributes
  nameWithType: FieldBuilder.Attributes
  fullName: System.Reflection.Emit.FieldBuilder.Attributes
- uid: FieldAttributes
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: FieldAttributes
- uid: System.Reflection.Emit.FieldBuilder.FieldHandle*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.FieldHandle
  name: FieldHandle
  nameWithType: FieldBuilder.FieldHandle
  fullName: System.Reflection.Emit.FieldBuilder.FieldHandle
- uid: RuntimeFieldHandle
  commentId: '!:RuntimeFieldHandle'
  isExternal: true
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: RuntimeFieldHandle
- uid: System.Reflection.Emit.FieldBuilder.FieldType*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.FieldType
  name: FieldType
  nameWithType: FieldBuilder.FieldType
  fullName: System.Reflection.Emit.FieldBuilder.FieldType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Reflection.Emit.FieldBuilder.DeclaringType*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.DeclaringType
  name: DeclaringType
  nameWithType: FieldBuilder.DeclaringType
  fullName: System.Reflection.Emit.FieldBuilder.DeclaringType
- uid: System.Reflection.Emit.FieldBuilder.Name*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.Name
  name: Name
  nameWithType: FieldBuilder.Name
  fullName: System.Reflection.Emit.FieldBuilder.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.FieldBuilder.ReflectedType*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.ReflectedType
  name: ReflectedType
  nameWithType: FieldBuilder.ReflectedType
  fullName: System.Reflection.Emit.FieldBuilder.ReflectedType
- uid: System.Reflection.Emit.FieldBuilder.GetCustomAttributes*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.GetCustomAttributes
  name: GetCustomAttributes
  nameWithType: FieldBuilder.GetCustomAttributes
  fullName: System.Reflection.Emit.FieldBuilder.GetCustomAttributes
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.FieldBuilder.GetValue*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.GetValue
  name: GetValue
  nameWithType: FieldBuilder.GetValue
  fullName: System.Reflection.Emit.FieldBuilder.GetValue
- uid: System.Reflection.Emit.FieldBuilder.IsDefined*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.IsDefined
  name: IsDefined
  nameWithType: FieldBuilder.IsDefined
  fullName: System.Reflection.Emit.FieldBuilder.IsDefined
- uid: System.Reflection.Emit.FieldBuilder.SetValue*
  commentId: Overload:System.Reflection.Emit.FieldBuilder.SetValue
  name: SetValue
  nameWithType: FieldBuilder.SetValue
  fullName: System.Reflection.Emit.FieldBuilder.SetValue
- uid: BindingFlags
  isExternal: true
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: BindingFlags
- uid: Binder
  isExternal: true
  name: Binder
  nameWithType: Binder
  fullName: Binder
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
