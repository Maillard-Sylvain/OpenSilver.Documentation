### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.MethodBuilder
  commentId: T:System.Reflection.Emit.MethodBuilder
  id: MethodBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.MethodBuilder.Attributes
  - System.Reflection.Emit.MethodBuilder.DeclaringType
  - System.Reflection.Emit.MethodBuilder.GetBaseDefinition
  - System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.MethodBuilder.GetCustomAttributes(Type,System.Boolean)
  - System.Reflection.Emit.MethodBuilder.GetILGenerator
  - System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
  - System.Reflection.Emit.MethodBuilder.GetParameters
  - System.Reflection.Emit.MethodBuilder.Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  - System.Reflection.Emit.MethodBuilder.IsDefined(Type,System.Boolean)
  - System.Reflection.Emit.MethodBuilder.MethodHandle
  - System.Reflection.Emit.MethodBuilder.Name
  - System.Reflection.Emit.MethodBuilder.ReflectedType
  - System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes
  langs:
  - csharp
  - vb
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
  type: Class
  source:
    id: MethodBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 7
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class MethodBuilder : MethodInfo'
    content.vb: >-
      Public NotInheritable Class MethodBuilder
          Inherits MethodInfo
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes
  commentId: P:System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes
  id: ReturnTypeCustomAttributes
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: ReturnTypeCustomAttributes
  nameWithType: MethodBuilder.ReturnTypeCustomAttributes
  fullName: System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes
  type: Property
  source:
    id: ReturnTypeCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 10
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    parameters: []
    return:
      type: ICustomAttributeProvider
    content.vb: Public Overrides ReadOnly Property ReturnTypeCustomAttributes As ICustomAttributeProvider
  overload: System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.MethodBuilder.Attributes
  commentId: P:System.Reflection.Emit.MethodBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: MethodBuilder.Attributes
  fullName: System.Reflection.Emit.MethodBuilder.Attributes
  type: Property
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 13
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodAttributes Attributes { get; }
    parameters: []
    return:
      type: MethodAttributes
    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes
  overload: System.Reflection.Emit.MethodBuilder.Attributes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.MethodBuilder.MethodHandle
  commentId: P:System.Reflection.Emit.MethodBuilder.MethodHandle
  id: MethodHandle
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: MethodHandle
  nameWithType: MethodBuilder.MethodHandle
  fullName: System.Reflection.Emit.MethodBuilder.MethodHandle
  type: Property
  source:
    id: MethodHandle
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 16
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override RuntimeMethodHandle MethodHandle { get; }
    parameters: []
    return:
      type: RuntimeMethodHandle
    content.vb: Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle
  overload: System.Reflection.Emit.MethodBuilder.MethodHandle*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.MethodBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.MethodBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: MethodBuilder.DeclaringType
  fullName: System.Reflection.Emit.MethodBuilder.DeclaringType
  type: Property
  source:
    id: DeclaringType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type DeclaringType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
  overload: System.Reflection.Emit.MethodBuilder.DeclaringType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.MethodBuilder.Name
  commentId: P:System.Reflection.Emit.MethodBuilder.Name
  id: Name
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MethodBuilder.Name
  fullName: System.Reflection.Emit.MethodBuilder.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overload: System.Reflection.Emit.MethodBuilder.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.MethodBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.MethodBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: ReflectedType
  nameWithType: MethodBuilder.ReflectedType
  fullName: System.Reflection.Emit.MethodBuilder.ReflectedType
  type: Property
  source:
    id: ReflectedType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type ReflectedType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property ReflectedType As Type
  overload: System.Reflection.Emit.MethodBuilder.ReflectedType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.MethodBuilder.GetBaseDefinition
  commentId: M:System.Reflection.Emit.MethodBuilder.GetBaseDefinition
  id: GetBaseDefinition
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: GetBaseDefinition()
  nameWithType: MethodBuilder.GetBaseDefinition()
  fullName: System.Reflection.Emit.MethodBuilder.GetBaseDefinition()
  type: Method
  source:
    id: GetBaseDefinition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodInfo GetBaseDefinition()
    return:
      type: MethodInfo
    content.vb: Public Overrides Function GetBaseDefinition As MethodInfo
  overload: System.Reflection.Emit.MethodBuilder.GetBaseDefinition*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Boolean)
  nameWithType: MethodBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(bool inherit)
    parameters:
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(inherit As Boolean) As Object()
  overload: System.Reflection.Emit.MethodBuilder.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.MethodBuilder.GetCustomAttributes(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(Type,System.Boolean)
  id: GetCustomAttributes(Type,System.Boolean)
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: MethodBuilder.GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Emit.MethodBuilder.GetCustomAttributes(Type, System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object()
  overload: System.Reflection.Emit.MethodBuilder.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
  commentId: M:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: GetMethodImplementationFlags()
  nameWithType: MethodBuilder.GetMethodImplementationFlags()
  fullName: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags()
  type: Method
  source:
    id: GetMethodImplementationFlags
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodImplAttributes GetMethodImplementationFlags()
    return:
      type: MethodImplAttributes
    content.vb: Public Overrides Function GetMethodImplementationFlags As MethodImplAttributes
  overload: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.MethodBuilder.GetParameters
  commentId: M:System.Reflection.Emit.MethodBuilder.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: GetParameters()
  nameWithType: MethodBuilder.GetParameters()
  fullName: System.Reflection.Emit.MethodBuilder.GetParameters()
  type: Method
  source:
    id: GetParameters
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override ParameterInfo[] GetParameters()
    return:
      type: ParameterInfo[]
    content.vb: Public Overrides Function GetParameters As ParameterInfo()
  overload: System.Reflection.Emit.MethodBuilder.GetParameters*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.MethodBuilder.Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  commentId: M:System.Reflection.Emit.MethodBuilder.Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  id: Invoke(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: MethodBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: System.Reflection.Emit.MethodBuilder.Invoke(System.Object, BindingFlags, Binder, System.Object[], CultureInfo)
  type: Method
  source:
    id: Invoke
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 58
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object Invoke(object obj, BindingFlags invokeAttr, Binder binder, object[] parameters, CultureInfo culture)
    parameters:
    - id: obj
      type: System.Object
    - id: invokeAttr
      type: BindingFlags
    - id: binder
      type: Binder
    - id: parameters
      type: System.Object[]
    - id: culture
      type: CultureInfo
    return:
      type: System.Object
    content.vb: Public Overrides Function Invoke(obj As Object, invokeAttr As BindingFlags, binder As Binder, parameters As Object(), culture As CultureInfo) As Object
  overload: System.Reflection.Emit.MethodBuilder.Invoke*
  nameWithType.vb: MethodBuilder.Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Reflection.Emit.MethodBuilder.Invoke(System.Object, BindingFlags, Binder, System.Object(), CultureInfo)
  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)
- uid: System.Reflection.Emit.MethodBuilder.IsDefined(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.MethodBuilder.IsDefined(Type,System.Boolean)
  id: IsDefined(Type,System.Boolean)
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: IsDefined(Type, Boolean)
  nameWithType: MethodBuilder.IsDefined(Type, Boolean)
  fullName: System.Reflection.Emit.MethodBuilder.IsDefined(Type, System.Boolean)
  type: Method
  source:
    id: IsDefined
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 64
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsDefined(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsDefined(attributeType As Type, inherit As Boolean) As Boolean
  overload: System.Reflection.Emit.MethodBuilder.IsDefined*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.MethodBuilder.GetILGenerator
  commentId: M:System.Reflection.Emit.MethodBuilder.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.MethodBuilder
  langs:
  - csharp
  - vb
  name: GetILGenerator()
  nameWithType: MethodBuilder.GetILGenerator()
  fullName: System.Reflection.Emit.MethodBuilder.GetILGenerator()
  type: Method
  source:
    id: GetILGenerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\MethodBuilder.cs
    startLine: 70
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public ILGenerator GetILGenerator()
    return:
      type: System.Reflection.Emit.ILGenerator
    content.vb: Public Function GetILGenerator As ILGenerator
  overload: System.Reflection.Emit.MethodBuilder.GetILGenerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes
  name: ReturnTypeCustomAttributes
  nameWithType: MethodBuilder.ReturnTypeCustomAttributes
  fullName: System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes
- uid: ICustomAttributeProvider
  isExternal: true
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: ICustomAttributeProvider
- uid: System.Reflection.Emit.MethodBuilder.Attributes*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.Attributes
  name: Attributes
  nameWithType: MethodBuilder.Attributes
  fullName: System.Reflection.Emit.MethodBuilder.Attributes
- uid: MethodAttributes
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: MethodAttributes
- uid: System.Reflection.Emit.MethodBuilder.MethodHandle*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.MethodHandle
  name: MethodHandle
  nameWithType: MethodBuilder.MethodHandle
  fullName: System.Reflection.Emit.MethodBuilder.MethodHandle
- uid: RuntimeMethodHandle
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: RuntimeMethodHandle
- uid: System.Reflection.Emit.MethodBuilder.DeclaringType*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.DeclaringType
  name: DeclaringType
  nameWithType: MethodBuilder.DeclaringType
  fullName: System.Reflection.Emit.MethodBuilder.DeclaringType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Reflection.Emit.MethodBuilder.Name*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.Name
  name: Name
  nameWithType: MethodBuilder.Name
  fullName: System.Reflection.Emit.MethodBuilder.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.MethodBuilder.ReflectedType*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.ReflectedType
  name: ReflectedType
  nameWithType: MethodBuilder.ReflectedType
  fullName: System.Reflection.Emit.MethodBuilder.ReflectedType
- uid: System.Reflection.Emit.MethodBuilder.GetBaseDefinition*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.GetBaseDefinition
  name: GetBaseDefinition
  nameWithType: MethodBuilder.GetBaseDefinition
  fullName: System.Reflection.Emit.MethodBuilder.GetBaseDefinition
- uid: MethodInfo
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: MethodInfo
- uid: System.Reflection.Emit.MethodBuilder.GetCustomAttributes*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.GetCustomAttributes
  name: GetCustomAttributes
  nameWithType: MethodBuilder.GetCustomAttributes
  fullName: System.Reflection.Emit.MethodBuilder.GetCustomAttributes
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
  name: GetMethodImplementationFlags
  nameWithType: MethodBuilder.GetMethodImplementationFlags
  fullName: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
- uid: MethodImplAttributes
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: MethodImplAttributes
- uid: System.Reflection.Emit.MethodBuilder.GetParameters*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.GetParameters
  name: GetParameters
  nameWithType: MethodBuilder.GetParameters
  fullName: System.Reflection.Emit.MethodBuilder.GetParameters
- uid: ParameterInfo[]
  isExternal: true
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullName.vb: ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.MethodBuilder.Invoke*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.Invoke
  name: Invoke
  nameWithType: MethodBuilder.Invoke
  fullName: System.Reflection.Emit.MethodBuilder.Invoke
- uid: BindingFlags
  isExternal: true
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: BindingFlags
- uid: Binder
  isExternal: true
  name: Binder
  nameWithType: Binder
  fullName: Binder
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
- uid: System.Reflection.Emit.MethodBuilder.IsDefined*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.IsDefined
  name: IsDefined
  nameWithType: MethodBuilder.IsDefined
  fullName: System.Reflection.Emit.MethodBuilder.IsDefined
- uid: System.Reflection.Emit.MethodBuilder.GetILGenerator*
  commentId: Overload:System.Reflection.Emit.MethodBuilder.GetILGenerator
  name: GetILGenerator
  nameWithType: MethodBuilder.GetILGenerator
  fullName: System.Reflection.Emit.MethodBuilder.GetILGenerator
- uid: System.Reflection.Emit.ILGenerator
  commentId: T:System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
