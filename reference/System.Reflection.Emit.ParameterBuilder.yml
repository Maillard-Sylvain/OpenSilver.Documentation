### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ParameterBuilder
  commentId: T:System.Reflection.Emit.ParameterBuilder
  id: ParameterBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ParameterBuilder.Attributes
  - System.Reflection.Emit.ParameterBuilder.GetToken
  - System.Reflection.Emit.ParameterBuilder.IsIn
  - System.Reflection.Emit.ParameterBuilder.IsOptional
  - System.Reflection.Emit.ParameterBuilder.IsOut
  - System.Reflection.Emit.ParameterBuilder.Name
  - System.Reflection.Emit.ParameterBuilder.Position
  - System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  langs:
  - csharp
  - vb
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
  type: Class
  source:
    id: ParameterBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 8
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public class ParameterBuilder : object, _ParameterBuilder'
    content.vb: >-
      Public Class ParameterBuilder
          Inherits Object
          Implements _ParameterBuilder
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.Emit.ParameterBuilder.Attributes
  commentId: P:System.Reflection.Emit.ParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
  type: Property
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public virtual int Attributes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Attributes As Integer
  overload: System.Reflection.Emit.ParameterBuilder.Attributes*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsIn
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsIn
  id: IsIn
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
  type: Property
  source:
    id: IsIn
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public bool IsIn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIn As Boolean
  overload: System.Reflection.Emit.ParameterBuilder.IsIn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOptional
  id: IsOptional
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
  type: Property
  source:
    id: IsOptional
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 36
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public bool IsOptional { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOptional As Boolean
  overload: System.Reflection.Emit.ParameterBuilder.IsOptional*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsOut
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOut
  id: IsOut
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
  type: Property
  source:
    id: IsOut
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 44
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public bool IsOut { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOut As Boolean
  overload: System.Reflection.Emit.ParameterBuilder.IsOut*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.Name
  commentId: P:System.Reflection.Emit.ParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public virtual string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Name As String
  overload: System.Reflection.Emit.ParameterBuilder.Name*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.Position
  commentId: P:System.Reflection.Emit.ParameterBuilder.Position
  id: Position
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ParameterBuilder.Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
  type: Property
  source:
    id: Position
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 60
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public virtual int Position { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Position As Integer
  overload: System.Reflection.Emit.ParameterBuilder.Position*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.GetToken
  commentId: M:System.Reflection.Emit.ParameterBuilder.GetToken
  id: GetToken
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: GetToken()
  nameWithType: ParameterBuilder.GetToken()
  fullName: System.Reflection.Emit.ParameterBuilder.GetToken()
  type: Method
  source:
    id: GetToken
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 69
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public virtual ParameterToken GetToken()
    return:
      type: System.Reflection.Emit.ParameterToken
    content.vb: Public Overridable Function GetToken As ParameterToken
  overload: System.Reflection.Emit.ParameterBuilder.GetToken*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetConstant(Object)
  nameWithType: ParameterBuilder.SetConstant(Object)
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  type: Method
  source:
    id: SetConstant
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public virtual void SetConstant(object defaultValue)
    parameters:
    - id: defaultValue
      type: System.Object
    content.vb: Public Overridable Sub SetConstant(defaultValue As Object)
  overload: System.Reflection.Emit.ParameterBuilder.SetConstant*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    id: SetCustomAttribute
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 105
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
  overload: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.ParameterBuilder.Attributes*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.Attributes
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ParameterBuilder.IsIn*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.IsIn
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.IsOptional
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
- uid: System.Reflection.Emit.ParameterBuilder.IsOut*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.IsOut
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
- uid: System.Reflection.Emit.ParameterBuilder.Name*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.Name
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.ParameterBuilder.Position*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.Position
  name: Position
  nameWithType: ParameterBuilder.Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
- uid: System.Reflection.Emit.ParameterBuilder.GetToken*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.GetToken
  name: GetToken
  nameWithType: ParameterBuilder.GetToken
  fullName: System.Reflection.Emit.ParameterBuilder.GetToken
- uid: System.Reflection.Emit.ParameterToken
  commentId: T:System.Reflection.Emit.ParameterToken
  parent: System.Reflection.Emit
  name: ParameterToken
  nameWithType: ParameterToken
  fullName: System.Reflection.Emit.ParameterToken
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.SetConstant
  name: SetConstant
  nameWithType: ParameterBuilder.SetConstant
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute
  name: SetCustomAttribute
  nameWithType: ParameterBuilder.SetCustomAttribute
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
