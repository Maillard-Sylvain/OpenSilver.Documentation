### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ParameterBuilder
  commentId: T:System.Reflection.Emit.ParameterBuilder
  id: ParameterBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ParameterBuilder.Attributes
  - System.Reflection.Emit.ParameterBuilder.GetToken
  - System.Reflection.Emit.ParameterBuilder.IsIn
  - System.Reflection.Emit.ParameterBuilder.IsOptional
  - System.Reflection.Emit.ParameterBuilder.IsOut
  - System.Reflection.Emit.ParameterBuilder.Name
  - System.Reflection.Emit.ParameterBuilder.Position
  - System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  langs:
  - csharp
  - vb
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
  type: Class
  source:
    id: ParameterBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 8
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [ClassInterface(ClassInterfaceType.None)]

      [ComVisible(true)]

      [NotImplemented]

      public class ParameterBuilder : _ParameterBuilder
    content.vb: >-
      <ClassInterface(ClassInterfaceType.None)>

      <ComVisible(True)>

      <NotImplemented>

      Public Class ParameterBuilder
          Implements _ParameterBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.Emit.ParameterBuilder.Attributes
  commentId: P:System.Reflection.Emit.ParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
  type: Property
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 20
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public virtual int Attributes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <NotImplemented>

      Public Overridable ReadOnly Property Attributes As Integer
  overload: System.Reflection.Emit.ParameterBuilder.Attributes*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsIn
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsIn
  id: IsIn
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
  type: Property
  source:
    id: IsIn
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 28
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public bool IsIn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property IsIn As Boolean
  overload: System.Reflection.Emit.ParameterBuilder.IsIn*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOptional
  id: IsOptional
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
  type: Property
  source:
    id: IsOptional
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 36
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public bool IsOptional { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property IsOptional As Boolean
  overload: System.Reflection.Emit.ParameterBuilder.IsOptional*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.IsOut
  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOut
  id: IsOut
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
  type: Property
  source:
    id: IsOut
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 44
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public bool IsOut { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property IsOut As Boolean
  overload: System.Reflection.Emit.ParameterBuilder.IsOut*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.Name
  commentId: P:System.Reflection.Emit.ParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 52
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public virtual string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <NotImplemented>

      Public Overridable ReadOnly Property Name As String
  overload: System.Reflection.Emit.ParameterBuilder.Name*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.Position
  commentId: P:System.Reflection.Emit.ParameterBuilder.Position
  id: Position
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ParameterBuilder.Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
  type: Property
  source:
    id: Position
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 60
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public virtual int Position { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <NotImplemented>

      Public Overridable ReadOnly Property Position As Integer
  overload: System.Reflection.Emit.ParameterBuilder.Position*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.Emit.ParameterBuilder.GetToken
  commentId: M:System.Reflection.Emit.ParameterBuilder.GetToken
  id: GetToken
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: GetToken()
  nameWithType: ParameterBuilder.GetToken()
  fullName: System.Reflection.Emit.ParameterBuilder.GetToken()
  type: Method
  source:
    id: GetToken
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 69
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public virtual ParameterToken GetToken()
    return:
      type: System.Reflection.Emit.ParameterToken
    content.vb: >-
      <NotImplemented>

      Public Overridable Function GetToken As ParameterToken
  overload: System.Reflection.Emit.ParameterBuilder.GetToken*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetConstant(Object)
  nameWithType: ParameterBuilder.SetConstant(Object)
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  type: Method
  source:
    id: SetConstant
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 88
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public virtual void SetConstant(object defaultValue)
    parameters:
    - id: defaultValue
      type: System.Object
    content.vb: >-
      <NotImplemented>

      Public Overridable Sub SetConstant(defaultValue As Object)
  overload: System.Reflection.Emit.ParameterBuilder.SetConstant*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    id: SetCustomAttribute
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterBuilder.cs
    startLine: 105
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
    content.vb: >-
      <NotImplemented>

      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
  overload: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.ParameterBuilder.Attributes*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.Attributes
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ParameterBuilder.IsIn*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.IsIn
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.IsOptional
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
- uid: System.Reflection.Emit.ParameterBuilder.IsOut*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.IsOut
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
- uid: System.Reflection.Emit.ParameterBuilder.Name*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.Name
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.ParameterBuilder.Position*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.Position
  name: Position
  nameWithType: ParameterBuilder.Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
- uid: System.Reflection.Emit.ParameterBuilder.GetToken*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.GetToken
  name: GetToken
  nameWithType: ParameterBuilder.GetToken
  fullName: System.Reflection.Emit.ParameterBuilder.GetToken
- uid: System.Reflection.Emit.ParameterToken
  commentId: T:System.Reflection.Emit.ParameterToken
  parent: System.Reflection.Emit
  name: ParameterToken
  nameWithType: ParameterToken
  fullName: System.Reflection.Emit.ParameterToken
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.SetConstant
  name: SetConstant
  nameWithType: ParameterBuilder.SetConstant
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  commentId: Overload:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute
  name: SetCustomAttribute
  nameWithType: ParameterBuilder.SetCustomAttribute
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
