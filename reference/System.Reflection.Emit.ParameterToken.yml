### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ParameterToken
  commentId: T:System.Reflection.Emit.ParameterToken
  id: ParameterToken
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.ParameterToken.Empty
  - System.Reflection.Emit.ParameterToken.Equals(System.Object)
  - System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)
  - System.Reflection.Emit.ParameterToken.GetHashCode
  - System.Reflection.Emit.ParameterToken.op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  - System.Reflection.Emit.ParameterToken.op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  - System.Reflection.Emit.ParameterToken.Token
  langs:
  - csharp
  - vb
  name: ParameterToken
  nameWithType: ParameterToken
  fullName: System.Reflection.Emit.ParameterToken
  type: Struct
  source:
    id: ParameterToken
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 8
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [ComVisible(true)]

      [NotImplemented]

      public struct ParameterToken
    content.vb: >-
      <ComVisible(True)>

      <NotImplemented>

      Public Structure ParameterToken
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Reflection.Emit.ParameterToken.Empty
  commentId: F:System.Reflection.Emit.ParameterToken.Empty
  id: Empty
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: ParameterToken.Empty
  fullName: System.Reflection.Emit.ParameterToken.Empty
  type: Field
  source:
    id: Empty
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 17
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public static readonly ParameterToken Empty
    return:
      type: System.Reflection.Emit.ParameterToken
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly Empty As ParameterToken
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Reflection.Emit.ParameterToken.Token
  commentId: P:System.Reflection.Emit.ParameterToken.Token
  id: Token
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: ParameterToken.Token
  fullName: System.Reflection.Emit.ParameterToken.Token
  type: Property
  source:
    id: Token
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 25
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public int Token { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property Token As Integer
  overload: System.Reflection.Emit.ParameterToken.Token*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Reflection.Emit.ParameterToken.Equals(System.Object)
  commentId: M:System.Reflection.Emit.ParameterToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ParameterToken.Equals(Object)
  fullName: System.Reflection.Emit.ParameterToken.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 40
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Reflection.Emit.ParameterToken.Equals*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)
  commentId: M:System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)
  id: Equals(System.Reflection.Emit.ParameterToken)
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: Equals(ParameterToken)
  nameWithType: ParameterToken.Equals(ParameterToken)
  fullName: System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 56
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public bool Equals(ParameterToken obj)
    parameters:
    - id: obj
      type: System.Reflection.Emit.ParameterToken
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public Function Equals(obj As ParameterToken) As Boolean
  overload: System.Reflection.Emit.ParameterToken.Equals*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.ParameterToken.GetHashCode
  commentId: M:System.Reflection.Emit.ParameterToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ParameterToken.GetHashCode()
  fullName: System.Reflection.Emit.ParameterToken.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 67
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: >-
      <NotImplemented>

      Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Reflection.Emit.ParameterToken.GetHashCode*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.ParameterToken.op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  commentId: M:System.Reflection.Emit.ParameterToken.op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  id: op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: Equality(ParameterToken, ParameterToken)
  nameWithType: ParameterToken.Equality(ParameterToken, ParameterToken)
  fullName: System.Reflection.Emit.ParameterToken.Equality(System.Reflection.Emit.ParameterToken, System.Reflection.Emit.ParameterToken)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 86
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public static bool operator ==(ParameterToken a, ParameterToken b)
    parameters:
    - id: a
      type: System.Reflection.Emit.ParameterToken
    - id: b
      type: System.Reflection.Emit.ParameterToken
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public Shared Operator =(a As ParameterToken, b As ParameterToken) As Boolean
  overload: System.Reflection.Emit.ParameterToken.op_Equality*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.ParameterToken.op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  commentId: M:System.Reflection.Emit.ParameterToken.op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  id: op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)
  parent: System.Reflection.Emit.ParameterToken
  langs:
  - csharp
  - vb
  name: Inequality(ParameterToken, ParameterToken)
  nameWithType: ParameterToken.Inequality(ParameterToken, ParameterToken)
  fullName: System.Reflection.Emit.ParameterToken.Inequality(System.Reflection.Emit.ParameterToken, System.Reflection.Emit.ParameterToken)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\ParameterToken.cs
    startLine: 105
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: >-
      [NotImplemented]

      public static bool operator !=(ParameterToken a, ParameterToken b)
    parameters:
    - id: a
      type: System.Reflection.Emit.ParameterToken
    - id: b
      type: System.Reflection.Emit.ParameterToken
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public Shared Operator <>(a As ParameterToken, b As ParameterToken) As Boolean
  overload: System.Reflection.Emit.ParameterToken.op_Inequality*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.ParameterToken
  commentId: T:System.Reflection.Emit.ParameterToken
  parent: System.Reflection.Emit
  name: ParameterToken
  nameWithType: ParameterToken
  fullName: System.Reflection.Emit.ParameterToken
- uid: System.Reflection.Emit.ParameterToken.Token*
  commentId: Overload:System.Reflection.Emit.ParameterToken.Token
  name: Token
  nameWithType: ParameterToken.Token
  fullName: System.Reflection.Emit.ParameterToken.Token
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Emit.ParameterToken.Equals*
  commentId: Overload:System.Reflection.Emit.ParameterToken.Equals
  name: Equals
  nameWithType: ParameterToken.Equals
  fullName: System.Reflection.Emit.ParameterToken.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.Emit.ParameterToken.GetHashCode*
  commentId: Overload:System.Reflection.Emit.ParameterToken.GetHashCode
  name: GetHashCode
  nameWithType: ParameterToken.GetHashCode
  fullName: System.Reflection.Emit.ParameterToken.GetHashCode
- uid: System.Reflection.Emit.ParameterToken.op_Equality*
  commentId: Overload:System.Reflection.Emit.ParameterToken.op_Equality
  name: Equality
  nameWithType: ParameterToken.Equality
  fullName: System.Reflection.Emit.ParameterToken.Equality
- uid: System.Reflection.Emit.ParameterToken.op_Inequality*
  commentId: Overload:System.Reflection.Emit.ParameterToken.op_Inequality
  name: Inequality
  nameWithType: ParameterToken.Inequality
  fullName: System.Reflection.Emit.ParameterToken.Inequality
