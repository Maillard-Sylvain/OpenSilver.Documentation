### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.PropertyBuilder
  commentId: T:System.Reflection.Emit.PropertyBuilder
  id: PropertyBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.PropertyBuilder.Attributes
  - System.Reflection.Emit.PropertyBuilder.CanRead
  - System.Reflection.Emit.PropertyBuilder.CanWrite
  - System.Reflection.Emit.PropertyBuilder.DeclaringType
  - System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Type,System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  - System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  - System.Reflection.Emit.PropertyBuilder.IsDefined(Type,System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.Name
  - System.Reflection.Emit.PropertyBuilder.PropertyType
  - System.Reflection.Emit.PropertyBuilder.ReflectedType
  - System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  langs:
  - csharp
  - vb
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
  type: Class
  source:
    id: PropertyBuilder
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 7
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: 'public sealed class PropertyBuilder : PropertyInfo'
    content.vb: >-
      Public NotInheritable Class PropertyBuilder
          Inherits PropertyInfo
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.PropertyBuilder.Attributes
  commentId: P:System.Reflection.Emit.PropertyBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: System.Reflection.Emit.PropertyBuilder.Attributes
  type: Property
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 10
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override PropertyAttributes Attributes { get; }
    parameters: []
    return:
      type: PropertyAttributes
    content.vb: Public Overrides ReadOnly Property Attributes As PropertyAttributes
  overload: System.Reflection.Emit.PropertyBuilder.Attributes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.CanRead
  commentId: P:System.Reflection.Emit.PropertyBuilder.CanRead
  id: CanRead
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: System.Reflection.Emit.PropertyBuilder.CanRead
  type: Property
  source:
    id: CanRead
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 13
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: System.Reflection.Emit.PropertyBuilder.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite
  commentId: P:System.Reflection.Emit.PropertyBuilder.CanWrite
  id: CanWrite
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: System.Reflection.Emit.PropertyBuilder.CanWrite
  type: Property
  source:
    id: CanWrite
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 16
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overload: System.Reflection.Emit.PropertyBuilder.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType
  commentId: P:System.Reflection.Emit.PropertyBuilder.PropertyType
  id: PropertyType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: System.Reflection.Emit.PropertyBuilder.PropertyType
  type: Property
  source:
    id: PropertyType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type PropertyType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property PropertyType As Type
  overload: System.Reflection.Emit.PropertyBuilder.PropertyType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.PropertyBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: System.Reflection.Emit.PropertyBuilder.DeclaringType
  type: Property
  source:
    id: DeclaringType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type DeclaringType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
  overload: System.Reflection.Emit.PropertyBuilder.DeclaringType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.Name
  commentId: P:System.Reflection.Emit.PropertyBuilder.Name
  id: Name
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: System.Reflection.Emit.PropertyBuilder.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overload: System.Reflection.Emit.PropertyBuilder.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.PropertyBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: System.Reflection.Emit.PropertyBuilder.ReflectedType
  type: Property
  source:
    id: ReflectedType
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type ReflectedType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public Overrides ReadOnly Property ReflectedType As Type
  overload: System.Reflection.Emit.PropertyBuilder.ReflectedType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetAccessors(Boolean)
  nameWithType: PropertyBuilder.GetAccessors(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  type: Method
  source:
    id: GetAccessors
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 31
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodInfo[] GetAccessors(bool nonPublic)
    parameters:
    - id: nonPublic
      type: System.Boolean
    return:
      type: MethodInfo[]
    content.vb: Public Overrides Function GetAccessors(nonPublic As Boolean) As MethodInfo()
  overload: System.Reflection.Emit.PropertyBuilder.GetAccessors*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(bool inherit)
    parameters:
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(inherit As Boolean) As Object()
  overload: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Type,System.Boolean)
  id: GetCustomAttributes(Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Type, System.Boolean)
  type: Method
  source:
    id: GetCustomAttributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 43
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Object[]
    content.vb: Public Overrides Function GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object()
  overload: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetGetMethod(Boolean)
  nameWithType: PropertyBuilder.GetGetMethod(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  type: Method
  source:
    id: GetGetMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 49
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodInfo GetGetMethod(bool nonPublic)
    parameters:
    - id: nonPublic
      type: System.Boolean
    return:
      type: MethodInfo
    content.vb: Public Overrides Function GetGetMethod(nonPublic As Boolean) As MethodInfo
  overload: System.Reflection.Emit.PropertyBuilder.GetGetMethod*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  id: GetIndexParameters
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetIndexParameters()
  nameWithType: PropertyBuilder.GetIndexParameters()
  fullName: System.Reflection.Emit.PropertyBuilder.GetIndexParameters()
  type: Method
  source:
    id: GetIndexParameters
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override ParameterInfo[] GetIndexParameters()
    return:
      type: ParameterInfo[]
    content.vb: Public Overrides Function GetIndexParameters As ParameterInfo()
  overload: System.Reflection.Emit.PropertyBuilder.GetIndexParameters*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetSetMethod(Boolean)
  nameWithType: PropertyBuilder.GetSetMethod(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  type: Method
  source:
    id: GetSetMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override MethodInfo GetSetMethod(bool nonPublic)
    parameters:
    - id: nonPublic
      type: System.Boolean
    return:
      type: MethodInfo
    content.vb: Public Overrides Function GetSetMethod(nonPublic As Boolean) As MethodInfo
  overload: System.Reflection.Emit.PropertyBuilder.GetSetMethod*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  id: GetValue(System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: PropertyBuilder.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object, BindingFlags, Binder, System.Object[], CultureInfo)
  type: Method
  source:
    id: GetValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 67
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override object GetValue(object obj, BindingFlags invokeAttr, Binder binder, object[] index, CultureInfo culture)
    parameters:
    - id: obj
      type: System.Object
    - id: invokeAttr
      type: BindingFlags
    - id: binder
      type: Binder
    - id: index
      type: System.Object[]
    - id: culture
      type: CultureInfo
    return:
      type: System.Object
    content.vb: Public Overrides Function GetValue(obj As Object, invokeAttr As BindingFlags, binder As Binder, index As Object(), culture As CultureInfo) As Object
  overload: System.Reflection.Emit.PropertyBuilder.GetValue*
  nameWithType.vb: PropertyBuilder.GetValue(Object, BindingFlags, Binder, Object(), CultureInfo)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object, BindingFlags, Binder, System.Object(), CultureInfo)
  name.vb: GetValue(Object, BindingFlags, Binder, Object(), CultureInfo)
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined(Type,System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.IsDefined(Type,System.Boolean)
  id: IsDefined(Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: IsDefined(Type, Boolean)
  nameWithType: PropertyBuilder.IsDefined(Type, Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.IsDefined(Type, System.Boolean)
  type: Method
  source:
    id: IsDefined
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 73
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsDefined(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type: Type
    - id: inherit
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsDefined(attributeType As Type, inherit As Boolean) As Boolean
  overload: System.Reflection.Emit.PropertyBuilder.IsDefined*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  id: SetValue(System.Object,System.Object,BindingFlags,Binder,System.Object[],CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: PropertyBuilder.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object, System.Object, BindingFlags, Binder, System.Object[], CultureInfo)
  type: Method
  source:
    id: SetValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public override void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, object[] index, CultureInfo culture)
    parameters:
    - id: obj
      type: System.Object
    - id: value
      type: System.Object
    - id: invokeAttr
      type: BindingFlags
    - id: binder
      type: Binder
    - id: index
      type: System.Object[]
    - id: culture
      type: CultureInfo
    content.vb: Public Overrides Sub SetValue(obj As Object, value As Object, invokeAttr As BindingFlags, binder As Binder, index As Object(), culture As CultureInfo)
  overload: System.Reflection.Emit.PropertyBuilder.SetValue*
  nameWithType.vb: PropertyBuilder.SetValue(Object, Object, BindingFlags, Binder, Object(), CultureInfo)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object, System.Object, BindingFlags, Binder, System.Object(), CultureInfo)
  name.vb: SetValue(Object, Object, BindingFlags, Binder, Object(), CultureInfo)
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  id: SetGetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: SetGetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetGetMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  type: Method
  source:
    id: SetGetMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 85
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetGetMethod(MethodBuilder mdBuilder)
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
    content.vb: Public Sub SetGetMethod(mdBuilder As MethodBuilder)
  overload: System.Reflection.Emit.PropertyBuilder.SetGetMethod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  id: SetSetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  - vb
  name: SetSetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetSetMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  type: Method
  source:
    id: SetSetMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Reflection.Emit\WORKINPROGRESS\PropertyBuilder.cs
    startLine: 91
  assemblies:
  - OpenSilver
  namespace: System.Reflection.Emit
  syntax:
    content: public void SetSetMethod(MethodBuilder mdBuilder)
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
    content.vb: Public Sub SetSetMethod(mdBuilder As MethodBuilder)
  overload: System.Reflection.Emit.PropertyBuilder.SetSetMethod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Reflection.Emit.PropertyBuilder.Attributes*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.Attributes
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: System.Reflection.Emit.PropertyBuilder.Attributes
- uid: PropertyAttributes
  isExternal: true
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: PropertyAttributes
- uid: System.Reflection.Emit.PropertyBuilder.CanRead*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.CanRead
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: System.Reflection.Emit.PropertyBuilder.CanRead
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.CanWrite
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: System.Reflection.Emit.PropertyBuilder.CanWrite
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.PropertyType
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: System.Reflection.Emit.PropertyBuilder.PropertyType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.DeclaringType
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: System.Reflection.Emit.PropertyBuilder.DeclaringType
- uid: System.Reflection.Emit.PropertyBuilder.Name*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.Name
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: System.Reflection.Emit.PropertyBuilder.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.ReflectedType
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: System.Reflection.Emit.PropertyBuilder.ReflectedType
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.GetAccessors
  name: GetAccessors
  nameWithType: PropertyBuilder.GetAccessors
  fullName: System.Reflection.Emit.PropertyBuilder.GetAccessors
- uid: MethodInfo[]
  isExternal: true
  name: MethodInfo[]
  nameWithType: MethodInfo[]
  fullName: MethodInfo[]
  nameWithType.vb: MethodInfo()
  fullName.vb: MethodInfo()
  name.vb: MethodInfo()
  spec.csharp:
  - uid: MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes
  name: GetCustomAttributes
  nameWithType: PropertyBuilder.GetCustomAttributes
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.GetGetMethod
  name: GetGetMethod
  nameWithType: PropertyBuilder.GetGetMethod
  fullName: System.Reflection.Emit.PropertyBuilder.GetGetMethod
- uid: MethodInfo
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: MethodInfo
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  name: GetIndexParameters
  nameWithType: PropertyBuilder.GetIndexParameters
  fullName: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
- uid: ParameterInfo[]
  isExternal: true
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullName.vb: ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.GetSetMethod
  name: GetSetMethod
  nameWithType: PropertyBuilder.GetSetMethod
  fullName: System.Reflection.Emit.PropertyBuilder.GetSetMethod
- uid: System.Reflection.Emit.PropertyBuilder.GetValue*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.GetValue
  name: GetValue
  nameWithType: PropertyBuilder.GetValue
  fullName: System.Reflection.Emit.PropertyBuilder.GetValue
- uid: BindingFlags
  isExternal: true
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: BindingFlags
- uid: Binder
  isExternal: true
  name: Binder
  nameWithType: Binder
  fullName: Binder
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.IsDefined
  name: IsDefined
  nameWithType: PropertyBuilder.IsDefined
  fullName: System.Reflection.Emit.PropertyBuilder.IsDefined
- uid: System.Reflection.Emit.PropertyBuilder.SetValue*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.SetValue
  name: SetValue
  nameWithType: PropertyBuilder.SetValue
  fullName: System.Reflection.Emit.PropertyBuilder.SetValue
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.SetGetMethod
  name: SetGetMethod
  nameWithType: PropertyBuilder.SetGetMethod
  fullName: System.Reflection.Emit.PropertyBuilder.SetGetMethod
- uid: System.Reflection.Emit.MethodBuilder
  commentId: T:System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod*
  commentId: Overload:System.Reflection.Emit.PropertyBuilder.SetSetMethod
  name: SetSetMethod
  nameWithType: PropertyBuilder.SetSetMethod
  fullName: System.Reflection.Emit.PropertyBuilder.SetSetMethod
