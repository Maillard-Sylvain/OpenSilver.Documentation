### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  commentId: T:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  id: CSHTML5_ClientBase`1.WebMethodsCaller
  parent: System.ServiceModel
  children:
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor(System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},Action{System.String},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},Action{System.String},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,System.String,IDictionary{System.String,System.Object},Action{System.String},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod(System.String,Type,Type,IReadOnlyList{Type},System.String,System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod(System.String,Type,Type,System.String,System.String)
  - System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod``1(System.String,Type,System.String,System.String)
  langs:
  - csharp
  - vb
  name: CSHTML5_ClientBase<TChannel>.WebMethodsCaller
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller
  type: Class
  source:
    id: WebMethodsCaller
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 485
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nProvides an API to call web methods defined in a WebService\n"
  example: []
  syntax:
    content: 'public class WebMethodsCaller : object'
    content.vb: >-
      Public Class WebMethodsCaller
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller
  name.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor(System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: WebMethodsCaller(String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.WebMethodsCaller(String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.WebMethodsCaller(System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 495
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nConstructor for the WebMethodsCaller&apos;s class\n"
  example: []
  syntax:
    content: public WebMethodsCaller(string addressOfService)
    parameters:
    - id: addressOfService
      type: System.String
      description: The address of the WebService
    content.vb: Public Sub New(addressOfService As String)
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.WebMethodsCaller(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.WebMethodsCaller(System.String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},Action{System.String},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},Action{System.String},System.String)
  id: BeginCallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},Action{System.String},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod(String, Type, Type, IDictionary<String, Object>, Action<String>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod(String, Type, Type, IDictionary<String, Object>, Action<String>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod(System.String, Type, Type, IDictionary<System.String, System.Object>, Action<System.String>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 500
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public void BeginCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IDictionary<string, object> originalRequestObject, Action<string> callback, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: Type
    - id: methodReturnType
      type: Type
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
    - id: callback
      type: Action{System.String}
    - id: soapVersion
      type: System.String
    content.vb: Public Sub BeginCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, originalRequestObject As IDictionary(Of String, Object), callback As Action(Of String), soapVersion As String)
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod(String, Type, Type, IDictionary(Of String, Object), Action(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod(System.String, Type, Type, IDictionary(Of System.String, System.Object), Action(Of System.String), System.String)
  name.vb: BeginCallWebMethod(String, Type, Type, IDictionary(Of String, Object), Action(Of String), String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},Action{System.String},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},Action{System.String},System.String)
  id: BeginCallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},Action{System.String},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod(String, Type, Type, IEnumerable<MessageHeader>, IDictionary<String, Object>, Action<String>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod(String, Type, Type, IEnumerable<MessageHeader>, IDictionary<String, Object>, Action<String>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod(System.String, Type, Type, IEnumerable<MessageHeader>, IDictionary<System.String, System.Object>, Action<System.String>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 513
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public void BeginCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> originalRequestObject, Action<string> callback, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: Type
    - id: methodReturnType
      type: Type
    - id: outgoingMessageHeaders
      type: IEnumerable{MessageHeader}
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
    - id: callback
      type: Action{System.String}
    - id: soapVersion
      type: System.String
    content.vb: Public Sub BeginCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, outgoingMessageHeaders As IEnumerable(Of MessageHeader), originalRequestObject As IDictionary(Of String, Object), callback As Action(Of String), soapVersion As String)
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod(String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), Action(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod(System.String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of System.String, System.Object), Action(Of System.String), System.String)
  name.vb: BeginCallWebMethod(String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), Action(Of String), String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,System.String,IDictionary{System.String,System.Object},Action{System.String},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod(System.String,Type,Type,System.String,IDictionary{System.String,System.Object},Action{System.String},System.String)
  id: BeginCallWebMethod(System.String,Type,Type,System.String,IDictionary{System.String,System.Object},Action{System.String},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod(String, Type, Type, String, IDictionary<String, Object>, Action<String>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod(String, Type, Type, String, IDictionary<String, Object>, Action<String>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod(System.String, Type, Type, System.String, IDictionary<System.String, System.Object>, Action<System.String>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 528
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public void BeginCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, string messageHeaders, IDictionary<string, object> originalRequestObject, Action<string> callback, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: Type
    - id: methodReturnType
      type: Type
    - id: messageHeaders
      type: System.String
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
    - id: callback
      type: Action{System.String}
    - id: soapVersion
      type: System.String
    content.vb: Public Sub BeginCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, messageHeaders As String, originalRequestObject As IDictionary(Of String, Object), callback As Action(Of String), soapVersion As String)
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod(String, Type, Type, String, IDictionary(Of String, Object), Action(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod(System.String, Type, Type, System.String, IDictionary(Of System.String, System.Object), Action(Of System.String), System.String)
  name.vb: BeginCallWebMethod(String, Type, Type, String, IDictionary(Of String, Object), Action(Of String), String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod(System.String,Type,Type,System.String,System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod(System.String,Type,Type,System.String,System.String)
  id: EndCallWebMethod(System.String,Type,Type,System.String,System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod(String, Type, Type, String, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod(String, Type, Type, String, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod(System.String, Type, Type, System.String, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 572
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public object EndCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, string xmlReturnedFromTheServer, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: Type
    - id: methodReturnType
      type: Type
    - id: xmlReturnedFromTheServer
      type: System.String
    - id: soapVersion
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function EndCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, xmlReturnedFromTheServer As String, soapVersion As String) As Object
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod(String, Type, Type, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod(System.String, Type, Type, System.String, System.String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod(System.String,Type,Type,IReadOnlyList{Type},System.String,System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod(System.String,Type,Type,IReadOnlyList{Type},System.String,System.String)
  id: EndCallWebMethod(System.String,Type,Type,IReadOnlyList{Type},System.String,System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod(String, Type, Type, IReadOnlyList<Type>, String, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod(String, Type, Type, IReadOnlyList<Type>, String, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod(System.String, Type, Type, IReadOnlyList<Type>, System.String, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 587
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public object EndCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IReadOnlyList<Type> knownTypes, string xmlReturnedFromTheServer, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: Type
    - id: methodReturnType
      type: Type
    - id: knownTypes
      type: IReadOnlyList{Type}
    - id: xmlReturnedFromTheServer
      type: System.String
    - id: soapVersion
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function EndCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, knownTypes As IReadOnlyList(Of Type), xmlReturnedFromTheServer As String, soapVersion As String) As Object
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod(String, Type, Type, IReadOnlyList(Of Type), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod(System.String, Type, Type, IReadOnlyList(Of Type), System.String, System.String)
  name.vb: EndCallWebMethod(String, Type, Type, IReadOnlyList(Of Type), String, String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod``1(System.String,Type,System.String,System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod``1(System.String,Type,System.String,System.String)
  id: EndCallWebMethod``1(System.String,Type,System.String,System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod<RETURN_TYPE>(String, Type, String, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod<RETURN_TYPE>(String, Type, String, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod<RETURN_TYPE>(System.String, Type, System.String, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 615
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public RETURN_TYPE EndCallWebMethod<RETURN_TYPE>(string webMethodName, Type interfaceType, string xmlReturnedFromTheServer, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: Type
    - id: xmlReturnedFromTheServer
      type: System.String
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    return:
      type: '{RETURN_TYPE}'
    content.vb: Public Function EndCallWebMethod(Of RETURN_TYPE)(webMethodName As String, interfaceType As Type, xmlReturnedFromTheServer As String, soapVersion As String) As RETURN_TYPE
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod(Of RETURN_TYPE)(String, Type, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod(Of RETURN_TYPE)(System.String, Type, System.String, System.String)
  name.vb: EndCallWebMethod(Of RETURN_TYPE)(String, Type, String, String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync``1(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync<T>(String, Type, Type, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethodAsync<T>(String, Type, Type, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethodAsync<T>(System.String, Type, Type, IEnumerable<MessageHeader>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 740
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nAsynchronously calls a WebMethod.\n"
  example: []
  syntax:
    content: public Task<(T, MessageHeaders)> CallWebMethodAsync<T>(string webMethodName, Type interfaceType, Type methodReturnType, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> originalRequestObject, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
      description: The name of the WebMethod
    - id: interfaceType
      type: Type
      description: The Type of the interface
    - id: methodReturnType
      type: Type
      description: The return Type of the method
    - id: outgoingMessageHeaders
      type: IEnumerable{MessageHeader}
      description: The outgoing message headers
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
      description: The additional arguments of the method
    - id: soapVersion
      type: System.String
      description: The SOAP Version of the request
    typeParameters:
    - id: T
      description: The return type of the WebMethod
    return:
      type: Task{System.ValueTuple{{T},MessageHeaders}}
      description: The result of the call of the method and the incoming message headers.
    content.vb: Public Function CallWebMethodAsync(Of T)(webMethodName As String, interfaceType As Type, methodReturnType As Type, outgoingMessageHeaders As IEnumerable(Of MessageHeader), originalRequestObject As IDictionary(Of String, Object), soapVersion As String) As Task(Of(T, MessageHeaders)(Of T , MessageHeaders))
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethodAsync(Of T)(String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethodAsync(Of T)(System.String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync(Of T)(String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync``1(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync<T>(String, Type, Type, IDictionary<String, Object>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethodAsync<T>(String, Type, Type, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethodAsync<T>(System.String, Type, Type, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 804
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nAsynchronously calls a WebMethod.\n"
  example: []
  syntax:
    content: public Task<T> CallWebMethodAsync<T>(string webMethodName, Type interfaceType, Type methodReturnType, IDictionary<string, object> originalRequestObject, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
      description: The name of the WebMethod
    - id: interfaceType
      type: Type
      description: The Type of the interface
    - id: methodReturnType
      type: Type
      description: The return Type of the method
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
      description: The additional arguments of the method
    - id: soapVersion
      type: System.String
      description: The SOAP Version of the request
    typeParameters:
    - id: T
      description: The return type of the WebMethod
    return:
      type: Task{{T}}
      description: The result of the call of the method.
    content.vb: Public Function CallWebMethodAsync(Of T)(webMethodName As String, interfaceType As Type, methodReturnType As Type, originalRequestObject As IDictionary(Of String, Object), soapVersion As String) As Task(Of T)
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethodAsync(Of T)(String, Type, Type, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethodAsync(Of T)(System.String, Type, Type, IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync(Of T)(String, Type, Type, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod(System.String,Type,Type,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod(String, Type, Type, IDictionary<String, Object>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethod(String, Type, Type, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethod(System.String, Type, Type, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 864
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nCalls a WebMethod\n"
  example: []
  syntax:
    content: public object CallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IDictionary<string, object> originalRequestObject, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
      description: The name of the Method
    - id: interfaceType
      type: Type
      description: The Type of the interface
    - id: methodReturnType
      type: Type
      description: The return Type of the method
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
      description: The additional arguments of the method
    - id: soapVersion
      type: System.String
      description: The SOAP Version of the request
    return:
      type: System.Object
      description: The result of the call of the method.
    content.vb: Public Function CallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, originalRequestObject As IDictionary(Of String, Object), soapVersion As String) As Object
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethod(String, Type, Type, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethod(System.String, Type, Type, IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod(String, Type, Type, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod(System.String,Type,Type,IEnumerable{MessageHeader},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod(String, Type, Type, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethod(String, Type, Type, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethod(System.String, Type, Type, IEnumerable<MessageHeader>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 957
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nCalls a WebMethod\n"
  example: []
  syntax:
    content: public (object, MessageHeaders) CallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> originalRequestObject, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
      description: The name of the Method
    - id: interfaceType
      type: Type
      description: The Type of the interface
    - id: methodReturnType
      type: Type
      description: The return Type of the method
    - id: outgoingMessageHeaders
      type: IEnumerable{MessageHeader}
      description: The outgoing message headers
    - id: originalRequestObject
      type: IDictionary{System.String,System.Object}
      description: The additional arguments of the method
    - id: soapVersion
      type: System.String
      description: The SOAP Version of the request
    return:
      type: System.ValueTuple{System.Object,MessageHeaders}
      description: The result of the call of the method and the incoming message headers.
    content.vb: Public Function CallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, outgoingMessageHeaders As IEnumerable(Of MessageHeader), originalRequestObject As IDictionary(Of String, Object), soapVersion As String) As(Object, MessageHeaders)(Of Object , MessageHeaders)
  overload: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod*
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethod(String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethod(System.String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod(String, Type, Type, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor*
  commentId: Overload:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor
  name: WebMethodsCaller
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.WebMethodsCaller
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.WebMethodsCaller
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.WebMethodsCaller
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.WebMethodsCaller
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod*
  commentId: Overload:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.BeginCallWebMethod
  name: BeginCallWebMethod
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.BeginCallWebMethod
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.BeginCallWebMethod
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: IDictionary{System.String,System.Object}
  commentId: '!:IDictionary{System.String,System.Object}'
  definition: IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{System.String}
  commentId: '!:Action{System.String}'
  definition: Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{MessageHeader}
  commentId: '!:IEnumerable{MessageHeader}'
  definition: IEnumerable`1
  name: IEnumerable<MessageHeader>
  nameWithType: IEnumerable<MessageHeader>
  fullName: IEnumerable<MessageHeader>
  nameWithType.vb: IEnumerable(Of MessageHeader)
  fullName.vb: IEnumerable(Of MessageHeader)
  name.vb: IEnumerable(Of MessageHeader)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MessageHeader
    name: MessageHeader
    nameWithType: MessageHeader
    fullName: MessageHeader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MessageHeader
    name: MessageHeader
    nameWithType: MessageHeader
    fullName: MessageHeader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod*
  commentId: Overload:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.EndCallWebMethod
  name: EndCallWebMethod
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.EndCallWebMethod
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.EndCallWebMethod
- uid: IReadOnlyList{Type}
  commentId: '!:IReadOnlyList{Type}'
  definition: IReadOnlyList`1
  name: IReadOnlyList<Type>
  nameWithType: IReadOnlyList<Type>
  fullName: IReadOnlyList<Type>
  nameWithType.vb: IReadOnlyList(Of Type)
  fullName.vb: IReadOnlyList(Of Type)
  name.vb: IReadOnlyList(Of Type)
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<>
  nameWithType: IReadOnlyList<>
  fullName: IReadOnlyList<>
  nameWithType.vb: IReadOnlyList(Of )
  fullName.vb: IReadOnlyList(Of )
  name.vb: IReadOnlyList(Of )
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: '{RETURN_TYPE}'
  commentId: '!:RETURN_TYPE'
  definition: RETURN_TYPE
  name: RETURN_TYPE
  nameWithType: RETURN_TYPE
  fullName: RETURN_TYPE
- uid: RETURN_TYPE
  name: RETURN_TYPE
  nameWithType: RETURN_TYPE
  fullName: RETURN_TYPE
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync*
  commentId: Overload:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync
  name: CallWebMethodAsync
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethodAsync
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethodAsync
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethodAsync
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethodAsync
- uid: Task{System.ValueTuple{{T},MessageHeaders}}
  commentId: '!:Task{System.ValueTuple{``0,MessageHeaders}}'
  definition: Task`1
  name: Task<(, )<T, MessageHeaders>>
  nameWithType: Task<(, )<T, MessageHeaders>>
  fullName: Task<System.ValueTuple<T, MessageHeaders>>
  nameWithType.vb: Task(Of (, )(Of T, MessageHeaders))
  fullName.vb: Task(Of System.ValueTuple(Of T, MessageHeaders))
  name.vb: Task(Of (, )(Of T, MessageHeaders))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: MessageHeaders
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: MessageHeaders
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{{T}}
  commentId: '!:Task{``0}'
  definition: Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod*
  commentId: Overload:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod
  name: CallWebMethod
  nameWithType: CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethod
  fullName: System.ServiceModel.CSHTML5_ClientBase<TChannel>.WebMethodsCaller.CallWebMethod
  nameWithType.vb: CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethod
  fullName.vb: System.ServiceModel.CSHTML5_ClientBase(Of TChannel).WebMethodsCaller.CallWebMethod
- uid: System.ValueTuple{System.Object,MessageHeaders}
  commentId: '!:System.ValueTuple{System.Object,MessageHeaders}'
  definition: System.ValueTuple`2
  name: (, )<Object, MessageHeaders>
  nameWithType: (, )<Object, MessageHeaders>
  fullName: System.ValueTuple<System.Object, MessageHeaders>
  nameWithType.vb: (, )(Of Object, MessageHeaders)
  fullName.vb: System.ValueTuple(Of System.Object, MessageHeaders)
  name.vb: (, )(Of Object, MessageHeaders)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: MessageHeaders
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: MessageHeaders
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`2
  isExternal: true
  name: (, )<, >
  nameWithType: (, )<, >
  fullName: System.ValueTuple<, >
  nameWithType.vb: (, )(Of , )
  fullName.vb: System.ValueTuple(Of , )
  name.vb: (, )(Of , )
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
