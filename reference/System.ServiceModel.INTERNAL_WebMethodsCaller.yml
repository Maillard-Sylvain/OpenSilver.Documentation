### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller
  commentId: T:System.ServiceModel.INTERNAL_WebMethodsCaller
  id: INTERNAL_WebMethodsCaller
  parent: System.ServiceModel
  children:
  - System.ServiceModel.INTERNAL_WebMethodsCaller.AsyncStateParameterName
  - System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``1(System.String,System.String,Type,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallbackParameterName
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``1(System.String,System.String,Type,IReadOnlyList{Type},IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.INTERNAL_WebMethodsCaller.ResultParameterName
  langs:
  - csharp
  - vb
  name: INTERNAL_WebMethodsCaller
  nameWithType: INTERNAL_WebMethodsCaller
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller
  type: Class
  source:
    id: INTERNAL_WebMethodsCaller
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 23
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: 'public static class INTERNAL_WebMethodsCaller : object'
    content.vb: >-
      Public Module INTERNAL_WebMethodsCaller
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallbackParameterName
  commentId: F:System.ServiceModel.INTERNAL_WebMethodsCaller.CallbackParameterName
  id: CallbackParameterName
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallbackParameterName
  nameWithType: INTERNAL_WebMethodsCaller.CallbackParameterName
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallbackParameterName
  type: Field
  source:
    id: CallbackParameterName
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nKey for the AsyncCallback paramater that must be passed as\npart of the request parameters IDictionary for asynchronous \nrequest with Begin/End pattern.\n"
  example: []
  syntax:
    content: public const string CallbackParameterName = null
    return:
      type: System.String
    content.vb: Public Const CallbackParameterName As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.AsyncStateParameterName
  commentId: F:System.ServiceModel.INTERNAL_WebMethodsCaller.AsyncStateParameterName
  id: AsyncStateParameterName
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: AsyncStateParameterName
  nameWithType: INTERNAL_WebMethodsCaller.AsyncStateParameterName
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.AsyncStateParameterName
  type: Field
  source:
    id: AsyncStateParameterName
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nKey for the asyncState paramater that must be passed as\npart of the request parameters IDictionary for asynchronous \nrequest with Begin/End pattern.\n"
  example: []
  syntax:
    content: public const string AsyncStateParameterName = null
    return:
      type: System.String
    content.vb: Public Const AsyncStateParameterName As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.ResultParameterName
  commentId: F:System.ServiceModel.INTERNAL_WebMethodsCaller.ResultParameterName
  id: ResultParameterName
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: ResultParameterName
  nameWithType: INTERNAL_WebMethodsCaller.ResultParameterName
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.ResultParameterName
  type: Field
  source:
    id: ResultParameterName
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 44
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  summary: "\nKey for the IAsyncResult paramater that must be passed as\npart of the request parameters IDictionary for asynchronous \nrequest with Begin/End pattern.\n"
  example: []
  syntax:
    content: public const string ResultParameterName = null
    return:
      type: System.String
    content.vb: Public Const ResultParameterName As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 50
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static Task<RETURN_TYPE> CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    - id: INTERFACE_TYPE
    return:
      type: Task{{RETURN_TYPE}}
    content.vb: Public Shared Function CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String) As Task(Of RETURN_TYPE)
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(System.String, System.String, IEnumerable<System.ServiceModel.Channels.MessageHeader>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 83
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static (RETURN_TYPE, MessageHeaders) CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(string endpointAddress, string webMethodName, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: outgoingMessageHeaders
      type: IEnumerable{System.ServiceModel.Channels.MessageHeader}
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    - id: INTERFACE_TYPE
    return:
      type: System.ValueTuple{{RETURN_TYPE},System.ServiceModel.Channels.MessageHeaders}
    content.vb: Public Shared Function CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, outgoingMessageHeaders As IEnumerable(Of MessageHeader), requestParameters As IDictionary(Of String, Object), soapVersion As String) As(RETURN_TYPE, MessageHeaders)(Of RETURN_TYPE , MessageHeaders)
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(System.String, System.String, IEnumerable(Of System.ServiceModel.Channels.MessageHeader), IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync``2(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(System.String, System.String, IEnumerable<System.ServiceModel.Channels.MessageHeader>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 103
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static Task<(RETURN_TYPE, MessageHeaders)> CallWebMethodAsync<RETURN_TYPE, INTERFACE_TYPE>(string endpointAddress, string webMethodName, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: outgoingMessageHeaders
      type: IEnumerable{System.ServiceModel.Channels.MessageHeader}
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    - id: INTERFACE_TYPE
    return:
      type: Task{System.ValueTuple{{RETURN_TYPE},System.ServiceModel.Channels.MessageHeaders}}
    content.vb: Public Shared Function CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, outgoingMessageHeaders As IEnumerable(Of MessageHeader), requestParameters As IDictionary(Of String, Object), soapVersion As String) As Task(Of(RETURN_TYPE, MessageHeaders)(Of RETURN_TYPE , MessageHeaders))
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE)(System.String, System.String, IEnumerable(Of System.ServiceModel.Channels.MessageHeader), IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 139
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static RETURN_TYPE CallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    - id: INTERFACE_TYPE
    return:
      type: '{RETURN_TYPE}'
    content.vb: Public Shared Function CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String) As RETURN_TYPE
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``1(System.String,System.String,Type,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``1(System.String,System.String,Type,System.String,IDictionary{System.String,System.Object},System.String)
  id: BeginCallWebMethod``1(System.String,System.String,Type,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod<INTERFACE_TYPE>(String, String, Type, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.BeginCallWebMethod<INTERFACE_TYPE>(String, String, Type, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod<INTERFACE_TYPE>(System.String, System.String, Type, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 155
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static IAsyncResult BeginCallWebMethod<INTERFACE_TYPE>(string endpointAddress, string webMethodName, Type methodReturnType, string messageHeaders, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: methodReturnType
      type: Type
    - id: messageHeaders
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: IAsyncResult
    content.vb: Public Shared Function BeginCallWebMethod(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, methodReturnType As Type, messageHeaders As String, requestParameters As IDictionary(Of String, Object), soapVersion As String) As IAsyncResult
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.BeginCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod(Of INTERFACE_TYPE)(System.String, System.String, Type, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: BeginCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  id: BeginCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod<INTERFACE_TYPE>(String, String, Type, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.BeginCallWebMethod<INTERFACE_TYPE>(String, String, Type, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod<INTERFACE_TYPE>(System.String, System.String, Type, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 207
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static IAsyncResult BeginCallWebMethod<INTERFACE_TYPE>(string endpointAddress, string webMethodName, Type methodReturnType, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: methodReturnType
      type: Type
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: IAsyncResult
    content.vb: Public Shared Function BeginCallWebMethod(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, methodReturnType As Type, requestParameters As IDictionary(Of String, Object), soapVersion As String) As IAsyncResult
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.BeginCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod(Of INTERFACE_TYPE)(System.String, System.String, Type, IDictionary(Of System.String, System.Object), System.String)
  name.vb: BeginCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: BeginCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.BeginCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 223
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static IAsyncResult BeginCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    - id: INTERFACE_TYPE
    return:
      type: IAsyncResult
    content.vb: Public Shared Function BeginCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String) As IAsyncResult
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.BeginCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: BeginCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``1(System.String,System.String,Type,IReadOnlyList{Type},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``1(System.String,System.String,Type,IReadOnlyList{Type},IDictionary{System.String,System.Object},System.String)
  id: EndCallWebMethod``1(System.String,System.String,Type,IReadOnlyList{Type},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod<INTERFACE_TYPE>(String, String, Type, IReadOnlyList<Type>, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.EndCallWebMethod<INTERFACE_TYPE>(String, String, Type, IReadOnlyList<Type>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod<INTERFACE_TYPE>(System.String, System.String, Type, IReadOnlyList<Type>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 237
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static object EndCallWebMethod<INTERFACE_TYPE>(string endpointAddress, string webMethodName, Type methodReturnType, IReadOnlyList<Type> knownTypes, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: methodReturnType
      type: Type
    - id: knownTypes
      type: IReadOnlyList{Type}
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: System.Object
    content.vb: Public Shared Function EndCallWebMethod(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, methodReturnType As Type, knownTypes As IReadOnlyList(Of Type), requestParameters As IDictionary(Of String, Object), soapVersion As String) As Object
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.EndCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, IReadOnlyList(Of Type), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod(Of INTERFACE_TYPE)(System.String, System.String, Type, IReadOnlyList(Of Type), IDictionary(Of System.String, System.Object), System.String)
  name.vb: EndCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, IReadOnlyList(Of Type), IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  id: EndCallWebMethod``1(System.String,System.String,Type,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod<INTERFACE_TYPE>(String, String, Type, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.EndCallWebMethod<INTERFACE_TYPE>(String, String, Type, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod<INTERFACE_TYPE>(System.String, System.String, Type, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 264
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static object EndCallWebMethod<INTERFACE_TYPE>(string endpointAddress, string webMethodName, Type methodReturnType, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: methodReturnType
      type: Type
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: System.Object
    content.vb: Public Shared Function EndCallWebMethod(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, methodReturnType As Type, requestParameters As IDictionary(Of String, Object), soapVersion As String) As Object
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.EndCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod(Of INTERFACE_TYPE)(System.String, System.String, Type, IDictionary(Of System.String, System.Object), System.String)
  name.vb: EndCallWebMethod(Of INTERFACE_TYPE)(String, String, Type, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: EndCallWebMethod``2(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.EndCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 279
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static RETURN_TYPE EndCallWebMethod<RETURN_TYPE, INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    - id: INTERFACE_TYPE
    return:
      type: '{RETURN_TYPE}'
    content.vb: Public Shared Function EndCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String) As RETURN_TYPE
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: INTERNAL_WebMethodsCaller.EndCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: EndCallWebMethod(Of RETURN_TYPE, INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync_WithoutReturnValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 297
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static Task CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: Task
    content.vb: Public Shared Function CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String) As Task
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(System.String, System.String, IEnumerable<System.ServiceModel.Channels.MessageHeader>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod_WithoutReturnValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 312
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static (object, MessageHeaders) CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(string endpointAddress, string webMethodName, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: outgoingMessageHeaders
      type: IEnumerable{System.ServiceModel.Channels.MessageHeader}
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: System.ValueTuple{System.Object,System.ServiceModel.Channels.MessageHeaders}
    content.vb: Public Shared Function CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, outgoingMessageHeaders As IEnumerable(Of MessageHeader), requestParameters As IDictionary(Of String, Object), soapVersion As String) As(Object, MessageHeaders)(Of Object , MessageHeaders)
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(System.String, System.String, IEnumerable(Of System.ServiceModel.Channels.MessageHeader), IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync_WithoutReturnValue``1(System.String,System.String,IEnumerable{System.ServiceModel.Channels.MessageHeader},IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(String, String, IEnumerable<MessageHeader>, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(System.String, System.String, IEnumerable<System.ServiceModel.Channels.MessageHeader>, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync_WithoutReturnValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 327
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static Task<(object, MessageHeaders)> CallWebMethodAsync_WithoutReturnValue<INTERFACE_TYPE>(string endpointAddress, string webMethodName, IEnumerable<MessageHeader> outgoingMessageHeaders, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: outgoingMessageHeaders
      type: IEnumerable{System.ServiceModel.Channels.MessageHeader}
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    return:
      type: Task{System.ValueTuple{System.Object,System.ServiceModel.Channels.MessageHeaders}}
    content.vb: Public Shared Function CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, outgoingMessageHeaders As IEnumerable(Of MessageHeader), requestParameters As IDictionary(Of String, Object), soapVersion As String) As Task(Of(Object, MessageHeaders)(Of Object , MessageHeaders))
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE)(System.String, System.String, IEnumerable(Of System.ServiceModel.Channels.MessageHeader), IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IEnumerable(Of MessageHeader), IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod_WithoutReturnValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 344
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static void CallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    content.vb: Public Shared Sub CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String)
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue*
  nameWithType.vb: INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  id: EndCallWebMethod_WithoutReturnValue``1(System.String,System.String,IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.INTERNAL_WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  nameWithType: INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(String, String, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(System.String, System.String, IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: EndCallWebMethod_WithoutReturnValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\INTERNAL_WebMethodsCaller.cs
    startLine: 357
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: >-
      public static void EndCallWebMethod_WithoutReturnValue<INTERFACE_TYPE>(string endpointAddress, string webMethodName, IDictionary<string, object> requestParameters, string soapVersion)
          where INTERFACE_TYPE : class
    parameters:
    - id: endpointAddress
      type: System.String
    - id: webMethodName
      type: System.String
    - id: requestParameters
      type: IDictionary{System.String,System.Object}
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: INTERFACE_TYPE
    content.vb: Public Shared Sub EndCallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE As Class)(endpointAddress As String, webMethodName As String, requestParameters As IDictionary(Of String, Object), soapVersion As String)
  overload: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue*
  nameWithType.vb: INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(System.String, System.String, IDictionary(Of System.String, System.Object), System.String)
  name.vb: EndCallWebMethod_WithoutReturnValue(Of INTERFACE_TYPE)(String, String, IDictionary(Of String, Object), String)
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync
  name: CallWebMethodAsync
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethodAsync
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync
- uid: IDictionary{System.String,System.Object}
  commentId: '!:IDictionary{System.String,System.Object}'
  definition: IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{{RETURN_TYPE}}
  commentId: '!:Task{``0}'
  definition: Task`1
  name: Task<RETURN_TYPE>
  nameWithType: Task<RETURN_TYPE>
  fullName: Task<RETURN_TYPE>
  nameWithType.vb: Task(Of RETURN_TYPE)
  fullName.vb: Task(Of RETURN_TYPE)
  name.vb: Task(Of RETURN_TYPE)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RETURN_TYPE
    nameWithType: RETURN_TYPE
    fullName: RETURN_TYPE
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RETURN_TYPE
    nameWithType: RETURN_TYPE
    fullName: RETURN_TYPE
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod
  name: CallWebMethod
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethod
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod
- uid: IEnumerable{System.ServiceModel.Channels.MessageHeader}
  commentId: '!:IEnumerable{System.ServiceModel.Channels.MessageHeader}'
  definition: IEnumerable`1
  name: IEnumerable<MessageHeader>
  nameWithType: IEnumerable<MessageHeader>
  fullName: IEnumerable<System.ServiceModel.Channels.MessageHeader>
  nameWithType.vb: IEnumerable(Of MessageHeader)
  fullName.vb: IEnumerable(Of System.ServiceModel.Channels.MessageHeader)
  name.vb: IEnumerable(Of MessageHeader)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Channels.MessageHeader
    name: MessageHeader
    nameWithType: MessageHeader
    fullName: System.ServiceModel.Channels.MessageHeader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Channels.MessageHeader
    name: MessageHeader
    nameWithType: MessageHeader
    fullName: System.ServiceModel.Channels.MessageHeader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple{{RETURN_TYPE},System.ServiceModel.Channels.MessageHeaders}
  commentId: '!:System.ValueTuple{``0,System.ServiceModel.Channels.MessageHeaders}'
  definition: System.ValueTuple`2
  name: (, )<RETURN_TYPE, MessageHeaders>
  nameWithType: (, )<RETURN_TYPE, MessageHeaders>
  fullName: System.ValueTuple<RETURN_TYPE, System.ServiceModel.Channels.MessageHeaders>
  nameWithType.vb: (, )(Of RETURN_TYPE, MessageHeaders)
  fullName.vb: System.ValueTuple(Of RETURN_TYPE, System.ServiceModel.Channels.MessageHeaders)
  name.vb: (, )(Of RETURN_TYPE, MessageHeaders)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RETURN_TYPE
    nameWithType: RETURN_TYPE
    fullName: RETURN_TYPE
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RETURN_TYPE
    nameWithType: RETURN_TYPE
    fullName: RETURN_TYPE
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`2
  isExternal: true
  name: (, )<, >
  nameWithType: (, )<, >
  fullName: System.ValueTuple<, >
  nameWithType.vb: (, )(Of , )
  fullName.vb: System.ValueTuple(Of , )
  name.vb: (, )(Of , )
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.ValueTuple{{RETURN_TYPE},System.ServiceModel.Channels.MessageHeaders}}
  commentId: '!:Task{System.ValueTuple{``0,System.ServiceModel.Channels.MessageHeaders}}'
  definition: Task`1
  name: Task<(, )<RETURN_TYPE, MessageHeaders>>
  nameWithType: Task<(, )<RETURN_TYPE, MessageHeaders>>
  fullName: Task<System.ValueTuple<RETURN_TYPE, System.ServiceModel.Channels.MessageHeaders>>
  nameWithType.vb: Task(Of (, )(Of RETURN_TYPE, MessageHeaders))
  fullName.vb: Task(Of System.ValueTuple(Of RETURN_TYPE, System.ServiceModel.Channels.MessageHeaders))
  name.vb: Task(Of (, )(Of RETURN_TYPE, MessageHeaders))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RETURN_TYPE
    nameWithType: RETURN_TYPE
    fullName: RETURN_TYPE
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RETURN_TYPE
    nameWithType: RETURN_TYPE
    fullName: RETURN_TYPE
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{RETURN_TYPE}'
  commentId: '!:RETURN_TYPE'
  definition: RETURN_TYPE
  name: RETURN_TYPE
  nameWithType: RETURN_TYPE
  fullName: RETURN_TYPE
- uid: RETURN_TYPE
  name: RETURN_TYPE
  nameWithType: RETURN_TYPE
  fullName: RETURN_TYPE
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod
  name: BeginCallWebMethod
  nameWithType: INTERNAL_WebMethodsCaller.BeginCallWebMethod
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.BeginCallWebMethod
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: IAsyncResult
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: IAsyncResult
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod
  name: EndCallWebMethod
  nameWithType: INTERNAL_WebMethodsCaller.EndCallWebMethod
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod
- uid: IReadOnlyList{Type}
  commentId: '!:IReadOnlyList{Type}'
  definition: IReadOnlyList`1
  name: IReadOnlyList<Type>
  nameWithType: IReadOnlyList<Type>
  fullName: IReadOnlyList<Type>
  nameWithType.vb: IReadOnlyList(Of Type)
  fullName.vb: IReadOnlyList(Of Type)
  name.vb: IReadOnlyList(Of Type)
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<>
  nameWithType: IReadOnlyList<>
  fullName: IReadOnlyList<>
  nameWithType.vb: IReadOnlyList(Of )
  fullName.vb: IReadOnlyList(Of )
  name.vb: IReadOnlyList(Of )
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue
  name: CallWebMethodAsync_WithoutReturnValue
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethodAsync_WithoutReturnValue
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue
  name: CallWebMethod_WithoutReturnValue
  nameWithType: INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.CallWebMethod_WithoutReturnValue
- uid: System.ValueTuple{System.Object,System.ServiceModel.Channels.MessageHeaders}
  commentId: '!:System.ValueTuple{System.Object,System.ServiceModel.Channels.MessageHeaders}'
  definition: System.ValueTuple`2
  name: (, )<Object, MessageHeaders>
  nameWithType: (, )<Object, MessageHeaders>
  fullName: System.ValueTuple<System.Object, System.ServiceModel.Channels.MessageHeaders>
  nameWithType.vb: (, )(Of Object, MessageHeaders)
  fullName.vb: System.ValueTuple(Of System.Object, System.ServiceModel.Channels.MessageHeaders)
  name.vb: (, )(Of Object, MessageHeaders)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.ValueTuple{System.Object,System.ServiceModel.Channels.MessageHeaders}}
  commentId: '!:Task{System.ValueTuple{System.Object,System.ServiceModel.Channels.MessageHeaders}}'
  definition: Task`1
  name: Task<(, )<Object, MessageHeaders>>
  nameWithType: Task<(, )<Object, MessageHeaders>>
  fullName: Task<System.ValueTuple<System.Object, System.ServiceModel.Channels.MessageHeaders>>
  nameWithType.vb: Task(Of (, )(Of Object, MessageHeaders))
  fullName.vb: Task(Of System.ValueTuple(Of System.Object, System.ServiceModel.Channels.MessageHeaders))
  name.vb: Task(Of (, )(Of Object, MessageHeaders))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: (, )
    nameWithType: (, )
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.MessageHeaders
    name: MessageHeaders
    nameWithType: MessageHeaders
    fullName: System.ServiceModel.Channels.MessageHeaders
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue*
  commentId: Overload:System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue
  name: EndCallWebMethod_WithoutReturnValue
  nameWithType: INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue
  fullName: System.ServiceModel.INTERNAL_WebMethodsCaller.EndCallWebMethod_WithoutReturnValue
