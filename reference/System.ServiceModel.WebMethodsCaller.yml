### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WebMethodsCaller
  commentId: T:System.ServiceModel.WebMethodsCaller
  id: WebMethodsCaller
  parent: System.ServiceModel
  children:
  - System.ServiceModel.WebMethodsCaller.#ctor(System.String)
  - System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  - System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String,System.Type,System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  - System.ServiceModel.WebMethodsCaller.CallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.WebMethodsCaller.CallWebMethodAsync``1(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  - System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IReadOnlyList{System.Type},System.String,System.String)
  - System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String,System.Type,System.Type,System.String,System.String)
  - System.ServiceModel.WebMethodsCaller.EndCallWebMethod``1(System.String,System.Type,System.String,System.String)
  langs:
  - csharp
  - vb
  name: WebMethodsCaller
  nameWithType: WebMethodsCaller
  fullName: System.ServiceModel.WebMethodsCaller
  type: Class
  source:
    id: WebMethodsCaller
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 485
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  summary: "\nProvides an API to call web methods defined in a WebService\n"
  example: []
  syntax:
    content: public class WebMethodsCaller
    content.vb: Public Class WebMethodsCaller
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.WebMethodsCaller.#ctor(System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: WebMethodsCaller(String)
  nameWithType: WebMethodsCaller.WebMethodsCaller(String)
  fullName: System.ServiceModel.WebMethodsCaller.WebMethodsCaller(System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 495
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  summary: "\nConstructor for the WebMethodsCaller&apos;s class\n"
  example: []
  syntax:
    content: public WebMethodsCaller(string addressOfService)
    parameters:
    - id: addressOfService
      type: System.String
      description: The address of the WebService
    content.vb: Public Sub New(addressOfService As String)
  overload: System.ServiceModel.WebMethodsCaller.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  id: BeginCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod(String, Type, Type, IDictionary<String, Object>, Action<String>, String)
  nameWithType: WebMethodsCaller.BeginCallWebMethod(String, Type, Type, IDictionary<String, Object>, Action<String>, String)
  fullName: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String, System.Type, System.Type, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Action<System.String>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 500
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public void BeginCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IDictionary<string, object> originalRequestObject, Action<string> callback, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: System.Type
    - id: methodReturnType
      type: System.Type
    - id: originalRequestObject
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: callback
      type: System.Action{System.String}
    - id: soapVersion
      type: System.String
    content.vb: Public Sub BeginCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, originalRequestObject As IDictionary(Of String, Object), callback As Action(Of String), soapVersion As String)
  overload: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: WebMethodsCaller.BeginCallWebMethod(String, Type, Type, IDictionary(Of String, Object), Action(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String, System.Type, System.Type, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Action(Of System.String), System.String)
  name.vb: BeginCallWebMethod(String, Type, Type, IDictionary(Of String, Object), Action(Of String), String)
- uid: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String,System.Type,System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String,System.Type,System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  id: BeginCallWebMethod(System.String,System.Type,System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String},System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: BeginCallWebMethod(String, Type, Type, String, IDictionary<String, Object>, Action<String>, String)
  nameWithType: WebMethodsCaller.BeginCallWebMethod(String, Type, Type, String, IDictionary<String, Object>, Action<String>, String)
  fullName: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String, System.Type, System.Type, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Action<System.String>, System.String)
  type: Method
  source:
    id: BeginCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 528
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public void BeginCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, string messageHeaders, IDictionary<string, object> originalRequestObject, Action<string> callback, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: System.Type
    - id: methodReturnType
      type: System.Type
    - id: messageHeaders
      type: System.String
    - id: originalRequestObject
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: callback
      type: System.Action{System.String}
    - id: soapVersion
      type: System.String
    content.vb: Public Sub BeginCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, messageHeaders As String, originalRequestObject As IDictionary(Of String, Object), callback As Action(Of String), soapVersion As String)
  overload: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod*
  nameWithType.vb: WebMethodsCaller.BeginCallWebMethod(String, Type, Type, String, IDictionary(Of String, Object), Action(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod(System.String, System.Type, System.Type, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Action(Of System.String), System.String)
  name.vb: BeginCallWebMethod(String, Type, Type, String, IDictionary(Of String, Object), Action(Of String), String)
- uid: System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String,System.Type,System.Type,System.String,System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String,System.Type,System.Type,System.String,System.String)
  id: EndCallWebMethod(System.String,System.Type,System.Type,System.String,System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod(String, Type, Type, String, String)
  nameWithType: WebMethodsCaller.EndCallWebMethod(String, Type, Type, String, String)
  fullName: System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String, System.Type, System.Type, System.String, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 572
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public object EndCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, string xmlReturnedFromTheServer, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: System.Type
    - id: methodReturnType
      type: System.Type
    - id: xmlReturnedFromTheServer
      type: System.String
    - id: soapVersion
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function EndCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, xmlReturnedFromTheServer As String, soapVersion As String) As Object
  overload: System.ServiceModel.WebMethodsCaller.EndCallWebMethod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IReadOnlyList{System.Type},System.String,System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IReadOnlyList{System.Type},System.String,System.String)
  id: EndCallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IReadOnlyList{System.Type},System.String,System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod(String, Type, Type, IReadOnlyList<Type>, String, String)
  nameWithType: WebMethodsCaller.EndCallWebMethod(String, Type, Type, IReadOnlyList<Type>, String, String)
  fullName: System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String, System.Type, System.Type, System.Collections.Generic.IReadOnlyList<System.Type>, System.String, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 587
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public object EndCallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IReadOnlyList<Type> knownTypes, string xmlReturnedFromTheServer, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: System.Type
    - id: methodReturnType
      type: System.Type
    - id: knownTypes
      type: System.Collections.Generic.IReadOnlyList{System.Type}
    - id: xmlReturnedFromTheServer
      type: System.String
    - id: soapVersion
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function EndCallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, knownTypes As IReadOnlyList(Of Type), xmlReturnedFromTheServer As String, soapVersion As String) As Object
  overload: System.ServiceModel.WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: WebMethodsCaller.EndCallWebMethod(String, Type, Type, IReadOnlyList(Of Type), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.WebMethodsCaller.EndCallWebMethod(System.String, System.Type, System.Type, System.Collections.Generic.IReadOnlyList(Of System.Type), System.String, System.String)
  name.vb: EndCallWebMethod(String, Type, Type, IReadOnlyList(Of Type), String, String)
- uid: System.ServiceModel.WebMethodsCaller.EndCallWebMethod``1(System.String,System.Type,System.String,System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.EndCallWebMethod``1(System.String,System.Type,System.String,System.String)
  id: EndCallWebMethod``1(System.String,System.Type,System.String,System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: EndCallWebMethod<RETURN_TYPE>(String, Type, String, String)
  nameWithType: WebMethodsCaller.EndCallWebMethod<RETURN_TYPE>(String, Type, String, String)
  fullName: System.ServiceModel.WebMethodsCaller.EndCallWebMethod<RETURN_TYPE>(System.String, System.Type, System.String, System.String)
  type: Method
  source:
    id: EndCallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 615
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  syntax:
    content: public RETURN_TYPE EndCallWebMethod<RETURN_TYPE>(string webMethodName, Type interfaceType, string xmlReturnedFromTheServer, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
    - id: interfaceType
      type: System.Type
    - id: xmlReturnedFromTheServer
      type: System.String
    - id: soapVersion
      type: System.String
    typeParameters:
    - id: RETURN_TYPE
    return:
      type: '{RETURN_TYPE}'
    content.vb: Public Function EndCallWebMethod(Of RETURN_TYPE)(webMethodName As String, interfaceType As Type, xmlReturnedFromTheServer As String, soapVersion As String) As RETURN_TYPE
  overload: System.ServiceModel.WebMethodsCaller.EndCallWebMethod*
  nameWithType.vb: WebMethodsCaller.EndCallWebMethod(Of RETURN_TYPE)(String, Type, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.WebMethodsCaller.EndCallWebMethod(Of RETURN_TYPE)(System.String, System.Type, System.String, System.String)
  name.vb: EndCallWebMethod(Of RETURN_TYPE)(String, Type, String, String)
- uid: System.ServiceModel.WebMethodsCaller.CallWebMethodAsync``1(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.CallWebMethodAsync``1(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  id: CallWebMethodAsync``1(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethodAsync<T>(String, Type, Type, IDictionary<String, Object>, String)
  nameWithType: WebMethodsCaller.CallWebMethodAsync<T>(String, Type, Type, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.WebMethodsCaller.CallWebMethodAsync<T>(System.String, System.Type, System.Type, System.Collections.Generic.IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethodAsync
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 804
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  summary: "\nAsynchronously calls a WebMethod.\n"
  example: []
  syntax:
    content: public Task<T> CallWebMethodAsync<T>(string webMethodName, Type interfaceType, Type methodReturnType, IDictionary<string, object> originalRequestObject, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
      description: The name of the WebMethod
    - id: interfaceType
      type: System.Type
      description: The Type of the interface
    - id: methodReturnType
      type: System.Type
      description: The return Type of the method
    - id: originalRequestObject
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The additional arguments of the method
    - id: soapVersion
      type: System.String
      description: The SOAP Version of the request
    typeParameters:
    - id: T
      description: The return type of the WebMethod
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The result of the call of the method.
    content.vb: Public Function CallWebMethodAsync(Of T)(webMethodName As String, interfaceType As Type, methodReturnType As Type, originalRequestObject As IDictionary(Of String, Object), soapVersion As String) As Task(Of T)
  overload: System.ServiceModel.WebMethodsCaller.CallWebMethodAsync*
  nameWithType.vb: WebMethodsCaller.CallWebMethodAsync(Of T)(String, Type, Type, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.WebMethodsCaller.CallWebMethodAsync(Of T)(System.String, System.Type, System.Type, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethodAsync(Of T)(String, Type, Type, IDictionary(Of String, Object), String)
- uid: System.ServiceModel.WebMethodsCaller.CallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  commentId: M:System.ServiceModel.WebMethodsCaller.CallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  id: CallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  parent: System.ServiceModel.WebMethodsCaller
  langs:
  - csharp
  - vb
  name: CallWebMethod(String, Type, Type, IDictionary<String, Object>, String)
  nameWithType: WebMethodsCaller.CallWebMethod(String, Type, Type, IDictionary<String, Object>, String)
  fullName: System.ServiceModel.WebMethodsCaller.CallWebMethod(System.String, System.Type, System.Type, System.Collections.Generic.IDictionary<System.String, System.Object>, System.String)
  type: Method
  source:
    id: CallWebMethod
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.ServiceModel\CSHTML5_ClientBase_1.cs
    startLine: 864
  assemblies:
  - Runtime.OpenSilver
  namespace: System.ServiceModel
  summary: "\nCalls a WebMethod\n"
  example: []
  syntax:
    content: public object CallWebMethod(string webMethodName, Type interfaceType, Type methodReturnType, IDictionary<string, object> originalRequestObject, string soapVersion)
    parameters:
    - id: webMethodName
      type: System.String
      description: The name of the Method
    - id: interfaceType
      type: System.Type
      description: The Type of the interface
    - id: methodReturnType
      type: System.Type
      description: The return Type of the method
    - id: originalRequestObject
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The additional arguments of the method
    - id: soapVersion
      type: System.String
      description: The SOAP Version of the request
    return:
      type: System.Object
      description: The result of the call of the method.
    content.vb: Public Function CallWebMethod(webMethodName As String, interfaceType As Type, methodReturnType As Type, originalRequestObject As IDictionary(Of String, Object), soapVersion As String) As Object
  overload: System.ServiceModel.WebMethodsCaller.CallWebMethod*
  nameWithType.vb: WebMethodsCaller.CallWebMethod(String, Type, Type, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.WebMethodsCaller.CallWebMethod(System.String, System.Type, System.Type, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String)
  name.vb: CallWebMethod(String, Type, Type, IDictionary(Of String, Object), String)
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ServiceModel.WebMethodsCaller.#ctor*
  commentId: Overload:System.ServiceModel.WebMethodsCaller.#ctor
  name: WebMethodsCaller
  nameWithType: WebMethodsCaller.WebMethodsCaller
  fullName: System.ServiceModel.WebMethodsCaller.WebMethodsCaller
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod*
  commentId: Overload:System.ServiceModel.WebMethodsCaller.BeginCallWebMethod
  name: BeginCallWebMethod
  nameWithType: WebMethodsCaller.BeginCallWebMethod
  fullName: System.ServiceModel.WebMethodsCaller.BeginCallWebMethod
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.WebMethodsCaller.EndCallWebMethod*
  commentId: Overload:System.ServiceModel.WebMethodsCaller.EndCallWebMethod
  name: EndCallWebMethod
  nameWithType: WebMethodsCaller.EndCallWebMethod
  fullName: System.ServiceModel.WebMethodsCaller.EndCallWebMethod
- uid: System.Collections.Generic.IReadOnlyList{System.Type}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Type>
  nameWithType: IReadOnlyList<Type>
  fullName: System.Collections.Generic.IReadOnlyList<System.Type>
  nameWithType.vb: IReadOnlyList(Of Type)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Type)
  name.vb: IReadOnlyList(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{RETURN_TYPE}'
  commentId: '!:RETURN_TYPE'
  definition: RETURN_TYPE
  name: RETURN_TYPE
  nameWithType: RETURN_TYPE
  fullName: RETURN_TYPE
- uid: RETURN_TYPE
  name: RETURN_TYPE
  nameWithType: RETURN_TYPE
  fullName: RETURN_TYPE
- uid: System.ServiceModel.WebMethodsCaller.CallWebMethodAsync*
  commentId: Overload:System.ServiceModel.WebMethodsCaller.CallWebMethodAsync
  name: CallWebMethodAsync
  nameWithType: WebMethodsCaller.CallWebMethodAsync
  fullName: System.ServiceModel.WebMethodsCaller.CallWebMethodAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.ServiceModel.WebMethodsCaller.CallWebMethod*
  commentId: Overload:System.ServiceModel.WebMethodsCaller.CallWebMethod
  name: CallWebMethod
  nameWithType: WebMethodsCaller.CallWebMethod
  fullName: System.ServiceModel.WebMethodsCaller.CallWebMethod
