### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ItemsControlExtensions
  commentId: T:System.Windows.Controls.ItemsControlExtensions
  id: ItemsControlExtensions
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  langs:
  - csharp
  - vb
  name: ItemsControlExtensions
  nameWithType: ItemsControlExtensions
  fullName: System.Windows.Controls.ItemsControlExtensions
  type: Class
  source:
    id: ItemsControlExtensions
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls\Toolkit\ItemsControlExtensions.cs
    startLine: 32
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nProvides useful extensions to ItemsControl instances.\n"
  example: []
  syntax:
    content: 'public static class ItemsControlExtensions : object'
    content.vb: >-
      Public Module ItemsControlExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  id: GetContainers(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetContainers(ItemsControl)
  nameWithType: ItemsControlExtensions.GetContainers(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    id: GetContainers
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls\Toolkit\ItemsControlExtensions.cs
    startLine: 116
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGet the item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetContainers(this ItemsControl control)
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: The item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContainers(control As ItemsControl) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.ItemsControlExtensions.GetContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)
  id: GetContainers``1(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetContainers<TContainer>(ItemsControl)
  nameWithType: ItemsControlExtensions.GetContainers<TContainer>(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetContainers<TContainer>(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    id: GetContainers
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls\Toolkit\ItemsControlExtensions.cs
    startLine: 138
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGet the item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<TContainer> GetContainers<TContainer>(this ItemsControl control)
          where TContainer : DependencyObject
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    typeParameters:
    - id: TContainer
      description: "\nThe type of the item containers.\n"
    return:
      type: IEnumerable{{TContainer}}
      description: The item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContainers(Of TContainer As DependencyObject)(control As ItemsControl) As IEnumerable(Of TContainer)
  overload: System.Windows.Controls.ItemsControlExtensions.GetContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  nameWithType.vb: ItemsControlExtensions.GetContainers(Of TContainer)(ItemsControl)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Controls.ItemsControlExtensions.GetContainers(Of TContainer)(System.Windows.Controls.ItemsControl)
  name.vb: GetContainers(Of TContainer)(ItemsControl)
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  id: GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetItemsAndContainers(ItemsControl)
  nameWithType: ItemsControlExtensions.GetItemsAndContainers(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    id: GetItemsAndContainers
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls\Toolkit\ItemsControlExtensions.cs
    startLine: 175
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGet the items and item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: public static IEnumerable<KeyValuePair<object, DependencyObject>> GetItemsAndContainers(this ItemsControl control)
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    return:
      type: IEnumerable{KeyValuePair{System.Object,System.Windows.DependencyObject}}
      description: The items and item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetItemsAndContainers(control As ItemsControl) As IEnumerable(Of KeyValuePair(Of Object, DependencyObject))
  overload: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  id: GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetItemsAndContainers<TContainer>(ItemsControl)
  nameWithType: ItemsControlExtensions.GetItemsAndContainers<TContainer>(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers<TContainer>(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    id: GetItemsAndContainers
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls\Toolkit\ItemsControlExtensions.cs
    startLine: 198
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGet the items and item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<KeyValuePair<object, TContainer>> GetItemsAndContainers<TContainer>(this ItemsControl control)
          where TContainer : DependencyObject
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    typeParameters:
    - id: TContainer
      description: "\nThe type of the item containers.\n"
    return:
      type: IEnumerable{KeyValuePair{System.Object,{TContainer}}}
      description: The items and item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetItemsAndContainers(Of TContainer As DependencyObject)(control As ItemsControl) As IEnumerable(Of KeyValuePair(Of Object, TContainer))
  overload: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  nameWithType.vb: ItemsControlExtensions.GetItemsAndContainers(Of TContainer)(ItemsControl)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(Of TContainer)(System.Windows.Controls.ItemsControl)
  name.vb: GetItemsAndContainers(Of TContainer)(ItemsControl)
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Controls.ItemsControlExtensions.GetContainers*
  commentId: Overload:System.Windows.Controls.ItemsControlExtensions.GetContainers
  name: GetContainers
  nameWithType: ItemsControlExtensions.GetContainers
  fullName: System.Windows.Controls.ItemsControlExtensions.GetContainers
- uid: System.Windows.Controls.ItemsControl
  commentId: T:System.Windows.Controls.ItemsControl
  parent: System.Windows.Controls
  name: ItemsControl
  nameWithType: ItemsControl
  fullName: System.Windows.Controls.ItemsControl
- uid: IEnumerable{System.Windows.DependencyObject}
  commentId: '!:IEnumerable{System.Windows.DependencyObject}'
  definition: IEnumerable`1
  name: IEnumerable<DependencyObject>
  nameWithType: IEnumerable<DependencyObject>
  fullName: IEnumerable<System.Windows.DependencyObject>
  nameWithType.vb: IEnumerable(Of DependencyObject)
  fullName.vb: IEnumerable(Of System.Windows.DependencyObject)
  name.vb: IEnumerable(Of DependencyObject)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{{TContainer}}
  commentId: '!:IEnumerable{``0}'
  definition: IEnumerable`1
  name: IEnumerable<TContainer>
  nameWithType: IEnumerable<TContainer>
  fullName: IEnumerable<TContainer>
  nameWithType.vb: IEnumerable(Of TContainer)
  fullName.vb: IEnumerable(Of TContainer)
  name.vb: IEnumerable(Of TContainer)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers*
  commentId: Overload:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers
  name: GetItemsAndContainers
  nameWithType: ItemsControlExtensions.GetItemsAndContainers
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers
- uid: IEnumerable{KeyValuePair{System.Object,System.Windows.DependencyObject}}
  commentId: '!:IEnumerable{KeyValuePair{System.Object,System.Windows.DependencyObject}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, DependencyObject>>
  nameWithType: IEnumerable<KeyValuePair<Object, DependencyObject>>
  fullName: IEnumerable<KeyValuePair<System.Object, System.Windows.DependencyObject>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, DependencyObject))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.Object, System.Windows.DependencyObject))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, DependencyObject))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{KeyValuePair{System.Object,{TContainer}}}
  commentId: '!:IEnumerable{KeyValuePair{System.Object,``0}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, TContainer>>
  nameWithType: IEnumerable<KeyValuePair<Object, TContainer>>
  fullName: IEnumerable<KeyValuePair<System.Object, TContainer>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, TContainer))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.Object, TContainer))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, TContainer))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
