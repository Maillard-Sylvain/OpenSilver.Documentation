### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.Primitives.GeneratorPosition
  commentId: T:System.Windows.Controls.Primitives.GeneratorPosition
  id: GeneratorPosition
  parent: System.Windows.Controls.Primitives
  children:
  - System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)
  - System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)
  - System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode
  - System.Windows.Controls.Primitives.GeneratorPosition.Index
  - System.Windows.Controls.Primitives.GeneratorPosition.Offset
  - System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  - System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  - System.Windows.Controls.Primitives.GeneratorPosition.ToString
  langs:
  - csharp
  - vb
  name: GeneratorPosition
  nameWithType: GeneratorPosition
  fullName: System.Windows.Controls.Primitives.GeneratorPosition
  type: Struct
  source:
    id: GeneratorPosition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 33
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nA user of the ItemContainerGenerator describes positions using this struct.\nSome examples:\nTo start generating forward from the beginning of the item list,\nspecify position (-1, 0) and direction Forward.\nTo start generating backward from the end of the list,\nspecify position (-1, 0) and direction Backward.\nTo generate the items after the element with index k, specify\nposition (k, 0) and direction Forward.\n"
  example: []
  syntax:
    content: public struct GeneratorPosition
    content.vb: Public Structure GeneratorPosition
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Controls.Primitives.GeneratorPosition.Index
  commentId: P:System.Windows.Controls.Primitives.GeneratorPosition.Index
  id: Index
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: GeneratorPosition.Index
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Index
  type: Property
  source:
    id: Index
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nIndex, with respect to realized elements.  The special value -1\nrefers to a fictitious element at the beginning or end of the\nthe list.\n"
  example: []
  syntax:
    content: public int Index { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Index As Integer
  overload: System.Windows.Controls.Primitives.GeneratorPosition.Index*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.Primitives.GeneratorPosition.Offset
  commentId: P:System.Windows.Controls.Primitives.GeneratorPosition.Offset
  id: Offset
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: GeneratorPosition.Offset
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Offset
  type: Property
  source:
    id: Offset
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nOffset, with respect to unrealized items near the indexed element.\nAn offset of 0 refers to the indexed element itself, an offset\nof 1 refers to the next (unrealized) item, and an offset of -1\nrefers to the previous item.\n"
  example: []
  syntax:
    content: public int Offset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Offset As Integer
  overload: System.Windows.Controls.Primitives.GeneratorPosition.Offset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)
  commentId: M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: GeneratorPosition(Int32, Int32)
  nameWithType: GeneratorPosition.GeneratorPosition(Int32, Int32)
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.GeneratorPosition(System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 51
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: 'Constructor '
  example: []
  syntax:
    content: public GeneratorPosition(int index, int offset)
    parameters:
    - id: index
      type: System.Int32
    - id: offset
      type: System.Int32
    content.vb: Public Sub New(index As Integer, offset As Integer)
  overload: System.Windows.Controls.Primitives.GeneratorPosition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode
  commentId: M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GeneratorPosition.GetHashCode()
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 59
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: 'Return a hash code '
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.Primitives.GeneratorPosition.ToString
  commentId: M:System.Windows.Controls.Primitives.GeneratorPosition.ToString
  id: ToString
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GeneratorPosition.ToString()
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 65
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: Returns a string representation of the GeneratorPosition
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: System.Windows.Controls.Primitives.GeneratorPosition.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)
  commentId: M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GeneratorPosition.Equals(Object)
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 76
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: 'Equality test '
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overload: System.Windows.Controls.Primitives.GeneratorPosition.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  commentId: M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  id: op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: Equality(GeneratorPosition, GeneratorPosition)
  nameWithType: GeneratorPosition.Equality(GeneratorPosition, GeneratorPosition)
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Equality(System.Windows.Controls.Primitives.GeneratorPosition, System.Windows.Controls.Primitives.GeneratorPosition)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 89
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: 'Equality test '
  example: []
  syntax:
    content: public static bool operator ==(GeneratorPosition gp1, GeneratorPosition gp2)
    parameters:
    - id: gp1
      type: System.Windows.Controls.Primitives.GeneratorPosition
    - id: gp2
      type: System.Windows.Controls.Primitives.GeneratorPosition
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(gp1 As GeneratorPosition, gp2 As GeneratorPosition) As Boolean
  overload: System.Windows.Controls.Primitives.GeneratorPosition.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  commentId: M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  id: op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)
  parent: System.Windows.Controls.Primitives.GeneratorPosition
  langs:
  - csharp
  - vb
  name: Inequality(GeneratorPosition, GeneratorPosition)
  nameWithType: GeneratorPosition.Inequality(GeneratorPosition, GeneratorPosition)
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Inequality(System.Windows.Controls.Primitives.GeneratorPosition, System.Windows.Controls.Primitives.GeneratorPosition)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\IItemContainerGenerator.cs
    startLine: 97
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: 'Inequality test '
  example: []
  syntax:
    content: public static bool operator !=(GeneratorPosition gp1, GeneratorPosition gp2)
    parameters:
    - id: gp1
      type: System.Windows.Controls.Primitives.GeneratorPosition
    - id: gp2
      type: System.Windows.Controls.Primitives.GeneratorPosition
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(gp1 As GeneratorPosition, gp2 As GeneratorPosition) As Boolean
  overload: System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Controls.Primitives
  commentId: N:System.Windows.Controls.Primitives
  name: System.Windows.Controls.Primitives
  nameWithType: System.Windows.Controls.Primitives
  fullName: System.Windows.Controls.Primitives
- uid: System.Windows.Controls.Primitives.GeneratorPosition.Index*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.Index
  name: Index
  nameWithType: GeneratorPosition.Index
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Index
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.Primitives.GeneratorPosition.Offset*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.Offset
  name: Offset
  nameWithType: GeneratorPosition.Offset
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Offset
- uid: System.Windows.Controls.Primitives.GeneratorPosition.#ctor*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.#ctor
  name: GeneratorPosition
  nameWithType: GeneratorPosition.GeneratorPosition
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.GeneratorPosition
- uid: System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode
  name: GetHashCode
  nameWithType: GeneratorPosition.GetHashCode
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode
- uid: System.Windows.Controls.Primitives.GeneratorPosition.ToString*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.ToString
  name: ToString
  nameWithType: GeneratorPosition.ToString
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.Primitives.GeneratorPosition.Equals*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.Equals
  name: Equals
  nameWithType: GeneratorPosition.Equals
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Equals
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.Primitives.GeneratorPosition.op_Equality*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality
  name: Equality
  nameWithType: GeneratorPosition.Equality
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Equality
- uid: System.Windows.Controls.Primitives.GeneratorPosition
  commentId: T:System.Windows.Controls.Primitives.GeneratorPosition
  parent: System.Windows.Controls.Primitives
  name: GeneratorPosition
  nameWithType: GeneratorPosition
  fullName: System.Windows.Controls.Primitives.GeneratorPosition
- uid: System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality*
  commentId: Overload:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality
  name: Inequality
  nameWithType: GeneratorPosition.Inequality
  fullName: System.Windows.Controls.Primitives.GeneratorPosition.Inequality
