### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions
  commentId: T:System.Windows.Controls.Primitives.VisualTreeExtensions
  id: VisualTreeExtensions
  parent: System.Windows.Controls.Primitives
  children:
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  - System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement,Action)
  langs:
  - csharp
  - vb
  name: VisualTreeExtensions
  nameWithType: VisualTreeExtensions
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions
  type: Class
  source:
    id: VisualTreeExtensions
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nProvides useful extensions for working with the visual tree.\n"
  remarks: "\nSince many of these extension methods are declared on types like\nDependencyObject high up in the class hierarchy, we&apos;ve placed them in\nthe Primitives namespace which is less likely to be imported for normal\nscenarios.\n"
  example: []
  syntax:
    content: 'public static class VisualTreeExtensions : object'
    content.vb: >-
      Public Module VisualTreeExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  id: GetVisualAncestors(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualAncestors(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualAncestors(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualAncestors
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 51
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree ancestors of an element.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualAncestors(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: The visual tree ancestors of the element.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualAncestors(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  id: GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualAncestorsAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualAncestorsAndSelf
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 71
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree ancestors of an element and the element itself.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualAncestorsAndSelf(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: "\nThe visual tree ancestors of an element and the element itself.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualAncestorsAndSelf(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  id: GetVisualChildren(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualChildren(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualChildren(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualChildren
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 108
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree children of an element.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualChildren(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: The visual tree children of an element.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualChildren(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  id: GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualChildrenAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualChildrenAndSelf
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 128
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree children of an element and the element itself.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualChildrenAndSelf(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: "\nThe visual tree children of an element and the element itself.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualChildrenAndSelf(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  id: GetVisualDescendants(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualDescendants(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualDescendants(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualDescendants
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 166
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree descendants of an element.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualDescendants(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: The visual tree descendants of an element.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualDescendants(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  id: GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualDescendantsAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualDescendantsAndSelf
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 187
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree descendants of an element and the element\nitself.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualDescendantsAndSelf(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: "\nThe visual tree descendants of an element and the element itself.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualDescendantsAndSelf(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  id: GetVisualSiblings(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualSiblings(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualSiblings(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualSiblings
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 232
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree siblings of an element.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualSiblings(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: The visual tree siblings of an element.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualSiblings(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  id: GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetVisualSiblingsAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetVisualSiblingsAndSelf
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 249
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the visual tree siblings of an element and the element itself.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetVisualSiblingsAndSelf(this DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The element.
    return:
      type: IEnumerable{System.Windows.DependencyObject}
      description: "\nThe visual tree siblings of an element and the element itself.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVisualSiblingsAndSelf(element As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)
  id: GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: GetBoundsRelativeTo(FrameworkElement, UIElement)
  nameWithType: VisualTreeExtensions.GetBoundsRelativeTo(FrameworkElement, UIElement)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo(System.Windows.FrameworkElement, System.Windows.UIElement)
  type: Method
  source:
    id: GetBoundsRelativeTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 279
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGet the bounds of an element relative to another element.\n"
  example: []
  syntax:
    content: public static Rect? GetBoundsRelativeTo(this FrameworkElement element, UIElement otherElement)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: The element.
    - id: otherElement
      type: System.Windows.UIElement
      description: "\nThe element relative to the other element.\n"
    return:
      type: System.Nullable{System.Windows.Rect}
      description: "\nThe bounds of the element relative to another element, or null if\nthe elements are not related.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBoundsRelativeTo(element As FrameworkElement, otherElement As UIElement) As Rect?
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">otherElement</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement,Action)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement,Action)
  id: InvokeOnLayoutUpdated(System.Windows.FrameworkElement,Action)
  isExtensionMethod: true
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  langs:
  - csharp
  - vb
  name: InvokeOnLayoutUpdated(FrameworkElement, Action)
  nameWithType: VisualTreeExtensions.InvokeOnLayoutUpdated(FrameworkElement, Action)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated(System.Windows.FrameworkElement, Action)
  type: Method
  source:
    id: InvokeOnLayoutUpdated
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Controls.Primitives\WORKINPROGRESS\VisualTreeExtensions.cs
    startLine: 320
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nPerform an action when the element&apos;s LayoutUpdated event fires.\n"
  example: []
  syntax:
    content: public static void InvokeOnLayoutUpdated(this FrameworkElement element, Action action)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: The element.
    - id: action
      type: Action
      description: The action to perform.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub InvokeOnLayoutUpdated(element As FrameworkElement, action As Action)
  overload: System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">action</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Controls.Primitives
  commentId: N:System.Windows.Controls.Primitives
  name: System.Windows.Controls.Primitives
  nameWithType: System.Windows.Controls.Primitives
  fullName: System.Windows.Controls.Primitives
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  name: GetVisualAncestors
  nameWithType: VisualTreeExtensions.GetVisualAncestors
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: IEnumerable{System.Windows.DependencyObject}
  commentId: '!:IEnumerable{System.Windows.DependencyObject}'
  definition: IEnumerable`1
  name: IEnumerable<DependencyObject>
  nameWithType: IEnumerable<DependencyObject>
  fullName: IEnumerable<System.Windows.DependencyObject>
  nameWithType.vb: IEnumerable(Of DependencyObject)
  fullName.vb: IEnumerable(Of System.Windows.DependencyObject)
  name.vb: IEnumerable(Of DependencyObject)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  name: GetVisualAncestorsAndSelf
  nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  name: GetVisualChildren
  nameWithType: VisualTreeExtensions.GetVisualChildren
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  name: GetVisualChildrenAndSelf
  nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  name: GetVisualDescendants
  nameWithType: VisualTreeExtensions.GetVisualDescendants
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  name: GetVisualDescendantsAndSelf
  nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  name: GetVisualSiblings
  nameWithType: VisualTreeExtensions.GetVisualSiblings
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  name: GetVisualSiblingsAndSelf
  nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo
  name: GetBoundsRelativeTo
  nameWithType: VisualTreeExtensions.GetBoundsRelativeTo
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetBoundsRelativeTo
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Nullable{System.Windows.Rect}
  commentId: '!:System.Nullable{System.Windows.Rect}'
  definition: System.Nullable`1
  name: Nullable<Rect>
  nameWithType: Nullable<Rect>
  fullName: System.Nullable<System.Windows.Rect>
  nameWithType.vb: Nullable(Of Rect)
  fullName.vb: System.Nullable(Of System.Windows.Rect)
  name.vb: Nullable(Of Rect)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: System.Windows.Rect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: System.Windows.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated*
  commentId: Overload:System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated
  name: InvokeOnLayoutUpdated
  nameWithType: VisualTreeExtensions.InvokeOnLayoutUpdated
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.InvokeOnLayoutUpdated
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
