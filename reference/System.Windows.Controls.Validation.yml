### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.Validation
  commentId: T:System.Windows.Controls.Validation
  id: Validation
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpression)
  - System.Windows.Controls.Validation.ErrorsProperty
  - System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)
  - System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)
  - System.Windows.Controls.Validation.HasErrorProperty
  - System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpression,System.Windows.Controls.ValidationError)
  langs:
  - csharp
  - vb
  name: Validation
  nameWithType: Validation
  fullName: System.Windows.Controls.Validation
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Validation
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nProvides methods and attached properties that support data validation.\n"
  example: []
  syntax:
    content: public static class Validation
    content.vb: Public Module Validation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)
  id: GetErrors(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Validation
  langs:
  - csharp
  - vb
  name: GetErrors(DependencyObject)
  nameWithType: Validation.GetErrors(DependencyObject)
  fullName: System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetErrors
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 63
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the value of the System.Windows.Controls.Validation.Errors attached\nproperty of the specified element.\n"
  example: []
  syntax:
    content: public static ObservableCollection<ValidationError> GetErrors(DependencyObject element)
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "\nThe System.Windows.UIElement or System.Windows.ContentElement object to read\nthe value from.\n"
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.ValidationError}
      description: "\nA System.Collections.ObjectModel.ReadOnlyObservableCollection`1 of System.Windows.Controls.ValidationError\nobjects.\n"
    content.vb: Public Shared Function GetErrors(element As DependencyObject) As ObservableCollection(Of ValidationError)
  overload: System.Windows.Controls.Validation.GetErrors*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Validation.ErrorsProperty
  commentId: F:System.Windows.Controls.Validation.ErrorsProperty
  id: ErrorsProperty
  parent: System.Windows.Controls.Validation
  langs:
  - csharp
  - vb
  name: ErrorsProperty
  nameWithType: Validation.ErrorsProperty
  fullName: System.Windows.Controls.Validation.ErrorsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ErrorsProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 77
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nIdentifies the System.Windows.Controls.Validation.Errors attached property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty ErrorsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly ErrorsProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)
  id: GetHasError(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Validation
  langs:
  - csharp
  - vb
  name: GetHasError(DependencyObject)
  nameWithType: Validation.GetHasError(DependencyObject)
  fullName: System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHasError
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 95
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the value of the System.Windows.Controls.Validation.HasError attached\nproperty of the specified element.\n"
  example: []
  syntax:
    content: public static bool GetHasError(DependencyObject obj)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
      description: "\nThe System.Windows.UIElement or System.Windows.ContentElement object to read\nthe value from.\n"
    return:
      type: System.Boolean
      description: "\nThe value of the System.Windows.Controls.Validation.HasError attached property\nof the specified element.\n"
    content.vb: Public Shared Function GetHasError(obj As DependencyObject) As Boolean
  overload: System.Windows.Controls.Validation.GetHasError*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Validation.HasErrorProperty
  commentId: F:System.Windows.Controls.Validation.HasErrorProperty
  id: HasErrorProperty
  parent: System.Windows.Controls.Validation
  langs:
  - csharp
  - vb
  name: HasErrorProperty
  nameWithType: Validation.HasErrorProperty
  fullName: System.Windows.Controls.Validation.HasErrorProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HasErrorProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 108
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nIdentifies the System.Windows.Controls.Validation.HasError attached property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty HasErrorProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly HasErrorProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpression)
  commentId: M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpression)
  id: ClearInvalid(System.Windows.Data.BindingExpression)
  parent: System.Windows.Controls.Validation
  langs:
  - csharp
  - vb
  name: ClearInvalid(BindingExpression)
  nameWithType: Validation.ClearInvalid(BindingExpression)
  fullName: System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpression)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClearInvalid
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 119
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nRemoves all System.Windows.Controls.ValidationError objects from the specified\nSystem.Windows.Data.BindingExpressionBase object.\n"
  example: []
  syntax:
    content: public static void ClearInvalid(BindingExpression bindingExpression)
    parameters:
    - id: bindingExpression
      type: System.Windows.Data.BindingExpression
      description: The object to turn valid.
    content.vb: Public Shared Sub ClearInvalid(bindingExpression As BindingExpression)
  overload: System.Windows.Controls.Validation.ClearInvalid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpression,System.Windows.Controls.ValidationError)
  commentId: M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpression,System.Windows.Controls.ValidationError)
  id: MarkInvalid(System.Windows.Data.BindingExpression,System.Windows.Controls.ValidationError)
  parent: System.Windows.Controls.Validation
  langs:
  - csharp
  - vb
  name: MarkInvalid(BindingExpression, ValidationError)
  nameWithType: Validation.MarkInvalid(BindingExpression, ValidationError)
  fullName: System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpression, System.Windows.Controls.ValidationError)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MarkInvalid
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Controls/Validation.cs
    startLine: 176
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nMarks the specified System.Windows.Data.BindingExpression object as invalid\nwith the specified System.Windows.Controls.ValidationError object.\n"
  example: []
  syntax:
    content: public static void MarkInvalid(BindingExpression bindingExpression, ValidationError validationError)
    parameters:
    - id: bindingExpression
      type: System.Windows.Data.BindingExpression
      description: The System.Windows.Data.BindingExpression object to mark as invalid.
    - id: validationError
      type: System.Windows.Controls.ValidationError
      description: The System.Windows.Controls.ValidationError object to use.
    content.vb: Public Shared Sub MarkInvalid(bindingExpression As BindingExpression, validationError As ValidationError)
  overload: System.Windows.Controls.Validation.MarkInvalid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Controls.Validation.GetErrors*
  commentId: Overload:System.Windows.Controls.Validation.GetErrors
  name: GetErrors
  nameWithType: Validation.GetErrors
  fullName: System.Windows.Controls.Validation.GetErrors
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.ValidationError}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<ValidationError>
  nameWithType: ObservableCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.Windows.Controls.ValidationError>
  nameWithType.vb: ObservableCollection(Of ValidationError)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of System.Windows.Controls.ValidationError)
  name.vb: ObservableCollection(Of ValidationError)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: System.Windows.Controls.ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: System.Windows.Controls.ValidationError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.Validation.GetHasError*
  commentId: Overload:System.Windows.Controls.Validation.GetHasError
  name: GetHasError
  nameWithType: Validation.GetHasError
  fullName: System.Windows.Controls.Validation.GetHasError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.Validation.ClearInvalid*
  commentId: Overload:System.Windows.Controls.Validation.ClearInvalid
  name: ClearInvalid
  nameWithType: Validation.ClearInvalid
  fullName: System.Windows.Controls.Validation.ClearInvalid
- uid: System.Windows.Data.BindingExpression
  commentId: T:System.Windows.Data.BindingExpression
  parent: System.Windows.Data
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Windows.Controls.Validation.MarkInvalid*
  commentId: Overload:System.Windows.Controls.Validation.MarkInvalid
  name: MarkInvalid
  nameWithType: Validation.MarkInvalid
  fullName: System.Windows.Controls.Validation.MarkInvalid
- uid: System.Windows.Controls.ValidationError
  commentId: T:System.Windows.Controls.ValidationError
  parent: System.Windows.Controls
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
