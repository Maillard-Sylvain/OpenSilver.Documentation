### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyObjectCollection`1
  commentId: T:System.Windows.DependencyObjectCollection`1
  id: DependencyObjectCollection`1
  parent: System.Windows
  children:
  - System.Windows.DependencyObjectCollection`1.#ctor
  - System.Windows.DependencyObjectCollection`1.Add(`0)
  - System.Windows.DependencyObjectCollection`1.Clear
  - System.Windows.DependencyObjectCollection`1.CollectionChanged
  - System.Windows.DependencyObjectCollection`1.Contains(`0)
  - System.Windows.DependencyObjectCollection`1.Count
  - System.Windows.DependencyObjectCollection`1.GetEnumerator
  - System.Windows.DependencyObjectCollection`1.IndexOf(`0)
  - System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)
  - System.Windows.DependencyObjectCollection`1.IsReadOnly
  - System.Windows.DependencyObjectCollection`1.Item(System.Int32)
  - System.Windows.DependencyObjectCollection`1.Remove(`0)
  - System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: DependencyObjectCollection<T>
  nameWithType: DependencyObjectCollection<T>
  fullName: System.Windows.DependencyObjectCollection<T>
  type: Class
  source:
    id: DependencyObjectCollection
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents a collection of System.Windows.DependencyObject instances of a specified\ntype.\n"
  example: []
  syntax:
    content: 'public class DependencyObjectCollection<T> : DependencyObject, IList<T>, ICollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable, INotifyCollectionChanged where T : DependencyObject'
    typeParameters:
    - id: T
      description: The type of items in the collection.
    content.vb: >-
      Public Class DependencyObjectCollection(Of T As DependencyObject)
          Inherits DependencyObject
          Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IList, ICollection, IEnumerable, INotifyCollectionChanged
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  derivedClasses:
  - System.Windows.Interactivity.AttachableCollection`1
  implements:
  - IList{{T}}
  - ICollection{{T}}
  - IEnumerable{{T}}
  - IList
  - ICollection
  - IEnumerable
  - INotifyCollectionChanged
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CheckAccess
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  - System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  nameWithType.vb: DependencyObjectCollection(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Windows.DependencyObjectCollection(Of T)
  name.vb: DependencyObjectCollection(Of T)
- uid: System.Windows.DependencyObjectCollection`1.#ctor
  commentId: M:System.Windows.DependencyObjectCollection`1.#ctor
  id: '#ctor'
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: DependencyObjectCollection()
  nameWithType: DependencyObjectCollection<T>.DependencyObjectCollection()
  fullName: System.Windows.DependencyObjectCollection<T>.DependencyObjectCollection()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 36
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.DependencyObjectCollection%601\" data-throw-if-not-resolved=\"false\"></xref>\nclass.\n"
  example: []
  syntax:
    content: public DependencyObjectCollection()
    content.vb: Public Sub New
  overload: System.Windows.DependencyObjectCollection`1.#ctor*
  nameWithType.vb: DependencyObjectCollection(Of T).DependencyObjectCollection()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).DependencyObjectCollection()
- uid: System.Windows.DependencyObjectCollection`1.CollectionChanged
  commentId: E:System.Windows.DependencyObjectCollection`1.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: CollectionChanged
  nameWithType: DependencyObjectCollection<T>.CollectionChanged
  fullName: System.Windows.DependencyObjectCollection<T>.CollectionChanged
  type: Event
  source:
    id: CollectionChanged
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when items in the collection are added, removed, or replaced.\n"
  example: []
  syntax:
    content: public event NotifyCollectionChangedEventHandler CollectionChanged
    return:
      type: NotifyCollectionChangedEventHandler
    content.vb: Public Event CollectionChanged As NotifyCollectionChangedEventHandler
  nameWithType.vb: DependencyObjectCollection(Of T).CollectionChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).CollectionChanged
- uid: System.Windows.DependencyObjectCollection`1.Item(System.Int32)
  commentId: P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: DependencyObjectCollection<T>.Item[Int32]
  fullName: System.Windows.DependencyObjectCollection<T>.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Public Property Item(index As Integer) As T
  overload: System.Windows.DependencyObjectCollection`1.Item*
  nameWithType.vb: DependencyObjectCollection(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Windows.DependencyObjectCollection`1.Count
  commentId: P:System.Windows.DependencyObjectCollection`1.Count
  id: Count
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: DependencyObjectCollection<T>.Count
  fullName: System.Windows.DependencyObjectCollection<T>.Count
  type: Property
  source:
    id: Count
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the number of objects in the collection.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Windows.DependencyObjectCollection`1.Count*
  nameWithType.vb: DependencyObjectCollection(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Count
- uid: System.Windows.DependencyObjectCollection`1.IsReadOnly
  commentId: P:System.Windows.DependencyObjectCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: DependencyObjectCollection<T>.IsReadOnly
  fullName: System.Windows.DependencyObjectCollection<T>.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 80
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates whether the collection can be modified.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: System.Windows.DependencyObjectCollection`1.IsReadOnly*
  nameWithType.vb: DependencyObjectCollection(Of T).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).IsReadOnly
- uid: System.Windows.DependencyObjectCollection`1.Add(`0)
  commentId: M:System.Windows.DependencyObjectCollection`1.Add(`0)
  id: Add(`0)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: DependencyObjectCollection<T>.Add(T)
  fullName: System.Windows.DependencyObjectCollection<T>.Add(T)
  type: Method
  source:
    id: Add
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nAdds the specified object to the end of the collection.\n"
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: "\nThe object to add to the collection.\n"
    content.vb: Public Sub Add(item As T)
  overload: System.Windows.DependencyObjectCollection`1.Add*
  nameWithType.vb: DependencyObjectCollection(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Add(T)
- uid: System.Windows.DependencyObjectCollection`1.Clear
  commentId: M:System.Windows.DependencyObjectCollection`1.Clear
  id: Clear
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DependencyObjectCollection<T>.Clear()
  fullName: System.Windows.DependencyObjectCollection<T>.Clear()
  type: Method
  source:
    id: Clear
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 116
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRemoves all objects from the collection.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: System.Windows.DependencyObjectCollection`1.Clear*
  nameWithType.vb: DependencyObjectCollection(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Clear()
- uid: System.Windows.DependencyObjectCollection`1.Contains(`0)
  commentId: M:System.Windows.DependencyObjectCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: DependencyObjectCollection<T>.Contains(T)
  fullName: System.Windows.DependencyObjectCollection<T>.Contains(T)
  type: Method
  source:
    id: Contains
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 129
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates whether the specified object is in the collection.\n"
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to check for in the collection.
    return:
      type: System.Boolean
      description: true if the object is in the collection; otherwise, false.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: System.Windows.DependencyObjectCollection`1.Contains*
  nameWithType.vb: DependencyObjectCollection(Of T).Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Contains(T)
- uid: System.Windows.DependencyObjectCollection`1.GetEnumerator
  commentId: M:System.Windows.DependencyObjectCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: DependencyObjectCollection<T>.GetEnumerator()
  fullName: System.Windows.DependencyObjectCollection<T>.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 142
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: IEnumerator{{T}}
      description: An enumerator for the collection.
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: System.Windows.DependencyObjectCollection`1.GetEnumerator*
  nameWithType.vb: DependencyObjectCollection(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).GetEnumerator()
- uid: System.Windows.DependencyObjectCollection`1.IndexOf(`0)
  commentId: M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: DependencyObjectCollection<T>.IndexOf(T)
  fullName: System.Windows.DependencyObjectCollection<T>.IndexOf(T)
  type: Method
  source:
    id: IndexOf
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 157
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the index of the specified object within the collection, or -1 if the object\nis not in the collection.\n"
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the collection.
    return:
      type: System.Int32
      description: "\nThe index of the first occurrence of item within the collection, or -1 if item\nis not in the collection.\n"
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: System.Windows.DependencyObjectCollection`1.IndexOf*
  nameWithType.vb: DependencyObjectCollection(Of T).IndexOf(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).IndexOf(T)
- uid: System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)
  commentId: M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Insert(Int32, T)
  nameWithType: DependencyObjectCollection<T>.Insert(Int32, T)
  fullName: System.Windows.DependencyObjectCollection<T>.Insert(System.Int32, T)
  type: Method
  source:
    id: Insert
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 174
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nAdds the specified object to the collection at the specified index.\n"
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The index at which to add the object.
    - id: item
      type: '{T}'
      description: The object to add.
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: System.Windows.DependencyObjectCollection`1.Insert*
  nameWithType.vb: DependencyObjectCollection(Of T).Insert(Int32, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Insert(System.Int32, T)
- uid: System.Windows.DependencyObjectCollection`1.Remove(`0)
  commentId: M:System.Windows.DependencyObjectCollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: DependencyObjectCollection<T>.Remove(T)
  fullName: System.Windows.DependencyObjectCollection<T>.Remove(T)
  type: Method
  source:
    id: Remove
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 188
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRemoves the specified object from the collection.\n"
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to remove.
    return:
      type: System.Boolean
      description: true if the object was removed; false if the object was not found in the collection.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: System.Windows.DependencyObjectCollection`1.Remove*
  nameWithType.vb: DependencyObjectCollection(Of T).Remove(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Remove(T)
- uid: System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)
  commentId: M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.DependencyObjectCollection`1
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: DependencyObjectCollection<T>.RemoveAt(Int32)
  fullName: System.Windows.DependencyObjectCollection<T>.RemoveAt(System.Int32)
  type: Method
  source:
    id: RemoveAt
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\DependencyObjectCollection_1.cs
    startLine: 208
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRemoves the object at the specified index from the collection.\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the object to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: System.Windows.DependencyObjectCollection`1.RemoveAt*
  nameWithType.vb: DependencyObjectCollection(Of T).RemoveAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).RemoveAt(System.Int32)
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: IList{{T}}
  commentId: '!:IList{`0}'
  definition: IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection{{T}}
  commentId: '!:ICollection{`0}'
  definition: ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{{T}}
  commentId: '!:IEnumerable{`0}'
  definition: IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IList
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: IList
- uid: ICollection
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: ICollection
- uid: IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: IEnumerable
- uid: INotifyCollectionChanged
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: INotifyCollectionChanged
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetLocalValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetLocalValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
    name: SetLocalValue
    nameWithType: DependencyObject.SetLocalValue
    fullName: System.Windows.DependencyObject.SetLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
    name: SetLocalValue
    nameWithType: DependencyObject.SetLocalValue
    fullName: System.Windows.DependencyObject.SetLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
  commentId: M:System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyObject
  name: CoerceCurrentValue(DependencyProperty, PropertyMetadata)
  nameWithType: DependencyObject.CoerceCurrentValue(DependencyProperty, PropertyMetadata)
  fullName: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty, System.Windows.PropertyMetadata)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
    name: CoerceCurrentValue
    nameWithType: DependencyObject.CoerceCurrentValue
    fullName: System.Windows.DependencyObject.CoerceCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.PropertyMetadata
    name: PropertyMetadata
    nameWithType: PropertyMetadata
    fullName: System.Windows.PropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
    name: CoerceCurrentValue
    nameWithType: DependencyObject.CoerceCurrentValue
    fullName: System.Windows.DependencyObject.CoerceCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.PropertyMetadata
    name: PropertyMetadata
    nameWithType: PropertyMetadata
    fullName: System.Windows.PropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: Coerce(DependencyProperty)
  nameWithType: DependencyObject.Coerce(DependencyProperty)
  fullName: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
    name: Coerce
    nameWithType: DependencyObject.Coerce
    fullName: System.Windows.DependencyObject.Coerce
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
    name: Coerce
    nameWithType: DependencyObject.Coerce
    fullName: System.Windows.DependencyObject.Coerce
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  name: GetVisualAncestors()
  nameWithType: VisualTreeExtensions.GetVisualAncestors()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
    name: GetVisualAncestors
    nameWithType: VisualTreeExtensions.GetVisualAncestors
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
    name: GetVisualAncestors
    nameWithType: VisualTreeExtensions.GetVisualAncestors
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  name: GetVisualAncestorsAndSelf()
  nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
    name: GetVisualAncestorsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
    name: GetVisualAncestorsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  name: GetVisualChildren()
  nameWithType: VisualTreeExtensions.GetVisualChildren()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
    name: GetVisualChildren
    nameWithType: VisualTreeExtensions.GetVisualChildren
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
    name: GetVisualChildren
    nameWithType: VisualTreeExtensions.GetVisualChildren
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  name: GetVisualChildrenAndSelf()
  nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
    name: GetVisualChildrenAndSelf
    nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
    name: GetVisualChildrenAndSelf
    nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  name: GetVisualDescendants()
  nameWithType: VisualTreeExtensions.GetVisualDescendants()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
    name: GetVisualDescendants
    nameWithType: VisualTreeExtensions.GetVisualDescendants
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
    name: GetVisualDescendants
    nameWithType: VisualTreeExtensions.GetVisualDescendants
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  name: GetVisualDescendantsAndSelf()
  nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
    name: GetVisualDescendantsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
    name: GetVisualDescendantsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  name: GetVisualSiblings()
  nameWithType: VisualTreeExtensions.GetVisualSiblings()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
    name: GetVisualSiblings
    nameWithType: VisualTreeExtensions.GetVisualSiblings
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
    name: GetVisualSiblings
    nameWithType: VisualTreeExtensions.GetVisualSiblings
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  parent: System.Windows.Controls.Primitives.VisualTreeExtensions
  definition: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  name: GetVisualSiblingsAndSelf()
  nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf()
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf()
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
    name: GetVisualSiblingsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
    name: GetVisualSiblingsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  name: GetVisualAncestors(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualAncestors(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
    name: GetVisualAncestors
    nameWithType: VisualTreeExtensions.GetVisualAncestors
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors(System.Windows.DependencyObject)
    name: GetVisualAncestors
    nameWithType: VisualTreeExtensions.GetVisualAncestors
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions
  commentId: T:System.Windows.Controls.Primitives.VisualTreeExtensions
  parent: System.Windows.Controls.Primitives
  name: VisualTreeExtensions
  nameWithType: VisualTreeExtensions
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  name: GetVisualAncestorsAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
    name: GetVisualAncestorsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf(System.Windows.DependencyObject)
    name: GetVisualAncestorsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualAncestorsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualAncestorsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  name: GetVisualChildren(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualChildren(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
    name: GetVisualChildren
    nameWithType: VisualTreeExtensions.GetVisualChildren
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)
    name: GetVisualChildren
    nameWithType: VisualTreeExtensions.GetVisualChildren
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  name: GetVisualChildrenAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
    name: GetVisualChildrenAndSelf
    nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf(System.Windows.DependencyObject)
    name: GetVisualChildrenAndSelf
    nameWithType: VisualTreeExtensions.GetVisualChildrenAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualChildrenAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  name: GetVisualDescendants(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualDescendants(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
    name: GetVisualDescendants
    nameWithType: VisualTreeExtensions.GetVisualDescendants
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants(System.Windows.DependencyObject)
    name: GetVisualDescendants
    nameWithType: VisualTreeExtensions.GetVisualDescendants
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  name: GetVisualDescendantsAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
    name: GetVisualDescendantsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf(System.Windows.DependencyObject)
    name: GetVisualDescendantsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualDescendantsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualDescendantsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  name: GetVisualSiblings(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualSiblings(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
    name: GetVisualSiblings
    nameWithType: VisualTreeExtensions.GetVisualSiblings
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings(System.Windows.DependencyObject)
    name: GetVisualSiblings
    nameWithType: VisualTreeExtensions.GetVisualSiblings
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  name: GetVisualSiblingsAndSelf(DependencyObject)
  nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf(DependencyObject)
  fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
    name: GetVisualSiblingsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf(System.Windows.DependencyObject)
    name: GetVisualSiblingsAndSelf
    nameWithType: VisualTreeExtensions.GetVisualSiblingsAndSelf
    fullName: System.Windows.Controls.Primitives.VisualTreeExtensions.GetVisualSiblingsAndSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.Primitives
  commentId: N:System.Windows.Controls.Primitives
  name: System.Windows.Controls.Primitives
  nameWithType: System.Windows.Controls.Primitives
  fullName: System.Windows.Controls.Primitives
- uid: System.Windows.DependencyObjectCollection`1
  commentId: T:System.Windows.DependencyObjectCollection`1
  name: DependencyObjectCollection<T>
  nameWithType: DependencyObjectCollection<T>
  fullName: System.Windows.DependencyObjectCollection<T>
  nameWithType.vb: DependencyObjectCollection(Of T)
  fullName.vb: System.Windows.DependencyObjectCollection(Of T)
  name.vb: DependencyObjectCollection(Of T)
  spec.csharp:
  - uid: System.Windows.DependencyObjectCollection`1
    name: DependencyObjectCollection
    nameWithType: DependencyObjectCollection
    fullName: System.Windows.DependencyObjectCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Windows.DependencyObjectCollection`1
    name: DependencyObjectCollection
    nameWithType: DependencyObjectCollection
    fullName: System.Windows.DependencyObjectCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObjectCollection`1.#ctor*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.#ctor
  name: DependencyObjectCollection
  nameWithType: DependencyObjectCollection<T>.DependencyObjectCollection
  fullName: System.Windows.DependencyObjectCollection<T>.DependencyObjectCollection
  nameWithType.vb: DependencyObjectCollection(Of T).DependencyObjectCollection
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).DependencyObjectCollection
- uid: NotifyCollectionChangedEventHandler
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: NotifyCollectionChangedEventHandler
- uid: System.Windows.DependencyObjectCollection`1.Item*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Item
  name: Item
  nameWithType: DependencyObjectCollection<T>.Item
  fullName: System.Windows.DependencyObjectCollection<T>.Item
  nameWithType.vb: DependencyObjectCollection(Of T).Item
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Item
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Windows.DependencyObjectCollection`1.Count*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Count
  name: Count
  nameWithType: DependencyObjectCollection<T>.Count
  fullName: System.Windows.DependencyObjectCollection<T>.Count
  nameWithType.vb: DependencyObjectCollection(Of T).Count
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Count
- uid: System.Windows.DependencyObjectCollection`1.IsReadOnly*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: DependencyObjectCollection<T>.IsReadOnly
  fullName: System.Windows.DependencyObjectCollection<T>.IsReadOnly
  nameWithType.vb: DependencyObjectCollection(Of T).IsReadOnly
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).IsReadOnly
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyObjectCollection`1.CollectionChanged
  commentId: E:System.Windows.DependencyObjectCollection`1.CollectionChanged
  name: CollectionChanged
  nameWithType: DependencyObjectCollection<T>.CollectionChanged
  fullName: System.Windows.DependencyObjectCollection<T>.CollectionChanged
  nameWithType.vb: DependencyObjectCollection(Of T).CollectionChanged
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).CollectionChanged
- uid: System.Windows.DependencyObjectCollection`1.Add*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Add
  name: Add
  nameWithType: DependencyObjectCollection<T>.Add
  fullName: System.Windows.DependencyObjectCollection<T>.Add
  nameWithType.vb: DependencyObjectCollection(Of T).Add
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Add
- uid: System.Windows.DependencyObjectCollection`1.Clear*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Clear
  name: Clear
  nameWithType: DependencyObjectCollection<T>.Clear
  fullName: System.Windows.DependencyObjectCollection<T>.Clear
  nameWithType.vb: DependencyObjectCollection(Of T).Clear
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Clear
- uid: System.Windows.DependencyObjectCollection`1.Contains*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Contains
  name: Contains
  nameWithType: DependencyObjectCollection<T>.Contains
  fullName: System.Windows.DependencyObjectCollection<T>.Contains
  nameWithType.vb: DependencyObjectCollection(Of T).Contains
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Contains
- uid: System.Windows.DependencyObjectCollection`1.GetEnumerator*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.GetEnumerator
  name: GetEnumerator
  nameWithType: DependencyObjectCollection<T>.GetEnumerator
  fullName: System.Windows.DependencyObjectCollection<T>.GetEnumerator
  nameWithType.vb: DependencyObjectCollection(Of T).GetEnumerator
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).GetEnumerator
- uid: IEnumerator{{T}}
  commentId: '!:IEnumerator{`0}'
  definition: IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObjectCollection`1.IndexOf*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.IndexOf
  name: IndexOf
  nameWithType: DependencyObjectCollection<T>.IndexOf
  fullName: System.Windows.DependencyObjectCollection<T>.IndexOf
  nameWithType.vb: DependencyObjectCollection(Of T).IndexOf
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).IndexOf
- uid: System.Windows.DependencyObjectCollection`1.Insert*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Insert
  name: Insert
  nameWithType: DependencyObjectCollection<T>.Insert
  fullName: System.Windows.DependencyObjectCollection<T>.Insert
  nameWithType.vb: DependencyObjectCollection(Of T).Insert
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Insert
- uid: System.Windows.DependencyObjectCollection`1.Remove*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.Remove
  name: Remove
  nameWithType: DependencyObjectCollection<T>.Remove
  fullName: System.Windows.DependencyObjectCollection<T>.Remove
  nameWithType.vb: DependencyObjectCollection(Of T).Remove
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).Remove
- uid: System.Windows.DependencyObjectCollection`1.RemoveAt*
  commentId: Overload:System.Windows.DependencyObjectCollection`1.RemoveAt
  name: RemoveAt
  nameWithType: DependencyObjectCollection<T>.RemoveAt
  fullName: System.Windows.DependencyObjectCollection<T>.RemoveAt
  nameWithType.vb: DependencyObjectCollection(Of T).RemoveAt
  fullName.vb: System.Windows.DependencyObjectCollection(Of T).RemoveAt
