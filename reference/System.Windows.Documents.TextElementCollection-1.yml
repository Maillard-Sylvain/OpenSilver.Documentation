### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextElementCollection`1
  commentId: T:System.Windows.Documents.TextElementCollection`1
  id: TextElementCollection`1
  parent: System.Windows.Documents
  children:
  - System.Windows.Documents.TextElementCollection`1.Add(`0)
  - System.Windows.Documents.TextElementCollection`1.Clear
  - System.Windows.Documents.TextElementCollection`1.Contains(`0)
  - System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)
  - System.Windows.Documents.TextElementCollection`1.Count
  - System.Windows.Documents.TextElementCollection`1.GetEnumerator
  - System.Windows.Documents.TextElementCollection`1.IsReadOnly
  - System.Windows.Documents.TextElementCollection`1.Item(System.Int32)
  - System.Windows.Documents.TextElementCollection`1.Remove(`0)
  - System.Windows.Documents.TextElementCollection`1.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: TextElementCollection<T>
  nameWithType: TextElementCollection<T>
  fullName: System.Windows.Documents.TextElementCollection<T>
  type: Class
  source:
    id: TextElementCollection
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: 'public class TextElementCollection<T> : IList, ICollection<T> where T : TextElement'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class TextElementCollection(Of T As TextElement)
          Inherits IList
          Implements ICollection(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - System.Windows.Documents.BlockCollection
  - System.Windows.Documents.InlineCollection
  implements:
  - ICollection{{T}}
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: TextElementCollection(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T)
  name.vb: TextElementCollection(Of T)
- uid: System.Windows.Documents.TextElementCollection`1.Count
  commentId: P:System.Windows.Documents.TextElementCollection`1.Count
  id: Count
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TextElementCollection<T>.Count
  fullName: System.Windows.Documents.TextElementCollection<T>.Count
  type: Property
  source:
    id: Count
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Windows.Documents.TextElementCollection`1.Count*
  nameWithType.vb: TextElementCollection(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Count
- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly
  commentId: P:System.Windows.Documents.TextElementCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: TextElementCollection<T>.IsReadOnly
  fullName: System.Windows.Documents.TextElementCollection<T>.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: System.Windows.Documents.TextElementCollection`1.IsReadOnly*
  nameWithType.vb: TextElementCollection(Of T).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).IsReadOnly
- uid: System.Windows.Documents.TextElementCollection`1.Item(System.Int32)
  commentId: P:System.Windows.Documents.TextElementCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TextElementCollection<T>.Item[Int32]
  fullName: System.Windows.Documents.TextElementCollection<T>.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 62
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Property Item(index As Integer) As Object
  overload: System.Windows.Documents.TextElementCollection`1.Item*
  nameWithType.vb: TextElementCollection(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)
  commentId: M:System.Windows.Documents.TextElementCollection`1.Add(`0)
  id: Add(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: TextElementCollection<T>.Add(T)
  fullName: System.Windows.Documents.TextElementCollection<T>.Add(T)
  type: Method
  source:
    id: Add
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 105
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Add(item As T)
  overload: System.Windows.Documents.TextElementCollection`1.Add*
  nameWithType.vb: TextElementCollection(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Add(T)
- uid: System.Windows.Documents.TextElementCollection`1.Clear
  commentId: M:System.Windows.Documents.TextElementCollection`1.Clear
  id: Clear
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TextElementCollection<T>.Clear()
  fullName: System.Windows.Documents.TextElementCollection<T>.Clear()
  type: Method
  source:
    id: Clear
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 118
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: System.Windows.Documents.TextElementCollection`1.Clear*
  nameWithType.vb: TextElementCollection(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Clear()
- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)
  commentId: M:System.Windows.Documents.TextElementCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: TextElementCollection<T>.Contains(T)
  fullName: System.Windows.Documents.TextElementCollection<T>.Contains(T)
  type: Method
  source:
    id: Contains
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 135
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: System.Windows.Documents.TextElementCollection`1.Contains*
  nameWithType.vb: TextElementCollection(Of T).Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Contains(T)
- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], Int32)
  nameWithType: TextElementCollection<T>.CopyTo(T[], Int32)
  fullName: System.Windows.Documents.TextElementCollection<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    id: CopyTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 145
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: System.Windows.Documents.TextElementCollection`1.CopyTo*
  nameWithType.vb: TextElementCollection(Of T).CopyTo(T(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator
  commentId: M:System.Windows.Documents.TextElementCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TextElementCollection<T>.GetEnumerator()
  fullName: System.Windows.Documents.TextElementCollection<T>.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 155
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: IEnumerator{{T}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: System.Windows.Documents.TextElementCollection`1.GetEnumerator*
  nameWithType.vb: TextElementCollection(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).GetEnumerator()
- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)
  commentId: M:System.Windows.Documents.TextElementCollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: TextElementCollection<T>.Remove(T)
  fullName: System.Windows.Documents.TextElementCollection<T>.Remove(T)
  type: Method
  source:
    id: Remove
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 171
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As T) As Boolean
  overload: System.Windows.Documents.TextElementCollection`1.Remove*
  nameWithType.vb: TextElementCollection(Of T).Remove(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Remove(T)
- uid: System.Windows.Documents.TextElementCollection`1.RemoveAt(System.Int32)
  commentId: M:System.Windows.Documents.TextElementCollection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: TextElementCollection<T>.RemoveAt(Int32)
  fullName: System.Windows.Documents.TextElementCollection<T>.RemoveAt(System.Int32)
  type: Method
  source:
    id: RemoveAt
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\TextElementCollection_1.cs
    startLine: 181
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: System.Windows.Documents.TextElementCollection`1.RemoveAt*
  nameWithType.vb: TextElementCollection(Of T).RemoveAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).RemoveAt(System.Int32)
references:
- uid: System.Windows.Documents
  commentId: N:System.Windows.Documents
  name: System.Windows.Documents
  nameWithType: System.Windows.Documents
  fullName: System.Windows.Documents
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ICollection{{T}}
  commentId: '!:ICollection{`0}'
  definition: ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Documents.TextElementCollection`1.Count*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.Count
  name: Count
  nameWithType: TextElementCollection<T>.Count
  fullName: System.Windows.Documents.TextElementCollection<T>.Count
  nameWithType.vb: TextElementCollection(Of T).Count
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Count
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: TextElementCollection<T>.IsReadOnly
  fullName: System.Windows.Documents.TextElementCollection<T>.IsReadOnly
  nameWithType.vb: TextElementCollection(Of T).IsReadOnly
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).IsReadOnly
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TextElementCollection`1.Item*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.Item
  name: Item
  nameWithType: TextElementCollection<T>.Item
  fullName: System.Windows.Documents.TextElementCollection<T>.Item
  nameWithType.vb: TextElementCollection(Of T).Item
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Item
- uid: System.Windows.Documents.TextElementCollection`1.Add*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.Add
  name: Add
  nameWithType: TextElementCollection<T>.Add
  fullName: System.Windows.Documents.TextElementCollection<T>.Add
  nameWithType.vb: TextElementCollection(Of T).Add
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Windows.Documents.TextElementCollection`1.Clear*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.Clear
  name: Clear
  nameWithType: TextElementCollection<T>.Clear
  fullName: System.Windows.Documents.TextElementCollection<T>.Clear
  nameWithType.vb: TextElementCollection(Of T).Clear
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Clear
- uid: System.Windows.Documents.TextElementCollection`1.Contains*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.Contains
  name: Contains
  nameWithType: TextElementCollection<T>.Contains
  fullName: System.Windows.Documents.TextElementCollection<T>.Contains
  nameWithType.vb: TextElementCollection(Of T).Contains
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Contains
- uid: System.Windows.Documents.TextElementCollection`1.CopyTo*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.CopyTo
  name: CopyTo
  nameWithType: TextElementCollection<T>.CopyTo
  fullName: System.Windows.Documents.TextElementCollection<T>.CopyTo
  nameWithType.vb: TextElementCollection(Of T).CopyTo
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).CopyTo
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.GetEnumerator
  name: GetEnumerator
  nameWithType: TextElementCollection<T>.GetEnumerator
  fullName: System.Windows.Documents.TextElementCollection<T>.GetEnumerator
  nameWithType.vb: TextElementCollection(Of T).GetEnumerator
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).GetEnumerator
- uid: IEnumerator{{T}}
  commentId: '!:IEnumerator{`0}'
  definition: IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Documents.TextElementCollection`1.Remove*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.Remove
  name: Remove
  nameWithType: TextElementCollection<T>.Remove
  fullName: System.Windows.Documents.TextElementCollection<T>.Remove
  nameWithType.vb: TextElementCollection(Of T).Remove
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).Remove
- uid: System.Windows.Documents.TextElementCollection`1.RemoveAt*
  commentId: Overload:System.Windows.Documents.TextElementCollection`1.RemoveAt
  name: RemoveAt
  nameWithType: TextElementCollection<T>.RemoveAt
  fullName: System.Windows.Documents.TextElementCollection<T>.RemoveAt
  nameWithType.vb: TextElementCollection(Of T).RemoveAt
  fullName.vb: System.Windows.Documents.TextElementCollection(Of T).RemoveAt
