### YamlMime:ManagedReference
items:
- uid: System.Windows.Duration
  commentId: T:System.Windows.Duration
  id: Duration
  parent: System.Windows
  children:
  - System.Windows.Duration.#ctor(TimeSpan)
  - System.Windows.Duration.Automatic
  - System.Windows.Duration.Equals(System.Object)
  - System.Windows.Duration.Equals(System.Windows.Duration)
  - System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.Forever
  - System.Windows.Duration.GetHashCode
  - System.Windows.Duration.HasTimeSpan
  - System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_Implicit(TimeSpan)~System.Windows.Duration
  - System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  - System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)
  - System.Windows.Duration.TimeSpan
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
  type: Struct
  source:
    id: Duration
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents the duration of time that a Windows.UI.Xaml.Media.Animation.Timeline\nis active.\n"
  example: []
  syntax:
    content: public struct Duration
    content.vb: Public Structure Duration
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Duration.#ctor(TimeSpan)
  commentId: M:System.Windows.Duration.#ctor(TimeSpan)
  id: '#ctor(TimeSpan)'
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Duration(TimeSpan)
  nameWithType: Duration.Duration(TimeSpan)
  fullName: System.Windows.Duration.Duration(TimeSpan)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the Windows.UI.Xaml.Duration structure with\nthe supplied System.TimeSpan value.\n"
  example: []
  syntax:
    content: public Duration(TimeSpan timeSpan)
    parameters:
    - id: timeSpan
      type: TimeSpan
      description: Represents the initial time interval of this duration.
    content.vb: Public Sub New(timeSpan As TimeSpan)
  overload: System.Windows.Duration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  commentId: M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  id: op_Subtraction(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Subtraction(Duration, Duration)
  nameWithType: Duration.Subtraction(Duration, Duration)
  fullName: System.Windows.Duration.Subtraction(System.Windows.Duration, System.Windows.Duration)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nSubtracts the value of one Windows.UI.Xaml.Duration from another.\n"
  example: []
  syntax:
    content: public static Duration operator -(Duration t1, Duration t2)
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: The first Windows.UI.Xaml.Duration.
    - id: t2
      type: System.Windows.Duration
      description: The Windows.UI.Xaml.Duration to subtract.
    return:
      type: System.Windows.Duration
      description: ''
    content.vb: Public Shared Operator -(t1 As Duration, t2 As Duration) As Duration
  overload: System.Windows.Duration.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)
  commentId: M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)
  id: op_Inequality(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Inequality(Duration, Duration)
  nameWithType: Duration.Inequality(Duration, Duration)
  fullName: System.Windows.Duration.Inequality(System.Windows.Duration, System.Windows.Duration)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 95
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines if two Windows.UI.Xaml.Duration cases are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(Duration t1, Duration t2)
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: The first Windows.UI.Xaml.Duration to compare.
    - id: t2
      type: System.Windows.Duration
      description: The second Windows.UI.Xaml.Duration to compare.
    return:
      type: System.Boolean
      description: "\ntrue if exactly one of t1 or t2 represent a value, or if they both represent\nvalues that are not equal; otherwise, false.\n"
    content.vb: Public Shared Operator <>(t1 As Duration, t2 As Duration) As Boolean
  overload: System.Windows.Duration.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)
  commentId: M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)
  id: op_UnaryPlus(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: UnaryPlus(Duration)
  nameWithType: Duration.UnaryPlus(Duration)
  fullName: System.Windows.Duration.UnaryPlus(System.Windows.Duration)
  type: Operator
  source:
    id: op_UnaryPlus
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 105
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the specified Windows.UI.Xaml.Duration.\n"
  example: []
  syntax:
    content: public static Duration operator +(Duration duration)
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: The Windows.UI.Xaml.Duration to get.
    return:
      type: System.Windows.Duration
      description: The Windows.UI.Xaml.Duration operation result.
    content.vb: Public Shared Operator +(duration As Duration) As Duration
  overload: System.Windows.Duration.op_UnaryPlus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)
  commentId: M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)
  id: op_Equality(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Equality(Duration, Duration)
  nameWithType: Duration.Equality(Duration, Duration)
  fullName: System.Windows.Duration.Equality(System.Windows.Duration, System.Windows.Duration)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 154
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether two Windows.UI.Xaml.Duration cases are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(Duration t1, Duration t2)
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: The first Windows.UI.Xaml.Duration to compare.
    - id: t2
      type: System.Windows.Duration
      description: The second Windows.UI.Xaml.Duration to compare.
    return:
      type: System.Boolean
      description: "\ntrue if both Windows.UI.Xaml.Duration values have equal property values,\nor if all Windows.UI.Xaml.Duration values are null. Otherwise, this method\nreturns false.\n"
    content.vb: Public Shared Operator =(t1 As Duration, t2 As Duration) As Boolean
  overload: System.Windows.Duration.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Duration.op_Implicit(TimeSpan)~System.Windows.Duration
  commentId: M:System.Windows.Duration.op_Implicit(TimeSpan)~System.Windows.Duration
  id: op_Implicit(TimeSpan)~System.Windows.Duration
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Implicit(TimeSpan to Duration)
  nameWithType: Duration.Implicit(TimeSpan to Duration)
  fullName: System.Windows.Duration.Implicit(TimeSpan to System.Windows.Duration)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 187
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nImplicitly creates a Duration from a given System.TimeSpan.\n"
  example: []
  syntax:
    content: public static implicit operator Duration(TimeSpan timeSpan)
    parameters:
    - id: timeSpan
      type: TimeSpan
      description: System.TimeSpan from which a Duration is implicitly created.
    return:
      type: System.Windows.Duration
      description: A created Duration.
    content.vb: Public Shared Widening Operator CType(timeSpan As TimeSpan) As Duration
  overload: System.Windows.Duration.op_Implicit*
  nameWithType.vb: Duration.Widening(TimeSpan to Duration)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Duration.Widening(TimeSpan to System.Windows.Duration)
  name.vb: Widening(TimeSpan to Duration)
- uid: System.Windows.Duration.Automatic
  commentId: P:System.Windows.Duration.Automatic
  id: Automatic
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Automatic
  nameWithType: Duration.Automatic
  fullName: System.Windows.Duration.Automatic
  type: Property
  source:
    id: Automatic
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 199
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a Windows.UI.Xaml.Duration value that is automatically determined.\n"
  example: []
  syntax:
    content: public static readonly Duration Automatic { get; }
    parameters: []
    return:
      type: System.Windows.Duration
    content.vb: Public Shared ReadOnly Property Automatic As Duration
  overload: System.Windows.Duration.Automatic*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Duration.Forever
  commentId: P:System.Windows.Duration.Forever
  id: Forever
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Forever
  nameWithType: Duration.Forever
  fullName: System.Windows.Duration.Forever
  type: Property
  source:
    id: Forever
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 213
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a Windows.UI.Xaml.Duration value that represents an infinite interval.\n"
  example: []
  syntax:
    content: public static readonly Duration Forever { get; }
    parameters: []
    return:
      type: System.Windows.Duration
    content.vb: Public Shared ReadOnly Property Forever As Duration
  overload: System.Windows.Duration.Forever*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Duration.HasTimeSpan
  commentId: P:System.Windows.Duration.HasTimeSpan
  id: HasTimeSpan
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: HasTimeSpan
  nameWithType: Duration.HasTimeSpan
  fullName: System.Windows.Duration.HasTimeSpan
  type: Property
  source:
    id: HasTimeSpan
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 228
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates if this Windows.UI.Xaml.Duration represents a\nSystem.TimeSpan value.\n"
  example: []
  syntax:
    content: public readonly bool HasTimeSpan { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasTimeSpan As Boolean
  overload: System.Windows.Duration.HasTimeSpan*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Duration.TimeSpan
  commentId: P:System.Windows.Duration.TimeSpan
  id: TimeSpan
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: TimeSpan
  nameWithType: Duration.TimeSpan
  fullName: System.Windows.Duration.TimeSpan
  type: Property
  source:
    id: TimeSpan
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 247
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the System.TimeSpan value that this Windows.UI.Xaml.Duration represents.\n"
  example: []
  syntax:
    content: public readonly TimeSpan TimeSpan { get; }
    parameters: []
    return:
      type: TimeSpan
    content.vb: Public ReadOnly Property TimeSpan As TimeSpan
  overload: System.Windows.Duration.TimeSpan*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Duration.Equals(System.Windows.Duration)
  commentId: M:System.Windows.Duration.Equals(System.Windows.Duration)
  id: Equals(System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Equals(Duration)
  nameWithType: Duration.Equals(Duration)
  fullName: System.Windows.Duration.Equals(System.Windows.Duration)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 293
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether a specified Windows.UI.Xaml.Duration is equal to this\nWindows.UI.Xaml.Duration.\n"
  example: []
  syntax:
    content: public bool Equals(Duration duration)
    parameters:
    - id: duration
      type: System.Windows.Duration
      description: The Windows.UI.Xaml.Duration to check for equality.
    return:
      type: System.Boolean
      description: true if duration is equal to this Windows.UI.Xaml.Duration; otherwise, false.
    content.vb: Public Function Equals(duration As Duration) As Boolean
  overload: System.Windows.Duration.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Duration.Equals(System.Object)
  commentId: M:System.Windows.Duration.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Duration.Equals(Object)
  fullName: System.Windows.Duration.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 317
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether a specified object is equal to a Windows.UI.Xaml.Duration.\n"
  example: []
  syntax:
    content: public override bool Equals(object value)
    parameters:
    - id: value
      type: System.Object
      description: Object to check for equality.
    return:
      type: System.Boolean
      description: true if value is equal to this Windows.UI.Xaml.Duration; otherwise, false.
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
  overload: System.Windows.Duration.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)
  commentId: M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)
  id: Equals(System.Windows.Duration,System.Windows.Duration)
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: Equals(Duration, Duration)
  nameWithType: Duration.Equals(Duration, Duration)
  fullName: System.Windows.Duration.Equals(System.Windows.Duration, System.Windows.Duration)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 332
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether two Windows.UI.Xaml.Duration values are equal.\n"
  example: []
  syntax:
    content: public static bool Equals(Duration t1, Duration t2)
    parameters:
    - id: t1
      type: System.Windows.Duration
      description: First Windows.UI.Xaml.Duration to compare.
    - id: t2
      type: System.Windows.Duration
      description: Second Windows.UI.Xaml.Duration to compare.
    return:
      type: System.Boolean
      description: true if t1 is equal to t2; otherwise, false.
    content.vb: Public Shared Function Equals(t1 As Duration, t2 As Duration) As Boolean
  overload: System.Windows.Duration.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Duration.GetHashCode
  commentId: M:System.Windows.Duration.GetHashCode
  id: GetHashCode
  parent: System.Windows.Duration
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Duration.GetHashCode()
  fullName: System.Windows.Duration.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Duration.cs
    startLine: 341
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a hash code for this object.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code identifier.
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: System.Windows.Duration.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Duration.#ctor*
  commentId: Overload:System.Windows.Duration.#ctor
  name: Duration
  nameWithType: Duration.Duration
  fullName: System.Windows.Duration.Duration
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: System.Windows.Duration.op_Subtraction*
  commentId: Overload:System.Windows.Duration.op_Subtraction
  name: Subtraction
  nameWithType: Duration.Subtraction
  fullName: System.Windows.Duration.Subtraction
- uid: System.Windows.Duration
  commentId: T:System.Windows.Duration
  parent: System.Windows
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Duration.op_Inequality*
  commentId: Overload:System.Windows.Duration.op_Inequality
  name: Inequality
  nameWithType: Duration.Inequality
  fullName: System.Windows.Duration.Inequality
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Duration.op_UnaryPlus*
  commentId: Overload:System.Windows.Duration.op_UnaryPlus
  name: UnaryPlus
  nameWithType: Duration.UnaryPlus
  fullName: System.Windows.Duration.UnaryPlus
- uid: System.Windows.Duration.op_Equality*
  commentId: Overload:System.Windows.Duration.op_Equality
  name: Equality
  nameWithType: Duration.Equality
  fullName: System.Windows.Duration.Equality
- uid: System.Windows.Duration.op_Implicit*
  commentId: Overload:System.Windows.Duration.op_Implicit
  name: Implicit
  nameWithType: Duration.Implicit
  fullName: System.Windows.Duration.Implicit
  nameWithType.vb: Duration.Widening
  fullName.vb: System.Windows.Duration.Widening
  name.vb: Widening
- uid: System.Windows.Duration.Automatic*
  commentId: Overload:System.Windows.Duration.Automatic
  name: Automatic
  nameWithType: Duration.Automatic
  fullName: System.Windows.Duration.Automatic
- uid: System.Windows.Duration.Forever*
  commentId: Overload:System.Windows.Duration.Forever
  name: Forever
  nameWithType: Duration.Forever
  fullName: System.Windows.Duration.Forever
- uid: System.Windows.Duration.HasTimeSpan*
  commentId: Overload:System.Windows.Duration.HasTimeSpan
  name: HasTimeSpan
  nameWithType: Duration.HasTimeSpan
  fullName: System.Windows.Duration.HasTimeSpan
- uid: System.Windows.Duration.TimeSpan*
  commentId: Overload:System.Windows.Duration.TimeSpan
  name: TimeSpan
  nameWithType: Duration.TimeSpan
  fullName: System.Windows.Duration.TimeSpan
- uid: System.Windows.Duration.Equals*
  commentId: Overload:System.Windows.Duration.Equals
  name: Equals
  nameWithType: Duration.Equals
  fullName: System.Windows.Duration.Equals
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Duration.GetHashCode*
  commentId: Overload:System.Windows.Duration.GetHashCode
  name: GetHashCode
  nameWithType: Duration.GetHashCode
  fullName: System.Windows.Duration.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
