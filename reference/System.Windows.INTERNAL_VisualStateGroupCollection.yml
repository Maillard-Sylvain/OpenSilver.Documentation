### YamlMime:ManagedReference
items:
- uid: System.Windows.INTERNAL_VisualStateGroupCollection
  commentId: T:System.Windows.INTERNAL_VisualStateGroupCollection
  id: INTERNAL_VisualStateGroupCollection
  parent: System.Windows
  children:
  - System.Windows.INTERNAL_VisualStateGroupCollection.Add(System.Windows.VisualStateGroup)
  - System.Windows.INTERNAL_VisualStateGroupCollection.Clear
  - System.Windows.INTERNAL_VisualStateGroupCollection.Contains(System.Windows.VisualStateGroup)
  - System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  - System.Windows.INTERNAL_VisualStateGroupCollection.Count
  - System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator
  - System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf(System.Windows.VisualStateGroup)
  - System.Windows.INTERNAL_VisualStateGroupCollection.Insert(System.Int32,System.Windows.VisualStateGroup)
  - System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly
  - System.Windows.INTERNAL_VisualStateGroupCollection.Item(System.Int32)
  - System.Windows.INTERNAL_VisualStateGroupCollection.Remove(System.Windows.VisualStateGroup)
  - System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt(System.Int32)
  - System.Windows.INTERNAL_VisualStateGroupCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: INTERNAL_VisualStateGroupCollection
  nameWithType: INTERNAL_VisualStateGroupCollection
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: INTERNAL_VisualStateGroupCollection
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 32
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDo not use this class\n"
  example: []
  syntax:
    content: 'public class INTERNAL_VisualStateGroupCollection : IList<VisualStateGroup>, ICollection<VisualStateGroup>, IEnumerable<VisualStateGroup>, IEnumerable'
    content.vb: >-
      Public Class INTERNAL_VisualStateGroupCollection
          Implements IList(Of VisualStateGroup), ICollection(Of VisualStateGroup), IEnumerable(Of VisualStateGroup), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  - System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf(System.Windows.VisualStateGroup)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf(System.Windows.VisualStateGroup)
  id: IndexOf(System.Windows.VisualStateGroup)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: IndexOf(VisualStateGroup)
  nameWithType: INTERNAL_VisualStateGroupCollection.IndexOf(VisualStateGroup)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf(System.Windows.VisualStateGroup)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IndexOf
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 56
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public int IndexOf(VisualStateGroup item)
    parameters:
    - id: item
      type: System.Windows.VisualStateGroup
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(item As VisualStateGroup) As Integer
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf*
  implements:
  - System.Collections.Generic.IList{System.Windows.VisualStateGroup}.IndexOf(System.Windows.VisualStateGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Insert(System.Int32,System.Windows.VisualStateGroup)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.Insert(System.Int32,System.Windows.VisualStateGroup)
  id: Insert(System.Int32,System.Windows.VisualStateGroup)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Insert(Int32, VisualStateGroup)
  nameWithType: INTERNAL_VisualStateGroupCollection.Insert(Int32, VisualStateGroup)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Insert(System.Int32, System.Windows.VisualStateGroup)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Insert
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 74
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void Insert(int index, VisualStateGroup item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: System.Windows.VisualStateGroup
    content.vb: Public Sub Insert(index As Integer, item As VisualStateGroup)
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Insert*
  implements:
  - System.Collections.Generic.IList{System.Windows.VisualStateGroup}.Insert(System.Int32,System.Windows.VisualStateGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt(System.Int32)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: INTERNAL_VisualStateGroupCollection.RemoveAt(Int32)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RemoveAt
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt*
  implements:
  - System.Collections.Generic.IList{System.Windows.VisualStateGroup}.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Item(System.Int32)
  commentId: P:System.Windows.INTERNAL_VisualStateGroupCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: INTERNAL_VisualStateGroupCollection.Item[Int32]
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: this[]
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 84
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public VisualStateGroup this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Windows.VisualStateGroup
    content.vb: Public Property Item(index As Integer) As VisualStateGroup
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Item*
  implements:
  - System.Collections.Generic.IList{System.Windows.VisualStateGroup}.Item(System.Int32)
  nameWithType.vb: INTERNAL_VisualStateGroupCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.INTERNAL_VisualStateGroupCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Add(System.Windows.VisualStateGroup)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.Add(System.Windows.VisualStateGroup)
  id: Add(System.Windows.VisualStateGroup)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Add(VisualStateGroup)
  nameWithType: INTERNAL_VisualStateGroupCollection.Add(VisualStateGroup)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Add(System.Windows.VisualStateGroup)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Add
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void Add(VisualStateGroup item)
    parameters:
    - id: item
      type: System.Windows.VisualStateGroup
    content.vb: Public Sub Add(item As VisualStateGroup)
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Add*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Add(System.Windows.VisualStateGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Clear
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.Clear
  id: Clear
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: INTERNAL_VisualStateGroupCollection.Clear()
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Clear()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Clear
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 121
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Contains(System.Windows.VisualStateGroup)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.Contains(System.Windows.VisualStateGroup)
  id: Contains(System.Windows.VisualStateGroup)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Contains(VisualStateGroup)
  nameWithType: INTERNAL_VisualStateGroupCollection.Contains(VisualStateGroup)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Contains(System.Windows.VisualStateGroup)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Contains
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 127
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public bool Contains(VisualStateGroup item)
    parameters:
    - id: item
      type: System.Windows.VisualStateGroup
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As VisualStateGroup) As Boolean
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Contains(System.Windows.VisualStateGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  id: CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: CopyTo(VisualStateGroup[], Int32)
  nameWithType: INTERNAL_VisualStateGroupCollection.CopyTo(VisualStateGroup[], Int32)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo(System.Windows.VisualStateGroup[], System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CopyTo
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 132
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void CopyTo(VisualStateGroup[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Windows.VisualStateGroup[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As VisualStateGroup(), arrayIndex As Integer)
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  nameWithType.vb: INTERNAL_VisualStateGroupCollection.CopyTo(VisualStateGroup(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo(System.Windows.VisualStateGroup(), System.Int32)
  name.vb: CopyTo(VisualStateGroup(), Int32)
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Count
  commentId: P:System.Windows.INTERNAL_VisualStateGroupCollection.Count
  id: Count
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: INTERNAL_VisualStateGroupCollection.Count
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Count
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Count
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 137
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly
  commentId: P:System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: INTERNAL_VisualStateGroupCollection.IsReadOnly
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsReadOnly
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 142
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Remove(System.Windows.VisualStateGroup)
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.Remove(System.Windows.VisualStateGroup)
  id: Remove(System.Windows.VisualStateGroup)
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: Remove(VisualStateGroup)
  nameWithType: INTERNAL_VisualStateGroupCollection.Remove(VisualStateGroup)
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Remove(System.Windows.VisualStateGroup)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Remove
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 147
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public bool Remove(VisualStateGroup item)
    parameters:
    - id: item
      type: System.Windows.VisualStateGroup
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As VisualStateGroup) As Boolean
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Remove(System.Windows.VisualStateGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: INTERNAL_VisualStateGroupCollection.GetEnumerator()
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEnumerator
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 160
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public IEnumerator<VisualStateGroup> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.VisualStateGroup}
    content.vb: Public Function GetEnumerator As IEnumerator(Of VisualStateGroup)
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Windows.INTERNAL_VisualStateGroupCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.INTERNAL_VisualStateGroupCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: INTERNAL_VisualStateGroupCollection.IEnumerable.GetEnumerator()
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: global::System.Collections.IEnumerable.GetEnumerator
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/INTERNAL_VisualStateGroupCollection.cs
    startLine: 169
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function global::System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: System.Windows.INTERNAL_VisualStateGroupCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: INTERNAL_VisualStateGroupCollection.global::System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Windows.INTERNAL_VisualStateGroupCollection.global::System.Collections.IEnumerable.GetEnumerator()
  name.vb: global::System.Collections.IEnumerable.GetEnumerator()
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  commentId: T:System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VisualStateGroup>
  nameWithType: IList<VisualStateGroup>
  fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>
  nameWithType.vb: IList(Of VisualStateGroup)
  fullName.vb: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup)
  name.vb: IList(Of VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  commentId: T:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<VisualStateGroup>
  nameWithType: ICollection<VisualStateGroup>
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>
  nameWithType.vb: ICollection(Of VisualStateGroup)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup)
  name.vb: ICollection(Of VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}
  commentId: T:System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<VisualStateGroup>
  nameWithType: IEnumerable<VisualStateGroup>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.VisualStateGroup>
  nameWithType.vb: IEnumerable(Of VisualStateGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Windows.VisualStateGroup)
  name.vb: IEnumerable(Of VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf
  name: IndexOf
  nameWithType: INTERNAL_VisualStateGroupCollection.IndexOf
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.IndexOf
- uid: System.Collections.Generic.IList{System.Windows.VisualStateGroup}.IndexOf(System.Windows.VisualStateGroup)
  commentId: M:System.Collections.Generic.IList{System.Windows.VisualStateGroup}.IndexOf(System.Windows.VisualStateGroup)
  parent: System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(VisualStateGroup)
  nameWithType: IList<VisualStateGroup>.IndexOf(VisualStateGroup)
  fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.IndexOf(System.Windows.VisualStateGroup)
  nameWithType.vb: IList(Of VisualStateGroup).IndexOf(VisualStateGroup)
  fullName.vb: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).IndexOf(System.Windows.VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<VisualStateGroup>.IndexOf
    fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of VisualStateGroup).IndexOf
    fullName: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.VisualStateGroup
  commentId: T:System.Windows.VisualStateGroup
  parent: System.Windows
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Insert*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Insert
  name: Insert
  nameWithType: INTERNAL_VisualStateGroupCollection.Insert
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Insert
- uid: System.Collections.Generic.IList{System.Windows.VisualStateGroup}.Insert(System.Int32,System.Windows.VisualStateGroup)
  commentId: M:System.Collections.Generic.IList{System.Windows.VisualStateGroup}.Insert(System.Int32,System.Windows.VisualStateGroup)
  parent: System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, VisualStateGroup)
  nameWithType: IList<VisualStateGroup>.Insert(Int32, VisualStateGroup)
  fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.Insert(System.Int32, System.Windows.VisualStateGroup)
  nameWithType.vb: IList(Of VisualStateGroup).Insert(Int32, VisualStateGroup)
  fullName.vb: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).Insert(System.Int32, System.Windows.VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<VisualStateGroup>.Insert
    fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of VisualStateGroup).Insert
    fullName: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt
  name: RemoveAt
  nameWithType: INTERNAL_VisualStateGroupCollection.RemoveAt
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.RemoveAt
- uid: System.Collections.Generic.IList{System.Windows.VisualStateGroup}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{System.Windows.VisualStateGroup}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<VisualStateGroup>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of VisualStateGroup).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<VisualStateGroup>.RemoveAt
    fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of VisualStateGroup).RemoveAt
    fullName: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Item*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Item
  name: Item
  nameWithType: INTERNAL_VisualStateGroupCollection.Item
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Item
- uid: System.Collections.Generic.IList{System.Windows.VisualStateGroup}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{System.Windows.VisualStateGroup}.Item(System.Int32)
  parent: System.Collections.Generic.IList{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<VisualStateGroup>.Item[Int32]
  fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.Item[System.Int32]
  nameWithType.vb: IList(Of VisualStateGroup).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<VisualStateGroup>.Item
    fullName: System.Collections.Generic.IList<System.Windows.VisualStateGroup>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of VisualStateGroup).Item
    fullName: System.Collections.Generic.IList(Of System.Windows.VisualStateGroup).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Add*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Add
  name: Add
  nameWithType: INTERNAL_VisualStateGroupCollection.Add
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Add
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Add(System.Windows.VisualStateGroup)
  commentId: M:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Add(System.Windows.VisualStateGroup)
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(VisualStateGroup)
  nameWithType: ICollection<VisualStateGroup>.Add(VisualStateGroup)
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Add(System.Windows.VisualStateGroup)
  nameWithType.vb: ICollection(Of VisualStateGroup).Add(VisualStateGroup)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Add(System.Windows.VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<VisualStateGroup>.Add
    fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of VisualStateGroup).Add
    fullName: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Clear*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Clear
  name: Clear
  nameWithType: INTERNAL_VisualStateGroupCollection.Clear
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Clear
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Clear
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<VisualStateGroup>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Clear()
  nameWithType.vb: ICollection(Of VisualStateGroup).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<VisualStateGroup>.Clear
    fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of VisualStateGroup).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Contains*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Contains
  name: Contains
  nameWithType: INTERNAL_VisualStateGroupCollection.Contains
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Contains
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Contains(System.Windows.VisualStateGroup)
  commentId: M:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Contains(System.Windows.VisualStateGroup)
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(VisualStateGroup)
  nameWithType: ICollection<VisualStateGroup>.Contains(VisualStateGroup)
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Contains(System.Windows.VisualStateGroup)
  nameWithType.vb: ICollection(Of VisualStateGroup).Contains(VisualStateGroup)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Contains(System.Windows.VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<VisualStateGroup>.Contains
    fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of VisualStateGroup).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo
  name: CopyTo
  nameWithType: INTERNAL_VisualStateGroupCollection.CopyTo
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.CopyTo
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.CopyTo(System.Windows.VisualStateGroup[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(VisualStateGroup[], Int32)
  nameWithType: ICollection<VisualStateGroup>.CopyTo(VisualStateGroup[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.CopyTo(System.Windows.VisualStateGroup[], System.Int32)
  nameWithType.vb: ICollection(Of VisualStateGroup).CopyTo(VisualStateGroup(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).CopyTo(System.Windows.VisualStateGroup(), System.Int32)
  name.vb: CopyTo(VisualStateGroup(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<VisualStateGroup>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of VisualStateGroup).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.VisualStateGroup[]
  isExternal: true
  name: VisualStateGroup[]
  nameWithType: VisualStateGroup[]
  fullName: System.Windows.VisualStateGroup[]
  nameWithType.vb: VisualStateGroup()
  fullName.vb: System.Windows.VisualStateGroup()
  name.vb: VisualStateGroup()
  spec.csharp:
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Count*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Count
  name: Count
  nameWithType: INTERNAL_VisualStateGroupCollection.Count
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Count
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Count
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<VisualStateGroup>.Count
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Count
  nameWithType.vb: ICollection(Of VisualStateGroup).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly
  name: IsReadOnly
  nameWithType: INTERNAL_VisualStateGroupCollection.IsReadOnly
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<VisualStateGroup>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.IsReadOnly
  nameWithType.vb: ICollection(Of VisualStateGroup).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.Remove*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.Remove
  name: Remove
  nameWithType: INTERNAL_VisualStateGroupCollection.Remove
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.Remove
- uid: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Remove(System.Windows.VisualStateGroup)
  commentId: M:System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}.Remove(System.Windows.VisualStateGroup)
  parent: System.Collections.Generic.ICollection{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(VisualStateGroup)
  nameWithType: ICollection<VisualStateGroup>.Remove(VisualStateGroup)
  fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Remove(System.Windows.VisualStateGroup)
  nameWithType.vb: ICollection(Of VisualStateGroup).Remove(VisualStateGroup)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Remove(System.Windows.VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<VisualStateGroup>.Remove
    fullName: System.Collections.Generic.ICollection<System.Windows.VisualStateGroup>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of VisualStateGroup).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Windows.VisualStateGroup).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: INTERNAL_VisualStateGroupCollection.GetEnumerator
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Windows.VisualStateGroup}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<VisualStateGroup>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Windows.VisualStateGroup>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of VisualStateGroup).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Windows.VisualStateGroup).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<VisualStateGroup>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Windows.VisualStateGroup>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of VisualStateGroup).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Windows.VisualStateGroup).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Windows.VisualStateGroup}
  commentId: T:System.Collections.Generic.IEnumerator{System.Windows.VisualStateGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<VisualStateGroup>
  nameWithType: IEnumerator<VisualStateGroup>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.VisualStateGroup>
  nameWithType.vb: IEnumerator(Of VisualStateGroup)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Windows.VisualStateGroup)
  name.vb: IEnumerator(Of VisualStateGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.VisualStateGroup
    name: VisualStateGroup
    nameWithType: VisualStateGroup
    fullName: System.Windows.VisualStateGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.INTERNAL_VisualStateGroupCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:System.Windows.INTERNAL_VisualStateGroupCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: INTERNAL_VisualStateGroupCollection.IEnumerable.GetEnumerator
  fullName: System.Windows.INTERNAL_VisualStateGroupCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: INTERNAL_VisualStateGroupCollection.global::System.Collections.IEnumerable.GetEnumerator
  fullName.vb: System.Windows.INTERNAL_VisualStateGroupCollection.global::System.Collections.IEnumerable.GetEnumerator
  name.vb: global::System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
