### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.RepeatBehavior
  commentId: T:System.Windows.Media.Animation.RepeatBehavior
  id: RepeatBehavior
  parent: System.Windows.Media.Animation
  children:
  - System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)
  - System.Windows.Media.Animation.RepeatBehavior.Count
  - System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  - System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.Forever
  - System.Windows.Media.Animation.RepeatBehavior.HasCount
  - System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.Type
  langs:
  - csharp
  - vb
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RepeatBehavior
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nDescribes how a Windows.UI.Xaml.Media.Animation.Timeline repeats its simple\nduration.\n"
  example: []
  syntax:
    content: public struct RepeatBehavior
    content.vb: Public Structure RepeatBehavior
  inheritedMembers:
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: RepeatBehavior(Double)
  nameWithType: RepeatBehavior.RepeatBehavior(Double)
  fullName: System.Windows.Media.Animation.RepeatBehavior.RepeatBehavior(System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nInitializes a new instance of the Windows.UI.Xaml.Media.Animation.RepeatBehavior\nstructure with the specified iteration count.\n"
  example: []
  syntax:
    content: public RepeatBehavior(double count)
    parameters:
    - id: count
      type: System.Double
      description: "\nA number greater than or equal to 0 that specifies the number of iterations\nfor an animation.\n"
    content.vb: Public Sub New(count As Double)
  overload: System.Windows.Media.Animation.RepeatBehavior.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  id: op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Inequality(RepeatBehavior, RepeatBehavior)
  nameWithType: RepeatBehavior.Inequality(RepeatBehavior, RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Inequality(System.Windows.Media.Animation.RepeatBehavior, System.Windows.Media.Animation.RepeatBehavior)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 124
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the two Windows.UI.Xaml.Media.Animation.RepeatBehavior\nvalues are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(RepeatBehavior repeatBehavior1, RepeatBehavior repeatBehavior2)
    parameters:
    - id: repeatBehavior1
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The first value to compare.
    - id: repeatBehavior2
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The second value to compare.
    return:
      type: System.Boolean
      description: "\ntrue if repeatBehavior1 and repeatBehavior2 are different types or the repeat\nbehavior properties are not equal; otherwise, false.\n"
    content.vb: Public Shared Operator <>(repeatBehavior1 As RepeatBehavior, repeatBehavior2 As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  id: op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equality(RepeatBehavior, RepeatBehavior)
  nameWithType: RepeatBehavior.Equality(RepeatBehavior, RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equality(System.Windows.Media.Animation.RepeatBehavior, System.Windows.Media.Animation.RepeatBehavior)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 162
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the two specified Windows.UI.Xaml.Media.Animation.RepeatBehavior\nvalues are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(RepeatBehavior repeatBehavior1, RepeatBehavior repeatBehavior2)
    parameters:
    - id: repeatBehavior1
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The first value to compare.
    - id: repeatBehavior2
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The second value to compare.
    return:
      type: System.Boolean
      description: "\ntrue if both the type and repeat behavior of repeatBehavior1 are equal to\nthat of repeatBehavior2; otherwise, false.\n"
    content.vb: Public Shared Operator =(repeatBehavior1 As RepeatBehavior, repeatBehavior2 As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Animation.RepeatBehavior.Count
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.Count
  id: Count
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RepeatBehavior.Count
  fullName: System.Windows.Media.Animation.RepeatBehavior.Count
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Count
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 176
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets the number of times a Windows.UI.Xaml.Media.Animation.Timeline should\nrepeat.\n"
  example: []
  syntax:
    content: public double Count { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Count As Double
  overload: System.Windows.Media.Animation.RepeatBehavior.Count*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.Forever
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.Forever
  id: Forever
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Forever
  nameWithType: RepeatBehavior.Forever
  fullName: System.Windows.Media.Animation.RepeatBehavior.Forever
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Forever
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 219
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets a Windows.UI.Xaml.Media.Animation.RepeatBehavior that specifies an infinite\nnumber of repetitions.\n"
  example: []
  syntax:
    content: public static RepeatBehavior Forever { get; }
    parameters: []
    return:
      type: System.Windows.Media.Animation.RepeatBehavior
    content.vb: Public Shared ReadOnly Property Forever As RepeatBehavior
  overload: System.Windows.Media.Animation.RepeatBehavior.Forever*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.HasCount
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.HasCount
  id: HasCount
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: HasCount
  nameWithType: RepeatBehavior.HasCount
  fullName: System.Windows.Media.Animation.RepeatBehavior.HasCount
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HasCount
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 234
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets a value that indicates whether the repeat behavior has a specified iteration\ncount.\n"
  example: []
  syntax:
    content: public bool HasCount { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasCount As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.HasCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.Type
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.Type
  id: Type
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RepeatBehavior.Type
  fullName: System.Windows.Media.Animation.RepeatBehavior.Type
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Type
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 249
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets or sets one of the Windows.UI.Xaml.Media.Animation.RepeatBehaviorType\nvalues that describes the way behavior repeats.\n"
  example: []
  syntax:
    content: public RepeatBehaviorType Type { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Animation.RepeatBehaviorType
    content.vb: Public Property Type As RepeatBehaviorType
  overload: System.Windows.Media.Animation.RepeatBehavior.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RepeatBehavior.Equals(Object)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 291
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the specified object is equal to this Windows.UI.Xaml.Media.Animation.RepeatBehavior.\n"
  example: []
  syntax:
    content: public override bool Equals(object value)
    parameters:
    - id: value
      type: System.Object
      description: The object to compare with this Windows.UI.Xaml.Media.Animation.RepeatBehavior.
    return:
      type: System.Boolean
      description: "\ntrue if value is a Windows.UI.Xaml.Media.Animation.RepeatBehavior that represents\nthe same repeat behavior as this Windows.UI.Xaml.Media.Animation.RepeatBehavior;\notherwise, false.\n"
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.Media.Animation.RepeatBehavior.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  id: Equals(System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equals(RepeatBehavior)
  nameWithType: RepeatBehavior.Equals(RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 309
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nReturns a value that indicates whether the specified Windows.UI.Xaml.Media.Animation.RepeatBehavior\nis equal to this Windows.UI.Xaml.Media.Animation.RepeatBehavior.\n"
  example: []
  syntax:
    content: public bool Equals(RepeatBehavior repeatBehavior)
    parameters:
    - id: repeatBehavior
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The value to compare to this Windows.UI.Xaml.Media.Animation.RepeatBehavior.
    return:
      type: System.Boolean
      description: "\ntrue if both the type and repeat behavior of repeatBehavior are equal to\nthis Windows.UI.Xaml.Media.Animation.RepeatBehavior; otherwise, false.\n"
    content.vb: Public Function Equals(repeatBehavior As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  id: Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equals(RepeatBehavior, RepeatBehavior)
  nameWithType: RepeatBehavior.Equals(RepeatBehavior, RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior, System.Windows.Media.Animation.RepeatBehavior)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Media.Animation/RepeatBehavior.cs
    startLine: 324
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the two specified Windows.UI.Xaml.Media.Animation.RepeatBehavior\nvalues are equal.\n"
  example: []
  syntax:
    content: public static bool Equals(RepeatBehavior repeatBehavior1, RepeatBehavior repeatBehavior2)
    parameters:
    - id: repeatBehavior1
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The first value to compare.
    - id: repeatBehavior2
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The second value to compare.
    return:
      type: System.Boolean
      description: "\ntrue if both the type and repeat behavior of repeatBehavior1 are equal to\nthat of repeatBehavior2; otherwise, false.\n"
    content.vb: Public Shared Function Equals(repeatBehavior1 As RepeatBehavior, repeatBehavior2 As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Media.Animation
  commentId: N:System.Windows.Media.Animation
  name: System.Windows.Media.Animation
  nameWithType: System.Windows.Media.Animation
  fullName: System.Windows.Media.Animation
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Media.Animation.RepeatBehavior.#ctor*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.#ctor
  name: RepeatBehavior
  nameWithType: RepeatBehavior.RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior.RepeatBehavior
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Inequality*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.op_Inequality
  name: Inequality
  nameWithType: RepeatBehavior.Inequality
  fullName: System.Windows.Media.Animation.RepeatBehavior.Inequality
- uid: System.Windows.Media.Animation.RepeatBehavior
  commentId: T:System.Windows.Media.Animation.RepeatBehavior
  parent: System.Windows.Media.Animation
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Equality*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.op_Equality
  name: Equality
  nameWithType: RepeatBehavior.Equality
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equality
- uid: System.Windows.Media.Animation.RepeatBehavior.Count*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Count
  name: Count
  nameWithType: RepeatBehavior.Count
  fullName: System.Windows.Media.Animation.RepeatBehavior.Count
- uid: System.Windows.Media.Animation.RepeatBehavior.Forever*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Forever
  name: Forever
  nameWithType: RepeatBehavior.Forever
  fullName: System.Windows.Media.Animation.RepeatBehavior.Forever
- uid: System.Windows.Media.Animation.RepeatBehavior.HasCount*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.HasCount
  name: HasCount
  nameWithType: RepeatBehavior.HasCount
  fullName: System.Windows.Media.Animation.RepeatBehavior.HasCount
- uid: System.Windows.Media.Animation.RepeatBehavior.Type*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Type
  name: Type
  nameWithType: RepeatBehavior.Type
  fullName: System.Windows.Media.Animation.RepeatBehavior.Type
- uid: System.Windows.Media.Animation.RepeatBehaviorType
  commentId: T:System.Windows.Media.Animation.RepeatBehaviorType
  parent: System.Windows.Media.Animation
  name: RepeatBehaviorType
  nameWithType: RepeatBehaviorType
  fullName: System.Windows.Media.Animation.RepeatBehaviorType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Equals
  name: Equals
  nameWithType: RepeatBehavior.Equals
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals
