### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.NavigationFailedEventArgs
  commentId: T:System.Windows.Navigation.NavigationFailedEventArgs
  id: NavigationFailedEventArgs
  parent: System.Windows.Navigation
  children:
  - System.Windows.Navigation.NavigationFailedEventArgs.#ctor(System.Exception,System.Boolean,System.Uri)
  - System.Windows.Navigation.NavigationFailedEventArgs.Exception
  - System.Windows.Navigation.NavigationFailedEventArgs.Handled
  - System.Windows.Navigation.NavigationFailedEventArgs.Uri
  langs:
  - csharp
  - vb
  name: NavigationFailedEventArgs
  nameWithType: NavigationFailedEventArgs
  fullName: System.Windows.Navigation.NavigationFailedEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NavigationFailedEventArgs
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Navigation
  summary: "\nProvides data for the NavigationFailed event of the NavigationService class and the NavigationFailed event of the Frame class."
  example: []
  syntax:
    content: 'public sealed class NavigationFailedEventArgs : EventArgs'
    content.vb: >-
      Public NotInheritable Class NavigationFailedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Navigation.NavigationFailedEventArgs.#ctor(System.Exception,System.Boolean,System.Uri)
  commentId: M:System.Windows.Navigation.NavigationFailedEventArgs.#ctor(System.Exception,System.Boolean,System.Uri)
  id: '#ctor(System.Exception,System.Boolean,System.Uri)'
  parent: System.Windows.Navigation.NavigationFailedEventArgs
  langs:
  - csharp
  - vb
  name: NavigationFailedEventArgs(Exception, Boolean, Uri)
  nameWithType: NavigationFailedEventArgs.NavigationFailedEventArgs(Exception, Boolean, Uri)
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.NavigationFailedEventArgs(System.Exception, System.Boolean, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Windows.Navigation
  summary: "\nInitializes a new instance of the NavigationFailedEventArgs.\n"
  example: []
  syntax:
    content: public NavigationFailedEventArgs(Exception exception, bool handled, Uri uri)
    parameters:
    - id: exception
      type: System.Exception
    - id: handled
      type: System.Boolean
    - id: uri
      type: System.Uri
    content.vb: Public Sub New(exception As Exception, handled As Boolean, uri As Uri)
  overload: System.Windows.Navigation.NavigationFailedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Navigation.NavigationFailedEventArgs.Exception
  commentId: P:System.Windows.Navigation.NavigationFailedEventArgs.Exception
  id: Exception
  parent: System.Windows.Navigation.NavigationFailedEventArgs
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: NavigationFailedEventArgs.Exception
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.Exception
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Exception
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Navigation
  summary: "\nGets the error from the failed navigation.\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: System.Windows.Navigation.NavigationFailedEventArgs.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Navigation.NavigationFailedEventArgs.Handled
  commentId: P:System.Windows.Navigation.NavigationFailedEventArgs.Handled
  id: Handled
  parent: System.Windows.Navigation.NavigationFailedEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  nameWithType: NavigationFailedEventArgs.Handled
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Handled
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
    startLine: 59
  assemblies:
  - OpenSilver
  namespace: System.Windows.Navigation
  summary: "\nGets or sets a value that indicates whether the failure event has been handled.\n"
  example: []
  syntax:
    content: public bool Handled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Handled As Boolean
  overload: System.Windows.Navigation.NavigationFailedEventArgs.Handled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Navigation.NavigationFailedEventArgs.Uri
  commentId: P:System.Windows.Navigation.NavigationFailedEventArgs.Uri
  id: Uri
  parent: System.Windows.Navigation.NavigationFailedEventArgs
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: NavigationFailedEventArgs.Uri
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.Uri
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Uri
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml.Navigation/NavigationFailedEventArgs.cs
    startLine: 69
  assemblies:
  - OpenSilver
  namespace: System.Windows.Navigation
  summary: "\nGets the uniform resource identifier (URI) for the content that could not be navigated to.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: System.Windows.Navigation.NavigationFailedEventArgs.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Navigation
  commentId: N:System.Windows.Navigation
  name: System.Windows.Navigation
  nameWithType: System.Windows.Navigation
  fullName: System.Windows.Navigation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Navigation.NavigationFailedEventArgs.#ctor*
  commentId: Overload:System.Windows.Navigation.NavigationFailedEventArgs.#ctor
  name: NavigationFailedEventArgs
  nameWithType: NavigationFailedEventArgs.NavigationFailedEventArgs
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.NavigationFailedEventArgs
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Navigation.NavigationFailedEventArgs.Exception*
  commentId: Overload:System.Windows.Navigation.NavigationFailedEventArgs.Exception
  name: Exception
  nameWithType: NavigationFailedEventArgs.Exception
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.Exception
- uid: System.Windows.Navigation.NavigationFailedEventArgs.Handled*
  commentId: Overload:System.Windows.Navigation.NavigationFailedEventArgs.Handled
  name: Handled
  nameWithType: NavigationFailedEventArgs.Handled
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.Handled
- uid: System.Windows.Navigation.NavigationFailedEventArgs.Uri*
  commentId: Overload:System.Windows.Navigation.NavigationFailedEventArgs.Uri
  name: Uri
  nameWithType: NavigationFailedEventArgs.Uri
  fullName: System.Windows.Navigation.NavigationFailedEventArgs.Uri
