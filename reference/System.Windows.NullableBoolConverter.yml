### YamlMime:ManagedReference
items:
- uid: System.Windows.NullableBoolConverter
  commentId: T:System.Windows.NullableBoolConverter
  id: NullableBoolConverter
  parent: System.Windows
  children:
  - System.Windows.NullableBoolConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  - System.Windows.NullableBoolConverter.CanConvertTo(ITypeDescriptorContext,Type)
  - System.Windows.NullableBoolConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,System.Object)
  - System.Windows.NullableBoolConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,System.Object,Type)
  langs:
  - csharp
  - vb
  name: NullableBoolConverter
  nameWithType: NullableBoolConverter
  fullName: System.Windows.NullableBoolConverter
  type: Class
  source:
    id: NullableBoolConverter
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\NullableBoolConverter.cs
    startLine: 27
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nConverts <see cref=\"!:Nullable&lt;T>\"></see> types (using the <see cref=\"!:System.Boolean\"></see> type constraint on\nthe generic) from strings.\n"
  example: []
  syntax:
    content: 'public sealed class NullableBoolConverter : TypeConverter'
    content.vb: >-
      Public NotInheritable Class NullableBoolConverter
          Inherits TypeConverter
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.NullableBoolConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  commentId: M:System.Windows.NullableBoolConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  id: CanConvertFrom(ITypeDescriptorContext,Type)
  parent: System.Windows.NullableBoolConverter
  langs:
  - csharp
  - vb
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: NullableBoolConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.Windows.NullableBoolConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  type: Method
  source:
    id: CanConvertFrom
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\NullableBoolConverter.cs
    startLine: 45
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether this converter can convert an object of the specified type\nto the <see cref=\"!:Nullable&lt;T>\"></see> type (using the <see cref=\"!:System.Boolean\"></see> type constraint on the\ngeneric).\n"
  example: []
  syntax:
    content: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
      description: "\nAn <see cref=\"!:ITypeDescriptorContext\"></see> that provides a format context.\n"
    - id: sourceType
      type: Type
      description: "\nThe type that you want to convert from.\n"
    return:
      type: System.Boolean
      description: "\ntrue if sourceType is a <see cref=\"!:System.String\"></see>, <see cref=\"!:System.Boolean\"></see>, or a <see cref=\"!:Nullable&lt;T>\"></see>\ntype (using the <see cref=\"!:System.Boolean\"></see> type constraint on the generic) that can be assigned\nfrom sourceType; otherwise, false.\n"
    content.vb: Public Overrides Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean
  overload: System.Windows.NullableBoolConverter.CanConvertFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.NullableBoolConverter.CanConvertTo(ITypeDescriptorContext,Type)
  commentId: M:System.Windows.NullableBoolConverter.CanConvertTo(ITypeDescriptorContext,Type)
  id: CanConvertTo(ITypeDescriptorContext,Type)
  parent: System.Windows.NullableBoolConverter
  langs:
  - csharp
  - vb
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: NullableBoolConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.Windows.NullableBoolConverter.CanConvertTo(ITypeDescriptorContext, Type)
  type: Method
  source:
    id: CanConvertTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\NullableBoolConverter.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nAlways returns false.\n"
  example: []
  syntax:
    content: public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
    - id: destinationType
      type: Type
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvertTo(context As ITypeDescriptorContext, destinationType As Type) As Boolean
  overload: System.Windows.NullableBoolConverter.CanConvertTo*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.NullableBoolConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,System.Object)
  commentId: M:System.Windows.NullableBoolConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,System.Object)
  id: ConvertFrom(ITypeDescriptorContext,CultureInfo,System.Object)
  parent: System.Windows.NullableBoolConverter
  langs:
  - csharp
  - vb
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: NullableBoolConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: System.Windows.NullableBoolConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, System.Object)
  type: Method
  source:
    id: ConvertFrom
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\NullableBoolConverter.cs
    startLine: 89
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nConverts the specified object to a <see cref=\"!:Nullable&lt;T>\"></see> type (using the <see cref=\"!:System.Boolean\"></see>\ntype constraint on the generic).\n"
  example: []
  syntax:
    content: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
    parameters:
    - id: context
      type: ITypeDescriptorContext
      description: "\nAn <see cref=\"!:ITypeDescriptorContext\"></see> that provides a format context.\n"
    - id: culture
      type: CultureInfo
      description: "\nThe <see cref=\"!:CultureInfo\"></see> to use as the current culture.\n"
    - id: value
      type: System.Object
      description: "\nThe object to convert to a <see cref=\"!:Nullable&lt;T>\"></see> type (using the <see cref=\"!:System.Boolean\"></see> type\nconstraint on the generic).\n"
    return:
      type: System.Object
      description: "\nA <see cref=\"!:Nullable&lt;T>\"></see> type (using the <see cref=\"!:System.Boolean\"></see> type constraint on the generic)\nthat represents the converted object.\n"
    content.vb: Public Overrides Function ConvertFrom(context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object
  overload: System.Windows.NullableBoolConverter.ConvertFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.NullableBoolConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,System.Object,Type)
  commentId: M:System.Windows.NullableBoolConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,System.Object,Type)
  id: ConvertTo(ITypeDescriptorContext,CultureInfo,System.Object,Type)
  parent: System.Windows.NullableBoolConverter
  langs:
  - csharp
  - vb
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: NullableBoolConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: System.Windows.NullableBoolConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, System.Object, Type)
  type: Method
  source:
    id: ConvertTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\NullableBoolConverter.cs
    startLine: 123
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nNot implemented.\n"
  example: []
  syntax:
    content: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
    - id: culture
      type: CultureInfo
    - id: value
      type: System.Object
    - id: destinationType
      type: Type
    return:
      type: System.Object
    content.vb: Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object
  overload: System.Windows.NullableBoolConverter.ConvertTo*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.NullableBoolConverter.CanConvertFrom*
  commentId: Overload:System.Windows.NullableBoolConverter.CanConvertFrom
  name: CanConvertFrom
  nameWithType: NullableBoolConverter.CanConvertFrom
  fullName: System.Windows.NullableBoolConverter.CanConvertFrom
- uid: ITypeDescriptorContext
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: ITypeDescriptorContext
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.NullableBoolConverter.CanConvertTo*
  commentId: Overload:System.Windows.NullableBoolConverter.CanConvertTo
  name: CanConvertTo
  nameWithType: NullableBoolConverter.CanConvertTo
  fullName: System.Windows.NullableBoolConverter.CanConvertTo
- uid: System.Windows.NullableBoolConverter.ConvertFrom*
  commentId: Overload:System.Windows.NullableBoolConverter.ConvertFrom
  name: ConvertFrom
  nameWithType: NullableBoolConverter.ConvertFrom
  fullName: System.Windows.NullableBoolConverter.ConvertFrom
- uid: CultureInfo
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: CultureInfo
- uid: System.Windows.NullableBoolConverter.ConvertTo*
  commentId: Overload:System.Windows.NullableBoolConverter.ConvertTo
  name: ConvertTo
  nameWithType: NullableBoolConverter.ConvertTo
  fullName: System.Windows.NullableBoolConverter.ConvertTo
