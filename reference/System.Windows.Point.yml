### YamlMime:ManagedReference
items:
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  id: Point
  parent: System.Windows
  children:
  - System.Windows.Point.#ctor(System.Double,System.Double)
  - System.Windows.Point.Equals(System.Object)
  - System.Windows.Point.Equals(System.Windows.Point)
  - System.Windows.Point.GetHashCode
  - System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.Parse(System.String)
  - System.Windows.Point.ToString
  - System.Windows.Point.ToString(IFormatProvider)
  - System.Windows.Point.X
  - System.Windows.Point.Y
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
  type: Struct
  source:
    id: Point
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 27
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents an x- and y-coordinate pair in two-dimensional space. Can also represent\na logical point for certain property usages.\n"
  example: []
  syntax:
    content: 'public struct Point : IFormattable'
    content.vb: >-
      Public Structure Point
          Implements IFormattable
  implements:
  - IFormattable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Point.#ctor(System.Double,System.Double)
  commentId: M:System.Windows.Point.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Point(Double, Double)
  nameWithType: Point.Point(Double, Double)
  fullName: System.Windows.Point.Point(System.Double, System.Double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 42
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the specified values.\ncontains the specified values.\n"
  example: []
  syntax:
    content: public Point(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: "\nThe x-coordinate value of the <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    - id: y
      type: System.Double
      description: "\nThe y-coordinate value of the <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Sub New(x As Double, y As Double)
  overload: System.Windows.Point.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Parse(System.String)
  commentId: M:System.Windows.Point.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Point.Parse(String)
  fullName: System.Windows.Point.Parse(System.String)
  type: Method
  source:
    id: Parse
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 53
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nParse - returns an instance converted from the provided string using\nthe culture &quot;en-US&quot;\n"
  example: []
  syntax:
    content: public static Point Parse(string source)
    parameters:
    - id: source
      type: System.String
      description: 'string with Point data '
    return:
      type: System.Windows.Point
    content.vb: Public Shared Function Parse(source As String) As Point
  overload: System.Windows.Point.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.X
  commentId: P:System.Windows.Point.X
  id: X
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Point.X
  fullName: System.Windows.Point.X
  type: Property
  source:
    id: X
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 81
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>\nstructure.\n"
  example: []
  syntax:
    content: public double X { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\nThe default value is 0.\n"
    content.vb: Public Property X As Double
  overload: System.Windows.Point.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Y
  commentId: P:System.Windows.Point.Y
  id: Y
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Point.Y
  fullName: System.Windows.Point.Y
  type: Property
  source:
    id: Y
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 100
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double Y { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\nThe default value is 0.\n"
    content.vb: Public Property Y As Double
  overload: System.Windows.Point.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Equals(System.Object)
  commentId: M:System.Windows.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: System.Windows.Point.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 123
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether the specified object is a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and whether\nit contains the same values as this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: "\nThe object to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if obj is a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and contains the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values as this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false.\n"
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overload: System.Windows.Point.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Point.Equals(System.Windows.Point)
  commentId: M:System.Windows.Point.Equals(System.Windows.Point)
  id: Equals(System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equals(Point)
  nameWithType: Point.Equals(Point)
  fullName: System.Windows.Point.Equals(System.Windows.Point)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 143
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for equality.\n"
  example: []
  syntax:
    content: public bool Equals(Point value)
    parameters:
    - id: value
      type: System.Windows.Point
      description: "\nThe point to compare to this instance.\n"
    return:
      type: System.Boolean
      description: "\ntrue if both <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures contain the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values; otherwise, false.\n"
    content.vb: Public Function Equals(value As Point) As Boolean
  overload: System.Windows.Point.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.GetHashCode
  commentId: M:System.Windows.Point.GetHashCode
  id: GetHashCode
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: System.Windows.Point.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 154
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the hash code for this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nThe hash code for this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: System.Windows.Point.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Point.ToString
  commentId: M:System.Windows.Point.ToString
  id: ToString
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Point.ToString()
  fullName: System.Windows.Point.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 166
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a <see cref=\"!:System.String\"></see> representation of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <see cref=\"!:System.String\"></see> containing the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Overrides Function ToString As String
  overload: System.Windows.Point.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Point.ToString(IFormatProvider)
  commentId: M:System.Windows.Point.ToString(IFormatProvider)
  id: ToString(IFormatProvider)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Point.ToString(IFormatProvider)
  fullName: System.Windows.Point.ToString(IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 181
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a <see cref=\"!:System.String\"></see> representation of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type: IFormatProvider
      description: "\nCulture-specific formatting information.\n"
    return:
      type: System.String
      description: "\nA <see cref=\"!:System.String\"></see> containing the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Function ToString(provider As IFormatProvider) As String
  overload: System.Windows.Point.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  id: op_Equality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equality(Point, Point)
  nameWithType: Point.Equality(Point, Point)
  fullName: System.Windows.Point.Equality(System.Windows.Point, System.Windows.Point)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 213
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe first <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to compare.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe second <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if both the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values of\npoint1 and point2 are equal; otherwise, false.\n"
    content.vb: Public Shared Operator =(point1 As Point, point2 As Point) As Boolean
  overload: System.Windows.Point.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  id: op_Inequality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Inequality(Point, Point)
  nameWithType: Point.Inequality(Point, Point)
  fullName: System.Windows.Point.Inequality(System.Windows.Point, System.Windows.Point)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Point.cs
    startLine: 233
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for inequality\n"
  example: []
  syntax:
    content: public static bool operator !=(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe first point to compare.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe second point to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if point1 and point2 have different <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues; false if point1 and point2 have the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues.\n"
    content.vb: Public Shared Operator <>(point1 As Point, point2 As Point) As Boolean
  overload: System.Windows.Point.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: IFormattable
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: IFormattable
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Point.#ctor*
  commentId: Overload:System.Windows.Point.#ctor
  name: Point
  nameWithType: Point.Point
  fullName: System.Windows.Point.Point
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Point.Parse*
  commentId: Overload:System.Windows.Point.Parse
  name: Parse
  nameWithType: Point.Parse
  fullName: System.Windows.Point.Parse
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Point.X
  commentId: P:System.Windows.Point.X
  isExternal: true
- uid: System.Windows.Point.X*
  commentId: Overload:System.Windows.Point.X
  name: X
  nameWithType: Point.X
  fullName: System.Windows.Point.X
- uid: System.Windows.Point.Y
  commentId: P:System.Windows.Point.Y
  isExternal: true
- uid: System.Windows.Point.Y*
  commentId: Overload:System.Windows.Point.Y
  name: Y
  nameWithType: Point.Y
  fullName: System.Windows.Point.Y
- uid: System.Windows.Point.Equals*
  commentId: Overload:System.Windows.Point.Equals
  name: Equals
  nameWithType: Point.Equals
  fullName: System.Windows.Point.Equals
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Point.GetHashCode*
  commentId: Overload:System.Windows.Point.GetHashCode
  name: GetHashCode
  nameWithType: Point.GetHashCode
  fullName: System.Windows.Point.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Point.ToString*
  commentId: Overload:System.Windows.Point.ToString
  name: ToString
  nameWithType: Point.ToString
  fullName: System.Windows.Point.ToString
- uid: IFormatProvider
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: IFormatProvider
- uid: System.Windows.Point.op_Equality*
  commentId: Overload:System.Windows.Point.op_Equality
  name: Equality
  nameWithType: Point.Equality
  fullName: System.Windows.Point.Equality
- uid: System.Windows.Point.op_Inequality*
  commentId: Overload:System.Windows.Point.op_Inequality
  name: Inequality
  nameWithType: Point.Inequality
  fullName: System.Windows.Point.Inequality
