### YamlMime:ManagedReference
items:
- uid: System.Windows.Rect
  commentId: T:System.Windows.Rect
  id: Rect
  parent: System.Windows
  children:
  - System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)
  - System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)
  - System.Windows.Rect.#ctor(System.Windows.Size)
  - System.Windows.Rect.Bottom
  - System.Windows.Rect.BottomLeft
  - System.Windows.Rect.BottomRight
  - System.Windows.Rect.Contains(System.Windows.Point)
  - System.Windows.Rect.Empty
  - System.Windows.Rect.Equals(System.Object)
  - System.Windows.Rect.Equals(System.Windows.Rect)
  - System.Windows.Rect.GetHashCode
  - System.Windows.Rect.Height
  - System.Windows.Rect.Intersect(System.Windows.Rect)
  - System.Windows.Rect.IsEmpty
  - System.Windows.Rect.Left
  - System.Windows.Rect.Location
  - System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)
  - System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)
  - System.Windows.Rect.Parse(System.String)
  - System.Windows.Rect.Right
  - System.Windows.Rect.Size
  - System.Windows.Rect.Top
  - System.Windows.Rect.TopLeft
  - System.Windows.Rect.TopRight
  - System.Windows.Rect.ToString
  - System.Windows.Rect.ToString(IFormatProvider)
  - System.Windows.Rect.Union(System.Windows.Point)
  - System.Windows.Rect.Union(System.Windows.Rect)
  - System.Windows.Rect.Width
  - System.Windows.Rect.X
  - System.Windows.Rect.Y
  langs:
  - csharp
  - vb
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
  type: Struct
  source:
    id: Rect
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDescribes the width, height, and point origin of a rectangle.\n"
  example: []
  syntax:
    content: public struct Rect
    content.vb: Public Structure Rect
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)
  id: '#ctor(System.Windows.Point,System.Windows.Point)'
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Rect(Point, Point)
  nameWithType: Rect.Rect(Point, Point)
  fullName: System.Windows.Rect.Rect(System.Windows.Point, System.Windows.Point)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a Windows.Foundation.Rect structure that\nis exactly large enough to contain the two specified points.\n"
  example: []
  syntax:
    content: public Rect(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: The first point that the new rectangle must contain.
    - id: point2
      type: System.Windows.Point
      description: The second point that the new rectangle must contain.
    content.vb: Public Sub New(point1 As Point, point2 As Point)
  overload: System.Windows.Rect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)
  commentId: M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)
  id: '#ctor(System.Windows.Point,System.Windows.Size)'
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Rect(Point, Size)
  nameWithType: Rect.Rect(Point, Size)
  fullName: System.Windows.Rect.Rect(System.Windows.Point, System.Windows.Size)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 68
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a Windows.Foundation.Rect structure based\non an origin and size.\n"
  example: []
  syntax:
    content: public Rect(Point location, Size size)
    parameters:
    - id: location
      type: System.Windows.Point
      description: The origin of the new Windows.Foundation.Rect.
    - id: size
      type: System.Windows.Size
      description: The size of the new Windows.Foundation.Rect.
    content.vb: Public Sub New(location As Point, size As Size)
  overload: System.Windows.Rect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Rect(Double, Double, Double, Double)
  nameWithType: Rect.Rect(Double, Double, Double, Double)
  fullName: System.Windows.Rect.Rect(System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 90
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a Windows.Foundation.Rect structure that\nhas the specified x-coordinate, y-coordinate, width, and height.\n"
  example: []
  syntax:
    content: public Rect(double x, double y, double width, double height)
    parameters:
    - id: x
      type: System.Double
      description: The x-coordinate of the top-left corner of the rectangle.
    - id: y
      type: System.Double
      description: The y-coordinate of the top-left corner of the rectangle.
    - id: width
      type: System.Double
      description: The width of the rectangle.
    - id: height
      type: System.Double
      description: The height of the rectangle.
    content.vb: Public Sub New(x As Double, y As Double, width As Double, height As Double)
  overload: System.Windows.Rect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.#ctor(System.Windows.Size)
  commentId: M:System.Windows.Rect.#ctor(System.Windows.Size)
  id: '#ctor(System.Windows.Size)'
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Rect(Size)
  nameWithType: Rect.Rect(Size)
  fullName: System.Windows.Rect.Rect(System.Windows.Size)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 109
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the System.Windows.Rect structure that is of the\nspecified size and is located at (0,0).\n"
  example: []
  syntax:
    content: public Rect(Size size)
    parameters:
    - id: size
      type: System.Windows.Size
      description: The size of the new Windows.Foundation.Rect.
    content.vb: Public Sub New(size As Size)
  overload: System.Windows.Rect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)
  commentId: M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)
  id: op_Inequality(System.Windows.Rect,System.Windows.Rect)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Inequality(Rect, Rect)
  nameWithType: Rect.Inequality(Rect, Rect)
  fullName: System.Windows.Rect.Inequality(System.Windows.Rect, System.Windows.Rect)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 130
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two Windows.Foundation.Rect structures for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(Rect rect1, Rect rect2)
    parameters:
    - id: rect1
      type: System.Windows.Rect
      description: The first rectangle to compare.
    - id: rect2
      type: System.Windows.Rect
      description: The second rectangle to compare.
    return:
      type: System.Boolean
      description: "\ntrue if the Windows.Foundation.Rect structures do not have the same x,y,width,height\nproperty values; otherwise, false.\n"
    content.vb: Public Shared Operator <>(rect1 As Rect, rect2 As Rect) As Boolean
  overload: System.Windows.Rect.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)
  commentId: M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)
  id: op_Equality(System.Windows.Rect,System.Windows.Rect)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Equality(Rect, Rect)
  nameWithType: Rect.Equality(Rect, Rect)
  fullName: System.Windows.Rect.Equality(System.Windows.Rect, System.Windows.Rect)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 145
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two Windows.Foundation.Rect structures for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(Rect rect1, Rect rect2)
    parameters:
    - id: rect1
      type: System.Windows.Rect
      description: The first rectangle to compare.
    - id: rect2
      type: System.Windows.Rect
      description: The second rectangle to compare.
    return:
      type: System.Boolean
      description: "\ntrue if the Windows.Foundation.Rect structures have the same x,y,width,height\nproperty values; otherwise, false.\n"
    content.vb: Public Shared Operator =(rect1 As Rect, rect2 As Rect) As Boolean
  overload: System.Windows.Rect.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Rect.Bottom
  commentId: P:System.Windows.Rect.Bottom
  id: Bottom
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: Rect.Bottom
  fullName: System.Windows.Rect.Bottom
  type: Property
  source:
    id: Bottom
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 154
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the y-axis value of the bottom of the rectangle.\n"
  example: []
  syntax:
    content: public readonly double Bottom { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Bottom As Double
  overload: System.Windows.Rect.Bottom*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.BottomLeft
  commentId: P:System.Windows.Rect.BottomLeft
  id: BottomLeft
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: BottomLeft
  nameWithType: Rect.BottomLeft
  fullName: System.Windows.Rect.BottomLeft
  type: Property
  source:
    id: BottomLeft
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 169
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the position of the bottom-left corner of the rectangle\n"
  example: []
  syntax:
    content: public readonly Point BottomLeft { get; }
    parameters: []
    return:
      type: System.Windows.Point
    content.vb: Public ReadOnly Property BottomLeft As Point
  overload: System.Windows.Rect.BottomLeft*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.BottomRight
  commentId: P:System.Windows.Rect.BottomRight
  id: BottomRight
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: BottomRight
  nameWithType: Rect.BottomRight
  fullName: System.Windows.Rect.BottomRight
  type: Property
  source:
    id: BottomRight
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 180
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the position of the bottom-right corner of the rectangle.\n"
  example: []
  syntax:
    content: public readonly Point BottomRight { get; }
    parameters: []
    return:
      type: System.Windows.Point
    content.vb: Public ReadOnly Property BottomRight As Point
  overload: System.Windows.Rect.BottomRight*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.Empty
  commentId: P:System.Windows.Rect.Empty
  id: Empty
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Rect.Empty
  fullName: System.Windows.Rect.Empty
  type: Property
  source:
    id: Empty
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 192
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a special value that represents a rectangle with\nno position or area.\n"
  example: []
  syntax:
    content: public static readonly Rect Empty { get; }
    parameters: []
    return:
      type: System.Windows.Rect
    content.vb: Public Shared ReadOnly Property Empty As Rect
  overload: System.Windows.Rect.Empty*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Rect.Height
  commentId: P:System.Windows.Rect.Height
  id: Height
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Rect.Height
  fullName: System.Windows.Rect.Height
  type: Property
  source:
    id: Height
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 204
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the height of the rectangle.\n"
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: System.Windows.Rect.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.IsEmpty
  commentId: P:System.Windows.Rect.IsEmpty
  id: IsEmpty
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Rect.IsEmpty
  fullName: System.Windows.Rect.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 225
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates whether the rectangle is\nthe Windows.Foundation.Rect.Empty rectangle.\n"
  example: []
  syntax:
    content: public readonly bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: System.Windows.Rect.IsEmpty*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.Left
  commentId: P:System.Windows.Rect.Left
  id: Left
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Rect.Left
  fullName: System.Windows.Rect.Left
  type: Property
  source:
    id: Left
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 238
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the x-axis value of the left side of the rectangle.\n"
  example: []
  syntax:
    content: public readonly double Left { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Left As Double
  overload: System.Windows.Rect.Left*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.Location
  commentId: P:System.Windows.Rect.Location
  id: Location
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Rect.Location
  fullName: System.Windows.Rect.Location
  type: Property
  source:
    id: Location
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 253
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the position of the top-left corner of the rectangle.\n"
  example: []
  syntax:
    content: public Point Location { get; set; }
    parameters: []
    return:
      type: System.Windows.Point
    content.vb: Public Property Location As Point
  overload: System.Windows.Rect.Location*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Right
  commentId: P:System.Windows.Rect.Right
  id: Right
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Rect.Right
  fullName: System.Windows.Rect.Right
  type: Property
  source:
    id: Right
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 269
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the x-axis value of the right side of the rectangle.\n"
  example: []
  syntax:
    content: public readonly double Right { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Right As Double
  overload: System.Windows.Rect.Right*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.Size
  commentId: P:System.Windows.Rect.Size
  id: Size
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Rect.Size
  fullName: System.Windows.Rect.Size
  type: Property
  source:
    id: Size
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 284
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the width and height of the rectangle.\n"
  example: []
  syntax:
    content: public Size Size { get; set; }
    parameters: []
    return:
      type: System.Windows.Size
    content.vb: Public Property Size As Size
  overload: System.Windows.Rect.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Top
  commentId: P:System.Windows.Rect.Top
  id: Top
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: Rect.Top
  fullName: System.Windows.Rect.Top
  type: Property
  source:
    id: Top
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 300
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the y-axis position of the top of the rectangle.\n"
  example: []
  syntax:
    content: public readonly double Top { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Top As Double
  overload: System.Windows.Rect.Top*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.TopLeft
  commentId: P:System.Windows.Rect.TopLeft
  id: TopLeft
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: TopLeft
  nameWithType: Rect.TopLeft
  fullName: System.Windows.Rect.TopLeft
  type: Property
  source:
    id: TopLeft
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 315
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the position of the top-left corner of the rectangle\n"
  example: []
  syntax:
    content: public readonly Point TopLeft { get; }
    parameters: []
    return:
      type: System.Windows.Point
    content.vb: Public ReadOnly Property TopLeft As Point
  overload: System.Windows.Rect.TopLeft*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.TopRight
  commentId: P:System.Windows.Rect.TopRight
  id: TopRight
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: TopRight
  nameWithType: Rect.TopRight
  fullName: System.Windows.Rect.TopRight
  type: Property
  source:
    id: TopRight
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 326
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the position of the top-right corner of the rectangle.\n"
  example: []
  syntax:
    content: public readonly Point TopRight { get; }
    parameters: []
    return:
      type: System.Windows.Point
    content.vb: Public ReadOnly Property TopRight As Point
  overload: System.Windows.Rect.TopRight*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Rect.Width
  commentId: P:System.Windows.Rect.Width
  id: Width
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Rect.Width
  fullName: System.Windows.Rect.Width
  type: Property
  source:
    id: Width
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 337
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the width of the rectangle.\n"
  example: []
  syntax:
    content: public double Width { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Width As Double
  overload: System.Windows.Rect.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.X
  commentId: P:System.Windows.Rect.X
  id: X
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Rect.X
  fullName: System.Windows.Rect.X
  type: Property
  source:
    id: X
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 360
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the x-axis value of the left side of the\nrectangle.\n"
  example: []
  syntax:
    content: public double X { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property X As Double
  overload: System.Windows.Rect.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Y
  commentId: P:System.Windows.Rect.Y
  id: Y
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Rect.Y
  fullName: System.Windows.Rect.Y
  type: Property
  source:
    id: Y
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 379
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the y-axis value of the top side of the\nrectangle.\n"
  example: []
  syntax:
    content: public double Y { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Y As Double
  overload: System.Windows.Rect.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Contains(System.Windows.Point)
  commentId: M:System.Windows.Rect.Contains(System.Windows.Point)
  id: Contains(System.Windows.Point)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Contains(Point)
  nameWithType: Rect.Contains(Point)
  fullName: System.Windows.Rect.Contains(System.Windows.Point)
  type: Method
  source:
    id: Contains
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 403
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIndicates whether the rectangle described by the Windows.Foundation.Rect\ncontains the specified point.\n"
  example: []
  syntax:
    content: public bool Contains(Point point)
    parameters:
    - id: point
      type: System.Windows.Point
      description: The point to check.
    return:
      type: System.Boolean
      description: "\ntrue if the rectangle described by the Windows.Foundation.Rect contains the\nspecified point; otherwise, false.\n"
    content.vb: Public Function Contains(point As Point) As Boolean
  overload: System.Windows.Rect.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Equals(System.Object)
  commentId: M:System.Windows.Rect.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Rect.Equals(Object)
  fullName: System.Windows.Rect.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 419
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIndicates whether the specified object is equal to the\ncurrent Windows.Foundation.Rect.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object to compare to the current rectangle.
    return:
      type: System.Boolean
      description: "\ntrue if o is a Windows.Foundation.Rect and has the same x,y,width,height\nvalues as the current Windows.Foundation.Rect; otherwise, false.\n"
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overload: System.Windows.Rect.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Rect.Equals(System.Windows.Rect)
  commentId: M:System.Windows.Rect.Equals(System.Windows.Rect)
  id: Equals(System.Windows.Rect)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Equals(Rect)
  nameWithType: Rect.Equals(Rect)
  fullName: System.Windows.Rect.Equals(System.Windows.Rect)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 440
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIndicates whether the specified Windows.Foundation.Rect\nis equal to the current Windows.Foundation.Rect.\n"
  example: []
  syntax:
    content: public bool Equals(Rect value)
    parameters:
    - id: value
      type: System.Windows.Rect
      description: The rectangle to compare to the current rectangle.
    return:
      type: System.Boolean
      description: "\ntrue if the specified Windows.Foundation.Rect has the same x,y,width,height\nproperty values as the current Windows.Foundation.Rect; otherwise, false.\n"
    content.vb: Public Function Equals(value As Rect) As Boolean
  overload: System.Windows.Rect.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.GetHashCode
  commentId: M:System.Windows.Rect.GetHashCode
  id: GetHashCode
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Rect.GetHashCode()
  fullName: System.Windows.Rect.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 449
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a hash code for the Windows.Foundation.Rect.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current Windows.Foundation.Rect structure.
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: System.Windows.Rect.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Rect.Intersect(System.Windows.Rect)
  commentId: M:System.Windows.Rect.Intersect(System.Windows.Rect)
  id: Intersect(System.Windows.Rect)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Intersect(Rect)
  nameWithType: Rect.Intersect(Rect)
  fullName: System.Windows.Rect.Intersect(System.Windows.Rect)
  type: Method
  source:
    id: Intersect
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 461
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nFinds the intersection of the rectangle represented by the current <xref href=\"System.Windows.Rect\" data-throw-if-not-resolved=\"false\"></xref>\nand the rectangle represented by the specified <xref href=\"System.Windows.Rect\" data-throw-if-not-resolved=\"false\"></xref>,\nand stores the result as the current <xref href=\"System.Windows.Rect\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Intersect(Rect rect)
    parameters:
    - id: rect
      type: System.Windows.Rect
      description: The rectangle to intersect with the current rectangle.
    content.vb: Public Sub Intersect(rect As Rect)
  overload: System.Windows.Rect.Intersect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Parse(System.String)
  commentId: M:System.Windows.Rect.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Rect.Parse(String)
  fullName: System.Windows.Rect.Parse(System.String)
  type: Method
  source:
    id: Parse
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 492
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static Rect Parse(string source)
    parameters:
    - id: source
      type: System.String
    return:
      type: System.Windows.Rect
    content.vb: Public Shared Function Parse(source As String) As Rect
  overload: System.Windows.Rect.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Rect.ToString
  commentId: M:System.Windows.Rect.ToString
  id: ToString
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Rect.ToString()
  fullName: System.Windows.Rect.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 522
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns a string representation of the <xref href=\"System.Windows.Rect\" data-throw-if-not-resolved=\"false\"></xref> structure.\nstructure.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string representation of the current <xref href=\"System.Windows.Rect\" data-throw-if-not-resolved=\"false\"></xref> structure. The string\nhas the following form: &quot;<xref href=\"System.Windows.Rect.X\" data-throw-if-not-resolved=\"false\"></xref>,<xref href=\"System.Windows.Rect.Y\" data-throw-if-not-resolved=\"false\"></xref>,<xref href=\"System.Windows.Rect.Width\" data-throw-if-not-resolved=\"false\"></xref>,<xref href=\"System.Windows.Rect.Height\" data-throw-if-not-resolved=\"false\"></xref>&quot;.\n"
    content.vb: Public Overrides Function ToString As String
  overload: System.Windows.Rect.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Rect.ToString(IFormatProvider)
  commentId: M:System.Windows.Rect.ToString(IFormatProvider)
  id: ToString(IFormatProvider)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Rect.ToString(IFormatProvider)
  fullName: System.Windows.Rect.ToString(IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 538
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns a string representation of the rectangle by using the specified format\nprovider.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type: IFormatProvider
      description: "\nCulture-specific formatting information.\n"
    return:
      type: System.String
      description: "\nA string representation of the current rectangle that is determined by the specified\nformat provider.\n"
    content.vb: Public Function ToString(provider As IFormatProvider) As String
  overload: System.Windows.Rect.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Union(System.Windows.Point)
  commentId: M:System.Windows.Rect.Union(System.Windows.Point)
  id: Union(System.Windows.Point)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Union(Point)
  nameWithType: Rect.Union(Point)
  fullName: System.Windows.Rect.Union(System.Windows.Point)
  type: Method
  source:
    id: Union
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 583
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nExpands the rectangle represented by the current Windows.Foundation.Rect\nexactly enough to contain the specified point.\n"
  example: []
  syntax:
    content: public void Union(Point point)
    parameters:
    - id: point
      type: System.Windows.Point
      description: The point to include.
    content.vb: Public Sub Union(point As Point)
  overload: System.Windows.Rect.Union*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Rect.Union(System.Windows.Rect)
  commentId: M:System.Windows.Rect.Union(System.Windows.Rect)
  id: Union(System.Windows.Rect)
  parent: System.Windows.Rect
  langs:
  - csharp
  - vb
  name: Union(Rect)
  nameWithType: Rect.Union(Rect)
  fullName: System.Windows.Rect.Union(System.Windows.Rect)
  type: Method
  source:
    id: Union
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Rect.cs
    startLine: 611
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nExpands the rectangle represented by the current Windows.Foundation.Rect\nexactly enough to contain the specified rectangle.\n"
  example: []
  syntax:
    content: public void Union(Rect rect)
    parameters:
    - id: rect
      type: System.Windows.Rect
      description: The rectangle to include.
    content.vb: Public Sub Union(rect As Rect)
  overload: System.Windows.Rect.Union*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Rect.#ctor*
  commentId: Overload:System.Windows.Rect.#ctor
  name: Rect
  nameWithType: Rect.Rect
  fullName: System.Windows.Rect.Rect
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  commentId: T:System.Windows.Size
  parent: System.Windows
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Rect.op_Inequality*
  commentId: Overload:System.Windows.Rect.op_Inequality
  name: Inequality
  nameWithType: Rect.Inequality
  fullName: System.Windows.Rect.Inequality
- uid: System.Windows.Rect
  commentId: T:System.Windows.Rect
  parent: System.Windows
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Rect.op_Equality*
  commentId: Overload:System.Windows.Rect.op_Equality
  name: Equality
  nameWithType: Rect.Equality
  fullName: System.Windows.Rect.Equality
- uid: System.Windows.Rect.Bottom*
  commentId: Overload:System.Windows.Rect.Bottom
  name: Bottom
  nameWithType: Rect.Bottom
  fullName: System.Windows.Rect.Bottom
- uid: System.Windows.Rect.BottomLeft*
  commentId: Overload:System.Windows.Rect.BottomLeft
  name: BottomLeft
  nameWithType: Rect.BottomLeft
  fullName: System.Windows.Rect.BottomLeft
- uid: System.Windows.Rect.BottomRight*
  commentId: Overload:System.Windows.Rect.BottomRight
  name: BottomRight
  nameWithType: Rect.BottomRight
  fullName: System.Windows.Rect.BottomRight
- uid: System.Windows.Rect.Empty*
  commentId: Overload:System.Windows.Rect.Empty
  name: Empty
  nameWithType: Rect.Empty
  fullName: System.Windows.Rect.Empty
- uid: System.Windows.Rect.Height*
  commentId: Overload:System.Windows.Rect.Height
  name: Height
  nameWithType: Rect.Height
  fullName: System.Windows.Rect.Height
- uid: System.Windows.Rect.IsEmpty*
  commentId: Overload:System.Windows.Rect.IsEmpty
  name: IsEmpty
  nameWithType: Rect.IsEmpty
  fullName: System.Windows.Rect.IsEmpty
- uid: System.Windows.Rect.Left*
  commentId: Overload:System.Windows.Rect.Left
  name: Left
  nameWithType: Rect.Left
  fullName: System.Windows.Rect.Left
- uid: System.Windows.Rect.Location*
  commentId: Overload:System.Windows.Rect.Location
  name: Location
  nameWithType: Rect.Location
  fullName: System.Windows.Rect.Location
- uid: System.Windows.Rect.Right*
  commentId: Overload:System.Windows.Rect.Right
  name: Right
  nameWithType: Rect.Right
  fullName: System.Windows.Rect.Right
- uid: System.Windows.Rect.Size*
  commentId: Overload:System.Windows.Rect.Size
  name: Size
  nameWithType: Rect.Size
  fullName: System.Windows.Rect.Size
- uid: System.Windows.Rect.Top*
  commentId: Overload:System.Windows.Rect.Top
  name: Top
  nameWithType: Rect.Top
  fullName: System.Windows.Rect.Top
- uid: System.Windows.Rect.TopLeft*
  commentId: Overload:System.Windows.Rect.TopLeft
  name: TopLeft
  nameWithType: Rect.TopLeft
  fullName: System.Windows.Rect.TopLeft
- uid: System.Windows.Rect.TopRight*
  commentId: Overload:System.Windows.Rect.TopRight
  name: TopRight
  nameWithType: Rect.TopRight
  fullName: System.Windows.Rect.TopRight
- uid: System.Windows.Rect.Width*
  commentId: Overload:System.Windows.Rect.Width
  name: Width
  nameWithType: Rect.Width
  fullName: System.Windows.Rect.Width
- uid: System.Windows.Rect.X*
  commentId: Overload:System.Windows.Rect.X
  name: X
  nameWithType: Rect.X
  fullName: System.Windows.Rect.X
- uid: System.Windows.Rect.Y*
  commentId: Overload:System.Windows.Rect.Y
  name: Y
  nameWithType: Rect.Y
  fullName: System.Windows.Rect.Y
- uid: System.Windows.Rect.Contains*
  commentId: Overload:System.Windows.Rect.Contains
  name: Contains
  nameWithType: Rect.Contains
  fullName: System.Windows.Rect.Contains
- uid: System.Windows.Rect.Equals*
  commentId: Overload:System.Windows.Rect.Equals
  name: Equals
  nameWithType: Rect.Equals
  fullName: System.Windows.Rect.Equals
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Rect.GetHashCode*
  commentId: Overload:System.Windows.Rect.GetHashCode
  name: GetHashCode
  nameWithType: Rect.GetHashCode
  fullName: System.Windows.Rect.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Rect.Intersect*
  commentId: Overload:System.Windows.Rect.Intersect
  name: Intersect
  nameWithType: Rect.Intersect
  fullName: System.Windows.Rect.Intersect
- uid: System.Windows.Rect.Parse*
  commentId: Overload:System.Windows.Rect.Parse
  name: Parse
  nameWithType: Rect.Parse
  fullName: System.Windows.Rect.Parse
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Rect.X
  commentId: P:System.Windows.Rect.X
  isExternal: true
- uid: System.Windows.Rect.Y
  commentId: P:System.Windows.Rect.Y
  isExternal: true
- uid: System.Windows.Rect.Width
  commentId: P:System.Windows.Rect.Width
  isExternal: true
- uid: System.Windows.Rect.Height
  commentId: P:System.Windows.Rect.Height
  isExternal: true
- uid: System.Windows.Rect.ToString*
  commentId: Overload:System.Windows.Rect.ToString
  name: ToString
  nameWithType: Rect.ToString
  fullName: System.Windows.Rect.ToString
- uid: IFormatProvider
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: IFormatProvider
- uid: System.Windows.Rect.Union*
  commentId: Overload:System.Windows.Rect.Union
  name: Union
  nameWithType: Rect.Union
  fullName: System.Windows.Rect.Union
