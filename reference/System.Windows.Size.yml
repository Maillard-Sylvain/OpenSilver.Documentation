### YamlMime:ManagedReference
items:
- uid: System.Windows.Size
  commentId: T:System.Windows.Size
  id: Size
  parent: System.Windows
  children:
  - System.Windows.Size.#ctor(System.Double,System.Double)
  - System.Windows.Size.Empty
  - System.Windows.Size.Equals(System.Object)
  - System.Windows.Size.Equals(System.Windows.Size)
  - System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.GetHashCode
  - System.Windows.Size.Height
  - System.Windows.Size.IsEmpty
  - System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.Parse(System.String)
  - System.Windows.Size.ToString
  - System.Windows.Size.Width
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
  type: Struct
  source:
    id: Size
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDescribes the width and height of an object.\n"
  example: []
  syntax:
    content: public struct Size
    content.vb: Public Structure Size
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Size.#ctor(System.Double,System.Double)
  commentId: M:System.Windows.Size.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Size(Double, Double)
  nameWithType: Size.Size(Double, Double)
  fullName: System.Windows.Size.Size(System.Double, System.Double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the Windows.Foundation.Size\nstructure and assigns it an initial width and height.\n"
  example: []
  syntax:
    content: public Size(double width, double height)
    parameters:
    - id: width
      type: System.Double
      description: The initial width of the instance of Windows.Foundation.Size.
    - id: height
      type: System.Double
      description: The initial height of the instance of Windows.Foundation.Size.
    content.vb: Public Sub New(width As Double, height As Double)
  overload: System.Windows.Size.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Size.Parse(System.String)
  commentId: M:System.Windows.Size.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Size.Parse(String)
  fullName: System.Windows.Size.Parse(System.String)
  type: Method
  source:
    id: Parse
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 47
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static Size Parse(string source)
    parameters:
    - id: source
      type: System.String
    return:
      type: System.Windows.Size
    content.vb: Public Shared Function Parse(source As String) As Size
  overload: System.Windows.Size.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  commentId: M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  id: op_Inequality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Inequality(Size, Size)
  nameWithType: Size.Inequality(Size, Size)
  fullName: System.Windows.Size.Inequality(System.Windows.Size, System.Windows.Size)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 76
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two instances of Windows.Foundation.Size for\ninequality."
  example: []
  syntax:
    content: public static bool operator !=(Size size1, Size size2)
    parameters:
    - id: size1
      type: System.Windows.Size
      description: The first instance of Windows.Foundation.Size to compare.
    - id: size2
      type: System.Windows.Size
      description: The second instance of Windows.Foundation.Size to compare.
    return:
      type: System.Boolean
      description: "\ntrue if the instances of Windows.Foundation.Size are not equal; otherwise\nfalse.\n"
    content.vb: Public Shared Operator <>(size1 As Size, size2 As Size) As Boolean
  overload: System.Windows.Size.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  commentId: M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  id: op_Equality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Equality(Size, Size)
  nameWithType: Size.Equality(Size, Size)
  fullName: System.Windows.Size.Equality(System.Windows.Size, System.Windows.Size)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 90
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two instances of Windows.Foundation.Size for\nequality."
  example: []
  syntax:
    content: public static bool operator ==(Size size1, Size size2)
    parameters:
    - id: size1
      type: System.Windows.Size
      description: The first instance of Windows.Foundation.Size to compare.
    - id: size2
      type: System.Windows.Size
      description: The second instance of Windows.Foundation.Size to compare.
    return:
      type: System.Boolean
      description: "\ntrue if the two instances of Windows.Foundation.Size are equal; otherwise\nfalse.\n"
    content.vb: Public Shared Operator =(size1 As Size, size2 As Size) As Boolean
  overload: System.Windows.Size.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Size.Empty
  commentId: P:System.Windows.Size.Empty
  id: Empty
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Windows.Size.Empty
  type: Property
  source:
    id: Empty
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that represents a static empty Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public static readonly Size Empty { get; }
    parameters: []
    return:
      type: System.Windows.Size
    content.vb: Public Shared ReadOnly Property Empty As Size
  overload: System.Windows.Size.Empty*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Size.Height
  commentId: P:System.Windows.Size.Height
  id: Height
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Size.Height
  fullName: System.Windows.Size.Height
  type: Property
  source:
    id: Height
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 108
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the height of this instance of Windows.Foundation.Size in pixels. The default is 0. The value cannot be negative.\n"
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: System.Windows.Size.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Size.IsEmpty
  commentId: P:System.Windows.Size.IsEmpty
  id: IsEmpty
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Windows.Size.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 132
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates whether this instance of\nWindows.Foundation.Size is Windows.Foundation.Size.Empty.\n"
  example: []
  syntax:
    content: public readonly bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: System.Windows.Size.IsEmpty*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Size.Width
  commentId: P:System.Windows.Size.Width
  id: Width
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Size.Width
  fullName: System.Windows.Size.Width
  type: Property
  source:
    id: Width
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 143
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the width of this instance of Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public double Width { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Width As Double
  overload: System.Windows.Size.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  commentId: M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  id: Equals(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Equals(Size, Size)
  nameWithType: Size.Equals(Size, Size)
  fullName: System.Windows.Size.Equals(System.Windows.Size, System.Windows.Size)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 163
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static bool Equals(Size size1, Size size2)
    parameters:
    - id: size1
      type: System.Windows.Size
    - id: size2
      type: System.Windows.Size
    return:
      type: System.Boolean
    content.vb: Public Shared Function Equals(size1 As Size, size2 As Size) As Boolean
  overload: System.Windows.Size.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Size.Equals(System.Object)
  commentId: M:System.Windows.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Windows.Size.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 181
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares an object to an instance of Windows.Foundation.Size\nfor equality.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: The System.Object to compare.
    return:
      type: System.Boolean
      description: true if the sizes are equal; otherwise, false.
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overload: System.Windows.Size.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Size.Equals(System.Windows.Size)
  commentId: M:System.Windows.Size.Equals(System.Windows.Size)
  id: Equals(System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: Equals(Size)
  nameWithType: Size.Equals(Size)
  fullName: System.Windows.Size.Equals(System.Windows.Size)
  type: Method
  source:
    id: Equals
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 197
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares a value to an instance of Windows.Foundation.Size\nfor equality.\n"
  example: []
  syntax:
    content: public bool Equals(Size value)
    parameters:
    - id: value
      type: System.Windows.Size
      description: The size to compare to this current instance of Windows.Foundation.Size.
    return:
      type: System.Boolean
      description: true if the instances of Windows.Foundation.Size are equal; otherwise, false.
    content.vb: Public Function Equals(value As Size) As Boolean
  overload: System.Windows.Size.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Size.GetHashCode
  commentId: M:System.Windows.Size.GetHashCode
  id: GetHashCode
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Windows.Size.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 206
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the hash code for this instance of Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code for this instance of Windows.Foundation.Size.
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: System.Windows.Size.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Size.ToString
  commentId: M:System.Windows.Size.ToString
  id: ToString
  parent: System.Windows.Size
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Windows.Size.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\Size.cs
    startLine: 223
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns a string representation of this Windows.Foundation.Size.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of this Windows.Foundation.Size.
    content.vb: Public Overrides Function ToString As String
  overload: System.Windows.Size.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Size.#ctor*
  commentId: Overload:System.Windows.Size.#ctor
  name: Size
  nameWithType: Size.Size
  fullName: System.Windows.Size.Size
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Size.Parse*
  commentId: Overload:System.Windows.Size.Parse
  name: Parse
  nameWithType: Size.Parse
  fullName: System.Windows.Size.Parse
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Size
  commentId: T:System.Windows.Size
  parent: System.Windows
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Size.op_Inequality*
  commentId: Overload:System.Windows.Size.op_Inequality
  name: Inequality
  nameWithType: Size.Inequality
  fullName: System.Windows.Size.Inequality
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Size.op_Equality*
  commentId: Overload:System.Windows.Size.op_Equality
  name: Equality
  nameWithType: Size.Equality
  fullName: System.Windows.Size.Equality
- uid: System.Windows.Size.Empty*
  commentId: Overload:System.Windows.Size.Empty
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Windows.Size.Empty
- uid: System.Windows.Size.Height*
  commentId: Overload:System.Windows.Size.Height
  name: Height
  nameWithType: Size.Height
  fullName: System.Windows.Size.Height
- uid: System.Windows.Size.IsEmpty*
  commentId: Overload:System.Windows.Size.IsEmpty
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Windows.Size.IsEmpty
- uid: System.Windows.Size.Width*
  commentId: Overload:System.Windows.Size.Width
  name: Width
  nameWithType: Size.Width
  fullName: System.Windows.Size.Width
- uid: System.Windows.Size.Equals*
  commentId: Overload:System.Windows.Size.Equals
  name: Equals
  nameWithType: Size.Equals
  fullName: System.Windows.Size.Equals
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Size.GetHashCode*
  commentId: Overload:System.Windows.Size.GetHashCode
  name: GetHashCode
  nameWithType: Size.GetHashCode
  fullName: System.Windows.Size.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Size.ToString*
  commentId: Overload:System.Windows.Size.ToString
  name: ToString
  nameWithType: Size.ToString
  fullName: System.Windows.Size.ToString
