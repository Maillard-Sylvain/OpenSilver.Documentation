### YamlMime:ManagedReference
items:
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  id: UIElement
  parent: System.Windows
  children:
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Object,System.Boolean)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.AllowScrollOnTouchMove
  - System.Windows.UIElement.AllowScrollOnTouchMoveProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  - System.Windows.UIElement.CreateDomElement(System.Object,System.Object@)
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.GetChildsWrapper(System.Windows.UIElement)
  - System.Windows.UIElement.GetDomElementWhereToPlaceChild(System.Windows.UIElement)
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.INTERNAL_AttachToDomEvents
  - System.Windows.UIElement.INTERNAL_DetachFromDomEvents
  - System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnTapped(System.Windows.Input.TappedRoutedEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Object)
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.Tapped
  - System.Windows.UIElement.TappedEvent
  - System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)
  - System.Windows.UIElement.UseLayoutRounding
  - System.Windows.UIElement.UseLayoutRoundingProperty
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  - System.Windows.UIElement.XamlSourcePath
  langs:
  - csharp
  - vb
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UIElement
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nUIElement is a base class for most of the objects that have visual appearance\nand can process basic input in a user interface.\n"
  example: []
  syntax:
    content: 'public abstract class UIElement : DependencyObject'
    content.vb: >-
      Public MustInherit Class UIElement
          Inherits DependencyObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  derivedClasses:
  - System.Windows.FrameworkElement
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.UIElement.XamlSourcePath
  commentId: F:System.Windows.UIElement.XamlSourcePath
  id: XamlSourcePath
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: XamlSourcePath
  nameWithType: UIElement.XamlSourcePath
  fullName: System.Windows.UIElement.XamlSourcePath
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlSourcePath
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 91
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public string XamlSourcePath
    return:
      type: System.String
    content.vb: Public XamlSourcePath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.ClipToBounds
  commentId: P:System.Windows.UIElement.ClipToBounds
  id: ClipToBounds
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
  fullName: System.Windows.UIElement.ClipToBounds
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClipToBounds
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 143
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets a value indicating whether to clip the content of this element\n(or content coming from the child elements of this element) to fit into the\nsize of the containing element. This is a dependency property.\n"
  example: []
  syntax:
    content: public bool ClipToBounds { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClipToBounds As Boolean
  overload: System.Windows.UIElement.ClipToBounds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.ClipToBoundsProperty
  commentId: F:System.Windows.UIElement.ClipToBoundsProperty
  id: ClipToBoundsProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: ClipToBoundsProperty
  nameWithType: UIElement.ClipToBoundsProperty
  fullName: System.Windows.UIElement.ClipToBoundsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClipToBoundsProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 149
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly DependencyProperty ClipToBoundsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.CreateDomElement(System.Object,System.Object@)
  commentId: M:System.Windows.UIElement.CreateDomElement(System.Object,System.Object@)
  id: CreateDomElement(System.Object,System.Object@)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: CreateDomElement(Object, out Object)
  nameWithType: UIElement.CreateDomElement(Object, out Object)
  fullName: System.Windows.UIElement.CreateDomElement(System.Object, out System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateDomElement
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 185
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nWhen overriden, creates the dom elements designed to represent an instance of an UIElement and defines the place where its child(ren) will be added.\n"
  example: []
  syntax:
    content: public abstract object CreateDomElement(object parentRef, out object domElementWhereToPlaceChildren)
    parameters:
    - id: parentRef
      type: System.Object
      description: The parent of the UIElement
    - id: domElementWhereToPlaceChildren
      type: System.Object
      description: The dom element where the UIElement&apos;s children will be added.
    return:
      type: System.Object
      description: The &quot;root&quot; dom element of the UIElement.
    content.vb: Public MustOverride Function CreateDomElement(parentRef As Object, ByRef domElementWhereToPlaceChildren As Object) As Object
  overload: System.Windows.UIElement.CreateDomElement*
  nameWithType.vb: UIElement.CreateDomElement(Object, ByRef Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Windows.UIElement.CreateDomElement(System.Object, ByRef System.Object)
  name.vb: CreateDomElement(Object, ByRef Object)
- uid: System.Windows.UIElement.CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  commentId: M:System.Windows.UIElement.CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  id: CreateDomChildWrapper(System.Object,System.Object@,System.Int32)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: CreateDomChildWrapper(Object, out Object, Int32)
  nameWithType: UIElement.CreateDomChildWrapper(Object, out Object, Int32)
  fullName: System.Windows.UIElement.CreateDomChildWrapper(System.Object, out System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateDomChildWrapper
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 194
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nWhen overriden, creates a dom wrapper for each child that is added to the UIElement.\n"
  example: []
  syntax:
    content: public virtual object CreateDomChildWrapper(object parentRef, out object domElementWhereToPlaceChild, int index = -1)
    parameters:
    - id: parentRef
      type: System.Object
      description: ''
    - id: domElementWhereToPlaceChild
      type: System.Object
      description: ''
    - id: index
      type: System.Int32
      description: The index for the position in which to add the child.
    return:
      type: System.Object
      description: ''
    content.vb: Public Overridable Function CreateDomChildWrapper(parentRef As Object, ByRef domElementWhereToPlaceChild As Object, index As Integer = -1) As Object
  overload: System.Windows.UIElement.CreateDomChildWrapper*
  nameWithType.vb: UIElement.CreateDomChildWrapper(Object, ByRef Object, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Windows.UIElement.CreateDomChildWrapper(System.Object, ByRef System.Object, System.Int32)
  name.vb: CreateDomChildWrapper(Object, ByRef Object, Int32)
- uid: System.Windows.UIElement.GetDomElementWhereToPlaceChild(System.Windows.UIElement)
  commentId: M:System.Windows.UIElement.GetDomElementWhereToPlaceChild(System.Windows.UIElement)
  id: GetDomElementWhereToPlaceChild(System.Windows.UIElement)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: GetDomElementWhereToPlaceChild(UIElement)
  nameWithType: UIElement.GetDomElementWhereToPlaceChild(UIElement)
  fullName: System.Windows.UIElement.GetDomElementWhereToPlaceChild(System.Windows.UIElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetDomElementWhereToPlaceChild
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 201
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public virtual dynamic GetDomElementWhereToPlaceChild(UIElement child)
    parameters:
    - id: child
      type: System.Windows.UIElement
    return:
      type: System.Object
    content.vb: Public Overridable Function GetDomElementWhereToPlaceChild(child As UIElement) As Object
  overload: System.Windows.UIElement.GetDomElementWhereToPlaceChild*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Windows.UIElement.GetChildsWrapper(System.Windows.UIElement)
  commentId: M:System.Windows.UIElement.GetChildsWrapper(System.Windows.UIElement)
  id: GetChildsWrapper(System.Windows.UIElement)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: GetChildsWrapper(UIElement)
  nameWithType: UIElement.GetChildsWrapper(UIElement)
  fullName: System.Windows.UIElement.GetChildsWrapper(System.Windows.UIElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetChildsWrapper
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 206
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public dynamic GetChildsWrapper(UIElement child)
    parameters:
    - id: child
      type: System.Windows.UIElement
    return:
      type: System.Object
    content.vb: Public Function GetChildsWrapper(child As UIElement) As Object
  overload: System.Windows.UIElement.GetChildsWrapper*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.Effect
  commentId: P:System.Windows.UIElement.Effect
  id: Effect
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: UIElement.Effect
  fullName: System.Windows.UIElement.Effect
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Effect
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 226
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public Effect Effect { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
    content.vb: Public Property Effect As Effect
  overload: System.Windows.UIElement.Effect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.EffectProperty
  commentId: F:System.Windows.UIElement.EffectProperty
  id: EffectProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: EffectProperty
  nameWithType: UIElement.EffectProperty
  fullName: System.Windows.UIElement.EffectProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EffectProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 232
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly DependencyProperty EffectProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly EffectProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.RenderTransform
  commentId: P:System.Windows.UIElement.RenderTransform
  id: RenderTransform
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
  fullName: System.Windows.UIElement.RenderTransform
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RenderTransform
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 264
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets transform information that affects the rendering position of\na UIElement.\n"
  example: []
  syntax:
    content: public Transform RenderTransform { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Transform
    content.vb: Public Property RenderTransform As Transform
  overload: System.Windows.UIElement.RenderTransform*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.RenderTransformProperty
  commentId: F:System.Windows.UIElement.RenderTransformProperty
  id: RenderTransformProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransformProperty
  nameWithType: UIElement.RenderTransformProperty
  fullName: System.Windows.UIElement.RenderTransformProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RenderTransformProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 273
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the RenderTransform dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty RenderTransformProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly RenderTransformProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.RenderTransformOrigin
  commentId: P:System.Windows.UIElement.RenderTransformOrigin
  id: RenderTransformOrigin
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
  fullName: System.Windows.UIElement.RenderTransformOrigin
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RenderTransformOrigin
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 332
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public Point RenderTransformOrigin { get; set; }
    parameters: []
    return:
      type: System.Windows.Point
    content.vb: Public Property RenderTransformOrigin As Point
  overload: System.Windows.UIElement.RenderTransformOrigin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.RenderTransformOriginProperty
  commentId: F:System.Windows.UIElement.RenderTransformOriginProperty
  id: RenderTransformOriginProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: RenderTransformOriginProperty
  nameWithType: UIElement.RenderTransformOriginProperty
  fullName: System.Windows.UIElement.RenderTransformOriginProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RenderTransformOriginProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 338
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly DependencyProperty RenderTransformOriginProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.UseLayoutRounding
  commentId: P:System.Windows.UIElement.UseLayoutRounding
  id: UseLayoutRounding
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: UseLayoutRounding
  nameWithType: UIElement.UseLayoutRounding
  fullName: System.Windows.UIElement.UseLayoutRounding
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UseLayoutRounding
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 402
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets a value that determines whether rendering for the object and\nits visual subtree should use rounding behavior that aligns rendering to\nwhole pixels.\n"
  example: []
  syntax:
    content: public bool UseLayoutRounding { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseLayoutRounding As Boolean
  overload: System.Windows.UIElement.UseLayoutRounding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.UseLayoutRoundingProperty
  commentId: F:System.Windows.UIElement.UseLayoutRoundingProperty
  id: UseLayoutRoundingProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: UseLayoutRoundingProperty
  nameWithType: UIElement.UseLayoutRoundingProperty
  fullName: System.Windows.UIElement.UseLayoutRoundingProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UseLayoutRoundingProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 411
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the UseLayoutRounding dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty UseLayoutRoundingProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly UseLayoutRoundingProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.Visibility
  commentId: P:System.Windows.UIElement.Visibility
  id: Visibility
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: UIElement.Visibility
  fullName: System.Windows.UIElement.Visibility
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Visibility
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 432
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the visibility of a UIElement. A UIElement that is not visible\nis not rendered and does not communicate its desired size to layout.\n"
  example: []
  syntax:
    content: public Visibility Visibility { get; set; }
    parameters: []
    return:
      type: System.Windows.Visibility
    content.vb: Public Property Visibility As Visibility
  overload: System.Windows.UIElement.Visibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.VisibilityProperty
  commentId: F:System.Windows.UIElement.VisibilityProperty
  id: VisibilityProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: VisibilityProperty
  nameWithType: UIElement.VisibilityProperty
  fullName: System.Windows.UIElement.VisibilityProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: VisibilityProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 441
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the Visibility dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty VisibilityProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly VisibilityProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.IsVisible
  commentId: P:System.Windows.UIElement.IsVisible
  id: IsVisible
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: UIElement.IsVisible
  fullName: System.Windows.UIElement.IsVisible
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsVisible
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 521
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public bool IsVisible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVisible As Boolean
  overload: System.Windows.UIElement.IsVisible*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.UIElement.IsVisibleProperty
  commentId: F:System.Windows.UIElement.IsVisibleProperty
  id: IsVisibleProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: IsVisibleProperty
  nameWithType: UIElement.IsVisibleProperty
  fullName: System.Windows.UIElement.IsVisibleProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsVisibleProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 529
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the IsVisible dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsVisibleProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsVisibleProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.IsVisibleChanged
  commentId: E:System.Windows.UIElement.IsVisibleChanged
  id: IsVisibleChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: IsVisibleChanged
  nameWithType: UIElement.IsVisibleChanged
  fullName: System.Windows.UIElement.IsVisibleChanged
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsVisibleChanged
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 587
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public event DependencyPropertyChangedEventHandler IsVisibleChanged
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
    content.vb: Public Event IsVisibleChanged As DependencyPropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.Opacity
  commentId: P:System.Windows.UIElement.Opacity
  id: Opacity
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: Opacity
  nameWithType: UIElement.Opacity
  fullName: System.Windows.UIElement.Opacity
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Opacity
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 598
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the degree of the object&apos;s opacity.\nA value between 0 and 1.0 that declares the opacity factor, with 1.0 meaning\nfull opacity and 0 meaning transparent. The default value is 1.0.\n"
  example: []
  syntax:
    content: public double Opacity { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Opacity As Double
  overload: System.Windows.UIElement.Opacity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OpacityProperty
  commentId: F:System.Windows.UIElement.OpacityProperty
  id: OpacityProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OpacityProperty
  nameWithType: UIElement.OpacityProperty
  fullName: System.Windows.UIElement.OpacityProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OpacityProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 607
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the Opacity dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty OpacityProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly OpacityProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.IsHitTestVisible
  commentId: P:System.Windows.UIElement.IsHitTestVisible
  id: IsHitTestVisible
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
  fullName: System.Windows.UIElement.IsHitTestVisible
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsHitTestVisible
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 629
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets whether the contained area of this UIElement can return true\nvalues for hit testing.\n"
  example: []
  syntax:
    content: public bool IsHitTestVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsHitTestVisible As Boolean
  overload: System.Windows.UIElement.IsHitTestVisible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.IsHitTestVisibleProperty
  commentId: F:System.Windows.UIElement.IsHitTestVisibleProperty
  id: IsHitTestVisibleProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: IsHitTestVisibleProperty
  nameWithType: UIElement.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement.IsHitTestVisibleProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsHitTestVisibleProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 637
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the IsHitTestVisible property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsHitTestVisibleProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.AllowDrop
  commentId: P:System.Windows.UIElement.AllowDrop
  id: AllowDrop
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
  fullName: System.Windows.UIElement.AllowDrop
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowDrop
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 772
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets a value that determines whether this UIElement\ncan be a drop target for purposes of drag-and-drop operations.\n"
  example: []
  syntax:
    content: public bool AllowDrop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowDrop As Boolean
  overload: System.Windows.UIElement.AllowDrop*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.AllowDropProperty
  commentId: F:System.Windows.UIElement.AllowDropProperty
  id: AllowDropProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: AllowDropProperty
  nameWithType: UIElement.AllowDropProperty
  fullName: System.Windows.UIElement.AllowDropProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowDropProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 781
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the AllowDrop dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty AllowDropProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly AllowDropProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.CaptureMouse
  commentId: M:System.Windows.UIElement.CaptureMouse
  id: CaptureMouse
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: CaptureMouse()
  nameWithType: UIElement.CaptureMouse()
  fullName: System.Windows.UIElement.CaptureMouse()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CaptureMouse
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 814
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nSets pointer capture to a UIElement.\n"
  example: []
  syntax:
    content: public bool CaptureMouse()
    return:
      type: System.Boolean
      description: True if the object has pointer capture; otherwise, false.
    content.vb: Public Function CaptureMouse As Boolean
  overload: System.Windows.UIElement.CaptureMouse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.IsMouseCaptured
  commentId: P:System.Windows.UIElement.IsMouseCaptured
  id: IsMouseCaptured
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: IsMouseCaptured
  nameWithType: UIElement.IsMouseCaptured
  fullName: System.Windows.UIElement.IsMouseCaptured
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsMouseCaptured
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1055
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value indicating whether the pointer is captured to this element.\n"
  example: []
  syntax:
    content: public bool IsMouseCaptured { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMouseCaptured As Boolean
  overload: System.Windows.UIElement.IsMouseCaptured*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.UIElement.ReleaseMouseCapture
  commentId: M:System.Windows.UIElement.ReleaseMouseCapture
  id: ReleaseMouseCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: ReleaseMouseCapture()
  nameWithType: UIElement.ReleaseMouseCapture()
  fullName: System.Windows.UIElement.ReleaseMouseCapture()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ReleaseMouseCapture
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1074
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReleases pointer captures for capture of one specific pointer by this UIElement.\n"
  example: []
  syntax:
    content: public void ReleaseMouseCapture()
    content.vb: Public Sub ReleaseMouseCapture
  overload: System.Windows.UIElement.ReleaseMouseCapture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  commentId: M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnLostMouseCapture
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1143
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: protected virtual void OnLostMouseCapture(MouseEventArgs e)
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
    content.vb: Protected Overridable Sub OnLostMouseCapture(e As MouseEventArgs)
  overload: System.Windows.UIElement.OnLostMouseCapture*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.LostMouseCapture
  commentId: E:System.Windows.UIElement.LostMouseCapture
  id: LostMouseCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: LostMouseCapture
  nameWithType: UIElement.LostMouseCapture
  fullName: System.Windows.UIElement.LostMouseCapture
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LostMouseCapture
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1158
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public event MouseEventHandler LostMouseCapture
    return:
      type: System.Windows.Input.MouseEventHandler
    content.vb: Public Event LostMouseCapture As MouseEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.AllowScrollOnTouchMove
  commentId: P:System.Windows.UIElement.AllowScrollOnTouchMove
  id: AllowScrollOnTouchMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: AllowScrollOnTouchMove
  nameWithType: UIElement.AllowScrollOnTouchMove
  fullName: System.Windows.UIElement.AllowScrollOnTouchMove
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowScrollOnTouchMove
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1170
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets whether pressing (touchscreen devices) on this UIElement then moving should allow scrolling or not. The default value is True.\n"
  example: []
  syntax:
    content: public bool AllowScrollOnTouchMove { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowScrollOnTouchMove As Boolean
  overload: System.Windows.UIElement.AllowScrollOnTouchMove*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.AllowScrollOnTouchMoveProperty
  commentId: F:System.Windows.UIElement.AllowScrollOnTouchMoveProperty
  id: AllowScrollOnTouchMoveProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: AllowScrollOnTouchMoveProperty
  nameWithType: UIElement.AllowScrollOnTouchMoveProperty
  fullName: System.Windows.UIElement.AllowScrollOnTouchMoveProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowScrollOnTouchMoveProperty
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1178
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the AllowScrollOnTouchMove dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty AllowScrollOnTouchMoveProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly AllowScrollOnTouchMoveProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree
  id: INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: UIElement.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: INTERNAL_OnDetachedFromVisualTree
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1204
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: protected override void INTERNAL_OnDetachedFromVisualTree()
    content.vb: Protected Overrides Sub INTERNAL_OnDetachedFromVisualTree
  overridden: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  overload: System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)
  commentId: M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)
  id: TransformToVisual(System.Windows.UIElement)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: TransformToVisual(UIElement)
  nameWithType: UIElement.TransformToVisual(UIElement)
  fullName: System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TransformToVisual
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement.cs
    startLine: 1239
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns a transform object that can be used to transform coordinates from\nthe UIElement to the specified object.\n"
  example: []
  syntax:
    content: public GeneralTransform TransformToVisual(UIElement visual)
    parameters:
    - id: visual
      type: System.Windows.UIElement
      description: "\nThe object to compare to the current object for purposes of obtaining the\ntransform.\n"
    return:
      type: System.Windows.Media.GeneralTransform
      description: "\nThe transform information as an object. Call methods on this object to get\na practical transform.\n"
    content.vb: Public Function TransformToVisual(visual As UIElement) As GeneralTransform
  overload: System.Windows.UIElement.TransformToVisual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.MouseMoveEvent
  commentId: F:System.Windows.UIElement.MouseMoveEvent
  id: MouseMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseMoveEvent
  nameWithType: UIElement.MouseMoveEvent
  fullName: System.Windows.UIElement.MouseMoveEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseMoveEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 66
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent MouseMoveEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly MouseMoveEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.MouseMove
  commentId: E:System.Windows.UIElement.MouseMove
  id: MouseMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseMove
  nameWithType: UIElement.MouseMove
  fullName: System.Windows.UIElement.MouseMove
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseMove
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 105
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\nmoved, while within this element.\n"
  example: []
  syntax:
    content: public event MouseEventHandler MouseMove
    return:
      type: System.Windows.Input.MouseEventHandler
    content.vb: Public Event MouseMove As MouseEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  commentId: M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnMouseMove
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 126
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the PointerMoved event\n"
  example: []
  syntax:
    content: protected virtual void OnMouseMove(MouseEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.MouseEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnMouseMove(eventArgs As MouseEventArgs)
  overload: System.Windows.UIElement.OnMouseMove*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.MouseLeftButtonDownEvent
  commentId: F:System.Windows.UIElement.MouseLeftButtonDownEvent
  id: MouseLeftButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement.MouseLeftButtonDownEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseLeftButtonDownEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 165
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent MouseLeftButtonDownEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.MouseLeftButtonDown
  commentId: E:System.Windows.UIElement.MouseLeftButtonDown
  id: MouseLeftButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseLeftButtonDown
  nameWithType: UIElement.MouseLeftButtonDown
  fullName: System.Windows.UIElement.MouseLeftButtonDown
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseLeftButtonDown
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 216
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\npressed, while within this element.\n"
  example: []
  syntax:
    content: public event MouseButtonEventHandler MouseLeftButtonDown
    return:
      type: System.Windows.Input.MouseButtonEventHandler
    content.vb: Public Event MouseLeftButtonDown As MouseButtonEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  commentId: M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnMouseLeftButtonDown
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 236
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the PointerPressed event\n"
  example: []
  syntax:
    content: protected virtual void OnMouseLeftButtonDown(MouseButtonEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.MouseButtonEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnMouseLeftButtonDown(eventArgs As MouseButtonEventArgs)
  overload: System.Windows.UIElement.OnMouseLeftButtonDown*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.MouseLeftButtonUpEvent
  commentId: F:System.Windows.UIElement.MouseLeftButtonUpEvent
  id: MouseLeftButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement.MouseLeftButtonUpEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseLeftButtonUpEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 288
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent MouseLeftButtonUpEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.MouseLeftButtonUp
  commentId: E:System.Windows.UIElement.MouseLeftButtonUp
  id: MouseLeftButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseLeftButtonUp
  nameWithType: UIElement.MouseLeftButtonUp
  fullName: System.Windows.UIElement.MouseLeftButtonUp
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseLeftButtonUp
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 328
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\nreleased, while within this element.\n"
  example: []
  syntax:
    content: public event MouseButtonEventHandler MouseLeftButtonUp
    return:
      type: System.Windows.Input.MouseButtonEventHandler
    content.vb: Public Event MouseLeftButtonUp As MouseButtonEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  commentId: M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnMouseLeftButtonUp
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 349
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the PointerReleased event\n"
  example: []
  syntax:
    content: protected virtual void OnMouseLeftButtonUp(MouseButtonEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.MouseButtonEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnMouseLeftButtonUp(eventArgs As MouseButtonEventArgs)
  overload: System.Windows.UIElement.OnMouseLeftButtonUp*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.MouseEnterEvent
  commentId: F:System.Windows.UIElement.MouseEnterEvent
  id: MouseEnterEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseEnterEvent
  nameWithType: UIElement.MouseEnterEvent
  fullName: System.Windows.UIElement.MouseEnterEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseEnterEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 392
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent MouseEnterEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly MouseEnterEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.MouseEnter
  commentId: E:System.Windows.UIElement.MouseEnter
  id: MouseEnter
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseEnter
  nameWithType: UIElement.MouseEnter
  fullName: System.Windows.UIElement.MouseEnter
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseEnter
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 425
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when a pointer enters the hit test area of this element.\n"
  example: []
  syntax:
    content: public event MouseEventHandler MouseEnter
    return:
      type: System.Windows.Input.MouseEventHandler
    content.vb: Public Event MouseEnter As MouseEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  commentId: M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnMouseEnter
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 463
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the PointerEntered event\n"
  example: []
  syntax:
    content: protected virtual void OnMouseEnter(MouseEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.MouseEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnMouseEnter(eventArgs As MouseEventArgs)
  overload: System.Windows.UIElement.OnMouseEnter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.MouseLeaveEvent
  commentId: F:System.Windows.UIElement.MouseLeaveEvent
  id: MouseLeaveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseLeaveEvent
  nameWithType: UIElement.MouseLeaveEvent
  fullName: System.Windows.UIElement.MouseLeaveEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseLeaveEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 504
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent MouseLeaveEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly MouseLeaveEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.MouseLeave
  commentId: E:System.Windows.UIElement.MouseLeave
  id: MouseLeave
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseLeave
  nameWithType: UIElement.MouseLeave
  fullName: System.Windows.UIElement.MouseLeave
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseLeave
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 537
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when a pointer leaves the hit test area of this element.\n"
  example: []
  syntax:
    content: public event MouseEventHandler MouseLeave
    return:
      type: System.Windows.Input.MouseEventHandler
    content.vb: Public Event MouseLeave As MouseEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  commentId: M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnMouseLeave
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 616
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the PointerExited event\n"
  example: []
  syntax:
    content: protected virtual void OnMouseLeave(MouseEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.MouseEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnMouseLeave(eventArgs As MouseEventArgs)
  overload: System.Windows.UIElement.OnMouseLeave*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.TappedEvent
  commentId: F:System.Windows.UIElement.TappedEvent
  id: TappedEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: TappedEvent
  nameWithType: UIElement.TappedEvent
  fullName: System.Windows.UIElement.TappedEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TappedEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 701
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent TappedEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly TappedEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.Tapped
  commentId: E:System.Windows.UIElement.Tapped
  id: Tapped
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: Tapped
  nameWithType: UIElement.Tapped
  fullName: System.Windows.UIElement.Tapped
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Tapped
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 720
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when an otherwise unhandled Tap interaction occurs over the hit test\narea of this element.\n"
  example: []
  syntax:
    content: public event TappedEventHandler Tapped
    return:
      type: System.Windows.Input.TappedEventHandler
    content.vb: Public Event Tapped As TappedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnTapped(System.Windows.Input.TappedRoutedEventArgs)
  commentId: M:System.Windows.UIElement.OnTapped(System.Windows.Input.TappedRoutedEventArgs)
  id: OnTapped(System.Windows.Input.TappedRoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnTapped(TappedRoutedEventArgs)
  nameWithType: UIElement.OnTapped(TappedRoutedEventArgs)
  fullName: System.Windows.UIElement.OnTapped(System.Windows.Input.TappedRoutedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnTapped
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 766
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the Tapped event\n"
  example: []
  syntax:
    content: protected virtual void OnTapped(TappedRoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.TappedRoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnTapped(eventArgs As TappedRoutedEventArgs)
  overload: System.Windows.UIElement.OnTapped*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.MouseRightButtonUpEvent
  commentId: F:System.Windows.UIElement.MouseRightButtonUpEvent
  id: MouseRightButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseRightButtonUpEvent
  nameWithType: UIElement.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement.MouseRightButtonUpEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseRightButtonUpEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 790
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent MouseRightButtonUpEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.MouseRightButtonUp
  commentId: E:System.Windows.UIElement.MouseRightButtonUp
  id: MouseRightButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: MouseRightButtonUp
  nameWithType: UIElement.MouseRightButtonUp
  fullName: System.Windows.UIElement.MouseRightButtonUp
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseRightButtonUp
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 822
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when a right-tap input stimulus happens while the pointer is over\nthe element.\n"
  example: []
  syntax:
    content: public event MouseButtonEventHandler MouseRightButtonUp
    return:
      type: System.Windows.Input.MouseButtonEventHandler
    content.vb: Public Event MouseRightButtonUp As MouseButtonEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  commentId: M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnMouseRightButtonUp
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 893
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the RightTapped event\n"
  example: []
  syntax:
    content: protected virtual void OnMouseRightButtonUp(MouseButtonEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.MouseButtonEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnMouseRightButtonUp(eventArgs As MouseButtonEventArgs)
  overload: System.Windows.UIElement.OnMouseRightButtonUp*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.KeyDownEvent
  commentId: F:System.Windows.UIElement.KeyDownEvent
  id: KeyDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: KeyDownEvent
  nameWithType: UIElement.KeyDownEvent
  fullName: System.Windows.UIElement.KeyDownEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyDownEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 931
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent KeyDownEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly KeyDownEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.KeyDown
  commentId: E:System.Windows.UIElement.KeyDown
  id: KeyDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: KeyDown
  nameWithType: UIElement.KeyDown
  fullName: System.Windows.UIElement.KeyDown
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyDown
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 958
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when a keyboard key is pressed while the UIElement has focus.\n"
  example: []
  syntax:
    content: public event KeyEventHandler KeyDown
    return:
      type: System.Windows.Input.KeyEventHandler
    content.vb: Public Event KeyDown As KeyEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  commentId: M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnKeyDown
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1016
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the KeyDown event\n"
  example: []
  syntax:
    content: protected virtual void OnKeyDown(KeyEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.KeyEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnKeyDown(eventArgs As KeyEventArgs)
  overload: System.Windows.UIElement.OnKeyDown*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.KeyUpEvent
  commentId: F:System.Windows.UIElement.KeyUpEvent
  id: KeyUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: KeyUpEvent
  nameWithType: UIElement.KeyUpEvent
  fullName: System.Windows.UIElement.KeyUpEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyUpEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1046
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent KeyUpEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly KeyUpEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.KeyUp
  commentId: E:System.Windows.UIElement.KeyUp
  id: KeyUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: KeyUp
  nameWithType: UIElement.KeyUp
  fullName: System.Windows.UIElement.KeyUp
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyUp
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1073
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when a keyboard key is released while the UIElement has focus.\n"
  example: []
  syntax:
    content: public event KeyEventHandler KeyUp
    return:
      type: System.Windows.Input.KeyEventHandler
    content.vb: Public Event KeyUp As KeyEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  commentId: M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnKeyUp
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1130
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the KeyUp event\n"
  example: []
  syntax:
    content: protected virtual void OnKeyUp(KeyEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.Input.KeyEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnKeyUp(eventArgs As KeyEventArgs)
  overload: System.Windows.UIElement.OnKeyUp*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.GotFocusEvent
  commentId: F:System.Windows.UIElement.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: GotFocusEvent
  nameWithType: UIElement.GotFocusEvent
  fullName: System.Windows.UIElement.GotFocusEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GotFocusEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1160
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent GotFocusEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly GotFocusEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.GotFocus
  commentId: E:System.Windows.UIElement.GotFocus
  id: GotFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: GotFocus
  nameWithType: UIElement.GotFocus
  fullName: System.Windows.UIElement.GotFocus
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GotFocus
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1180
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when the pointer device that previously initiated a Press action is\npressed, while within this element.\nNote that ONLY sender&apos;s informations are currently filled (not pointer&apos;s)\n"
  example: []
  syntax:
    content: public event RoutedEventHandler GotFocus
    return:
      type: System.Windows.RoutedEventHandler
    content.vb: Public Event GotFocus As RoutedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  commentId: M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  id: OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnGotFocus
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1208
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the GotFocus event\n"
  example: []
  syntax:
    content: protected virtual void OnGotFocus(RoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.RoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnGotFocus(eventArgs As RoutedEventArgs)
  overload: System.Windows.UIElement.OnGotFocus*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.LostFocusEvent
  commentId: F:System.Windows.UIElement.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: LostFocusEvent
  nameWithType: UIElement.LostFocusEvent
  fullName: System.Windows.UIElement.LostFocusEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LostFocusEvent
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1221
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly RoutedEvent LostFocusEvent
    return:
      type: System.Windows.RoutedEvent
    content.vb: Public Shared ReadOnly LostFocusEvent As RoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.UIElement.LostFocus
  commentId: E:System.Windows.UIElement.LostFocus
  id: LostFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: LostFocus
  nameWithType: UIElement.LostFocus
  fullName: System.Windows.UIElement.LostFocus
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LostFocus
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1239
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOccurs when a UIElement loses focus.\n"
  example: []
  syntax:
    content: public event RoutedEventHandler LostFocus
    return:
      type: System.Windows.RoutedEventHandler
    content.vb: Public Event LostFocus As RoutedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  commentId: M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  id: OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnLostFocus
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1267
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRaises the LostFocus event\n"
  example: []
  syntax:
    content: protected virtual void OnLostFocus(RoutedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.Windows.RoutedEventArgs
      description: The arguments for the event.
    content.vb: Protected Overridable Sub OnLostFocus(eventArgs As RoutedEventArgs)
  overload: System.Windows.UIElement.OnLostFocus*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.UIElement.INTERNAL_AttachToDomEvents
  commentId: M:System.Windows.UIElement.INTERNAL_AttachToDomEvents
  id: INTERNAL_AttachToDomEvents
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: INTERNAL_AttachToDomEvents()
  nameWithType: UIElement.INTERNAL_AttachToDomEvents()
  fullName: System.Windows.UIElement.INTERNAL_AttachToDomEvents()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: INTERNAL_AttachToDomEvents
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1588
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public virtual void INTERNAL_AttachToDomEvents()
    content.vb: Public Overridable Sub INTERNAL_AttachToDomEvents
  overload: System.Windows.UIElement.INTERNAL_AttachToDomEvents*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Windows.UIElement.INTERNAL_DetachFromDomEvents
  commentId: M:System.Windows.UIElement.INTERNAL_DetachFromDomEvents
  id: INTERNAL_DetachFromDomEvents
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: INTERNAL_DetachFromDomEvents()
  nameWithType: UIElement.INTERNAL_DetachFromDomEvents()
  fullName: System.Windows.UIElement.INTERNAL_DetachFromDomEvents()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: INTERNAL_DetachFromDomEvents
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1644
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public virtual void INTERNAL_DetachFromDomEvents()
    content.vb: Public Overridable Sub INTERNAL_DetachFromDomEvents
  overload: System.Windows.UIElement.INTERNAL_DetachFromDomEvents*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Object,System.Boolean)
  commentId: M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Object,System.Boolean)
  id: AddHandler(System.Windows.RoutedEvent,System.Object,System.Boolean)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: AddHandler(RoutedEvent, Object, Boolean)
  nameWithType: UIElement.AddHandler(RoutedEvent, Object, Boolean)
  fullName: System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddHandler
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1709
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nAdds a routed event handler for a specified routed event, adding the handler\nto the handler collection on the current element. Specify handledEventsToo\nas true to have the provided handler be invoked for a routed event case that\nhad already been marked as handled by another element along the event route.\n"
  example: []
  syntax:
    content: public void AddHandler(RoutedEvent routedEvent, object handler, bool handledEventsToo)
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: An identifier for the routed event to be handled.
    - id: handler
      type: System.Object
      description: A reference to the handler implementation.
    - id: handledEventsToo
      type: System.Boolean
      description: "\nTrue to register the handler such that it is invoked even when the routed\nevent is marked handled in its event data. False to register the handler\nwith the default condition that it will not be invoked if the routed event\nis already marked handled. The default is false.\n"
    content.vb: Public Sub AddHandler(routedEvent As RoutedEvent, handler As Object, handledEventsToo As Boolean)
  overload: System.Windows.UIElement.AddHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Object)
  commentId: M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Object)
  id: RemoveHandler(System.Windows.RoutedEvent,System.Object)
  parent: System.Windows.UIElement
  langs:
  - csharp
  - vb
  name: RemoveHandler(RoutedEvent, Object)
  nameWithType: UIElement.RemoveHandler(RoutedEvent, Object)
  fullName: System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RemoveHandler
    path: ../GitHub-OpenSilver/src/Runtime/Runtime/Windows.UI.Xaml/UIElement_Events.cs
    startLine: 1826
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRemoves the specified routed event handler from this UIElement. Typically\nthe handler in question was added by AddHandler.\n"
  example: []
  syntax:
    content: public void RemoveHandler(RoutedEvent routedEvent, object handler)
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: The identifier of the routed event for which the handler is attached.
    - id: handler
      type: System.Object
      description: >-
        The specific handler implementation to remove from the event handler collection

        on this UIElement.
    content.vb: Public Sub RemoveHandler(routedEvent As RoutedEvent, handler As Object)
  overload: System.Windows.UIElement.RemoveHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetLocalValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetLocalValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
    name: SetLocalValue
    nameWithType: DependencyObject.SetLocalValue
    fullName: System.Windows.DependencyObject.SetLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetLocalValue(System.Windows.DependencyProperty,System.Object)
    name: SetLocalValue
    nameWithType: DependencyObject.SetLocalValue
    fullName: System.Windows.DependencyObject.SetLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
  commentId: M:System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyObject
  name: CoerceCurrentValue(DependencyProperty, PropertyMetadata)
  nameWithType: DependencyObject.CoerceCurrentValue(DependencyProperty, PropertyMetadata)
  fullName: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty, System.Windows.PropertyMetadata)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
    name: CoerceCurrentValue
    nameWithType: DependencyObject.CoerceCurrentValue
    fullName: System.Windows.DependencyObject.CoerceCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.PropertyMetadata
    name: PropertyMetadata
    nameWithType: PropertyMetadata
    fullName: System.Windows.PropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceCurrentValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata)
    name: CoerceCurrentValue
    nameWithType: DependencyObject.CoerceCurrentValue
    fullName: System.Windows.DependencyObject.CoerceCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.PropertyMetadata
    name: PropertyMetadata
    nameWithType: PropertyMetadata
    fullName: System.Windows.PropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: Coerce(DependencyProperty)
  nameWithType: DependencyObject.Coerce(DependencyProperty)
  fullName: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
    name: Coerce
    nameWithType: DependencyObject.Coerce
    fullName: System.Windows.DependencyObject.Coerce
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.Coerce(System.Windows.DependencyProperty)
    name: Coerce
    nameWithType: DependencyObject.Coerce
    fullName: System.Windows.DependencyObject.Coerce
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.UIElement.ClipToBounds*
  commentId: Overload:System.Windows.UIElement.ClipToBounds
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
  fullName: System.Windows.UIElement.ClipToBounds
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.UIElement.CreateDomElement*
  commentId: Overload:System.Windows.UIElement.CreateDomElement
  name: CreateDomElement
  nameWithType: UIElement.CreateDomElement
  fullName: System.Windows.UIElement.CreateDomElement
- uid: System.Windows.UIElement.CreateDomChildWrapper*
  commentId: Overload:System.Windows.UIElement.CreateDomChildWrapper
  name: CreateDomChildWrapper
  nameWithType: UIElement.CreateDomChildWrapper
  fullName: System.Windows.UIElement.CreateDomChildWrapper
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.UIElement.GetDomElementWhereToPlaceChild*
  commentId: Overload:System.Windows.UIElement.GetDomElementWhereToPlaceChild
  name: GetDomElementWhereToPlaceChild
  nameWithType: UIElement.GetDomElementWhereToPlaceChild
  fullName: System.Windows.UIElement.GetDomElementWhereToPlaceChild
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.UIElement.GetChildsWrapper*
  commentId: Overload:System.Windows.UIElement.GetChildsWrapper
  name: GetChildsWrapper
  nameWithType: UIElement.GetChildsWrapper
  fullName: System.Windows.UIElement.GetChildsWrapper
- uid: System.Windows.UIElement.Effect*
  commentId: Overload:System.Windows.UIElement.Effect
  name: Effect
  nameWithType: UIElement.Effect
  fullName: System.Windows.UIElement.Effect
- uid: System.Windows.Media.Effects.Effect
  commentId: T:System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Effects
  commentId: N:System.Windows.Media.Effects
  name: System.Windows.Media.Effects
  nameWithType: System.Windows.Media.Effects
  fullName: System.Windows.Media.Effects
- uid: System.Windows.UIElement.RenderTransform*
  commentId: Overload:System.Windows.UIElement.RenderTransform
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
  fullName: System.Windows.UIElement.RenderTransform
- uid: System.Windows.Media.Transform
  commentId: T:System.Windows.Media.Transform
  parent: System.Windows.Media
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Windows.UIElement.RenderTransformOrigin*
  commentId: Overload:System.Windows.UIElement.RenderTransformOrigin
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
  fullName: System.Windows.UIElement.RenderTransformOrigin
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.UIElement.UseLayoutRounding*
  commentId: Overload:System.Windows.UIElement.UseLayoutRounding
  name: UseLayoutRounding
  nameWithType: UIElement.UseLayoutRounding
  fullName: System.Windows.UIElement.UseLayoutRounding
- uid: System.Windows.UIElement.Visibility*
  commentId: Overload:System.Windows.UIElement.Visibility
  name: Visibility
  nameWithType: UIElement.Visibility
  fullName: System.Windows.UIElement.Visibility
- uid: System.Windows.Visibility
  commentId: T:System.Windows.Visibility
  parent: System.Windows
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: System.Windows.UIElement.IsVisible*
  commentId: Overload:System.Windows.UIElement.IsVisible
  name: IsVisible
  nameWithType: UIElement.IsVisible
  fullName: System.Windows.UIElement.IsVisible
- uid: System.Windows.DependencyPropertyChangedEventHandler
  commentId: T:System.Windows.DependencyPropertyChangedEventHandler
  parent: System.Windows
  name: DependencyPropertyChangedEventHandler
  nameWithType: DependencyPropertyChangedEventHandler
  fullName: System.Windows.DependencyPropertyChangedEventHandler
- uid: System.Windows.UIElement.Opacity*
  commentId: Overload:System.Windows.UIElement.Opacity
  name: Opacity
  nameWithType: UIElement.Opacity
  fullName: System.Windows.UIElement.Opacity
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.UIElement.IsHitTestVisible*
  commentId: Overload:System.Windows.UIElement.IsHitTestVisible
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
  fullName: System.Windows.UIElement.IsHitTestVisible
- uid: System.Windows.UIElement.AllowDrop*
  commentId: Overload:System.Windows.UIElement.AllowDrop
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
  fullName: System.Windows.UIElement.AllowDrop
- uid: System.Windows.UIElement.CaptureMouse*
  commentId: Overload:System.Windows.UIElement.CaptureMouse
  name: CaptureMouse
  nameWithType: UIElement.CaptureMouse
  fullName: System.Windows.UIElement.CaptureMouse
- uid: System.Windows.UIElement.IsMouseCaptured*
  commentId: Overload:System.Windows.UIElement.IsMouseCaptured
  name: IsMouseCaptured
  nameWithType: UIElement.IsMouseCaptured
  fullName: System.Windows.UIElement.IsMouseCaptured
- uid: System.Windows.UIElement.ReleaseMouseCapture*
  commentId: Overload:System.Windows.UIElement.ReleaseMouseCapture
  name: ReleaseMouseCapture
  nameWithType: UIElement.ReleaseMouseCapture
  fullName: System.Windows.UIElement.ReleaseMouseCapture
- uid: System.Windows.UIElement.OnLostMouseCapture*
  commentId: Overload:System.Windows.UIElement.OnLostMouseCapture
  name: OnLostMouseCapture
  nameWithType: UIElement.OnLostMouseCapture
  fullName: System.Windows.UIElement.OnLostMouseCapture
- uid: System.Windows.Input.MouseEventArgs
  commentId: T:System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: System.Windows.Input.MouseEventHandler
  commentId: T:System.Windows.Input.MouseEventHandler
  parent: System.Windows.Input
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
- uid: System.Windows.UIElement.AllowScrollOnTouchMove*
  commentId: Overload:System.Windows.UIElement.AllowScrollOnTouchMove
  name: AllowScrollOnTouchMove
  nameWithType: UIElement.AllowScrollOnTouchMove
  fullName: System.Windows.UIElement.AllowScrollOnTouchMove
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree*
  commentId: Overload:System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree
  name: INTERNAL_OnDetachedFromVisualTree
  nameWithType: UIElement.INTERNAL_OnDetachedFromVisualTree
  fullName: System.Windows.UIElement.INTERNAL_OnDetachedFromVisualTree
- uid: System.Windows.UIElement.TransformToVisual*
  commentId: Overload:System.Windows.UIElement.TransformToVisual
  name: TransformToVisual
  nameWithType: UIElement.TransformToVisual
  fullName: System.Windows.UIElement.TransformToVisual
- uid: System.Windows.Media.GeneralTransform
  commentId: T:System.Windows.Media.GeneralTransform
  parent: System.Windows.Media
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: System.Windows.Media.GeneralTransform
- uid: System.Windows.RoutedEvent
  commentId: T:System.Windows.RoutedEvent
  parent: System.Windows
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.UIElement.OnMouseMove*
  commentId: Overload:System.Windows.UIElement.OnMouseMove
  name: OnMouseMove
  nameWithType: UIElement.OnMouseMove
  fullName: System.Windows.UIElement.OnMouseMove
- uid: System.Windows.Input.MouseButtonEventHandler
  commentId: T:System.Windows.Input.MouseButtonEventHandler
  parent: System.Windows.Input
  name: MouseButtonEventHandler
  nameWithType: MouseButtonEventHandler
  fullName: System.Windows.Input.MouseButtonEventHandler
- uid: System.Windows.UIElement.OnMouseLeftButtonDown*
  commentId: Overload:System.Windows.UIElement.OnMouseLeftButtonDown
  name: OnMouseLeftButtonDown
  nameWithType: UIElement.OnMouseLeftButtonDown
  fullName: System.Windows.UIElement.OnMouseLeftButtonDown
- uid: System.Windows.Input.MouseButtonEventArgs
  commentId: T:System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.UIElement.OnMouseLeftButtonUp*
  commentId: Overload:System.Windows.UIElement.OnMouseLeftButtonUp
  name: OnMouseLeftButtonUp
  nameWithType: UIElement.OnMouseLeftButtonUp
  fullName: System.Windows.UIElement.OnMouseLeftButtonUp
- uid: System.Windows.UIElement.OnMouseEnter*
  commentId: Overload:System.Windows.UIElement.OnMouseEnter
  name: OnMouseEnter
  nameWithType: UIElement.OnMouseEnter
  fullName: System.Windows.UIElement.OnMouseEnter
- uid: System.Windows.UIElement.OnMouseLeave*
  commentId: Overload:System.Windows.UIElement.OnMouseLeave
  name: OnMouseLeave
  nameWithType: UIElement.OnMouseLeave
  fullName: System.Windows.UIElement.OnMouseLeave
- uid: System.Windows.Input.TappedEventHandler
  commentId: T:System.Windows.Input.TappedEventHandler
  parent: System.Windows.Input
  name: TappedEventHandler
  nameWithType: TappedEventHandler
  fullName: System.Windows.Input.TappedEventHandler
- uid: System.Windows.UIElement.OnTapped*
  commentId: Overload:System.Windows.UIElement.OnTapped
  name: OnTapped
  nameWithType: UIElement.OnTapped
  fullName: System.Windows.UIElement.OnTapped
- uid: System.Windows.Input.TappedRoutedEventArgs
  commentId: T:System.Windows.Input.TappedRoutedEventArgs
  parent: System.Windows.Input
  name: TappedRoutedEventArgs
  nameWithType: TappedRoutedEventArgs
  fullName: System.Windows.Input.TappedRoutedEventArgs
- uid: System.Windows.UIElement.OnMouseRightButtonUp*
  commentId: Overload:System.Windows.UIElement.OnMouseRightButtonUp
  name: OnMouseRightButtonUp
  nameWithType: UIElement.OnMouseRightButtonUp
  fullName: System.Windows.UIElement.OnMouseRightButtonUp
- uid: System.Windows.Input.KeyEventHandler
  commentId: T:System.Windows.Input.KeyEventHandler
  parent: System.Windows.Input
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Input.KeyEventHandler
- uid: System.Windows.UIElement.OnKeyDown*
  commentId: Overload:System.Windows.UIElement.OnKeyDown
  name: OnKeyDown
  nameWithType: UIElement.OnKeyDown
  fullName: System.Windows.UIElement.OnKeyDown
- uid: System.Windows.Input.KeyEventArgs
  commentId: T:System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: System.Windows.UIElement.OnKeyUp*
  commentId: Overload:System.Windows.UIElement.OnKeyUp
  name: OnKeyUp
  nameWithType: UIElement.OnKeyUp
  fullName: System.Windows.UIElement.OnKeyUp
- uid: System.Windows.RoutedEventHandler
  commentId: T:System.Windows.RoutedEventHandler
  parent: System.Windows
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.UIElement.OnGotFocus*
  commentId: Overload:System.Windows.UIElement.OnGotFocus
  name: OnGotFocus
  nameWithType: UIElement.OnGotFocus
  fullName: System.Windows.UIElement.OnGotFocus
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  parent: System.Windows
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.UIElement.OnLostFocus*
  commentId: Overload:System.Windows.UIElement.OnLostFocus
  name: OnLostFocus
  nameWithType: UIElement.OnLostFocus
  fullName: System.Windows.UIElement.OnLostFocus
- uid: System.Windows.UIElement.INTERNAL_AttachToDomEvents*
  commentId: Overload:System.Windows.UIElement.INTERNAL_AttachToDomEvents
  name: INTERNAL_AttachToDomEvents
  nameWithType: UIElement.INTERNAL_AttachToDomEvents
  fullName: System.Windows.UIElement.INTERNAL_AttachToDomEvents
- uid: System.Windows.UIElement.INTERNAL_DetachFromDomEvents*
  commentId: Overload:System.Windows.UIElement.INTERNAL_DetachFromDomEvents
  name: INTERNAL_DetachFromDomEvents
  nameWithType: UIElement.INTERNAL_DetachFromDomEvents
  fullName: System.Windows.UIElement.INTERNAL_DetachFromDomEvents
- uid: System.Windows.UIElement.AddHandler*
  commentId: Overload:System.Windows.UIElement.AddHandler
  name: AddHandler
  nameWithType: UIElement.AddHandler
  fullName: System.Windows.UIElement.AddHandler
- uid: System.Windows.UIElement.RemoveHandler*
  commentId: Overload:System.Windows.UIElement.RemoveHandler
  name: RemoveHandler
  nameWithType: UIElement.RemoveHandler
  fullName: System.Windows.UIElement.RemoveHandler
