### YamlMime:ManagedReference
items:
- uid: System.Windows.WindowCollection
  commentId: T:System.Windows.WindowCollection
  id: WindowCollection
  parent: System.Windows
  children:
  - System.Windows.WindowCollection.CopyTo(Array,System.Int32)
  - System.Windows.WindowCollection.Count
  - System.Windows.WindowCollection.GetEnumerator
  - System.Windows.WindowCollection.IsSynchronized
  - System.Windows.WindowCollection.SyncRoot
  langs:
  - csharp
  - vb
  name: WindowCollection
  nameWithType: WindowCollection
  fullName: System.Windows.WindowCollection
  type: Class
  source:
    id: WindowCollection
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\WORKINPROGRESS\WindowCollection.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: 'public sealed class WindowCollection : ICollection, IEnumerable'
    content.vb: >-
      Public NotInheritable Class WindowCollection
          Inherits ICollection
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - IEnumerable
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.WindowCollection.Count
  commentId: P:System.Windows.WindowCollection.Count
  id: Count
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: WindowCollection.Count
  fullName: System.Windows.WindowCollection.Count
  type: Property
  source:
    id: Count
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\WORKINPROGRESS\WindowCollection.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Windows.WindowCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowCollection.IsSynchronized
  commentId: P:System.Windows.WindowCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
  fullName: System.Windows.WindowCollection.IsSynchronized
  type: Property
  source:
    id: IsSynchronized
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\WORKINPROGRESS\WindowCollection.cs
    startLine: 47
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public bool IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSynchronized As Boolean
  overload: System.Windows.WindowCollection.IsSynchronized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowCollection.SyncRoot
  commentId: P:System.Windows.WindowCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
  fullName: System.Windows.WindowCollection.SyncRoot
  type: Property
  source:
    id: SyncRoot
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\WORKINPROGRESS\WindowCollection.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public object SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property SyncRoot As Object
  overload: System.Windows.WindowCollection.SyncRoot*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowCollection.CopyTo(Array,System.Int32)
  commentId: M:System.Windows.WindowCollection.CopyTo(Array,System.Int32)
  id: CopyTo(Array,System.Int32)
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  nameWithType: WindowCollection.CopyTo(Array, Int32)
  fullName: System.Windows.WindowCollection.CopyTo(Array, System.Int32)
  type: Method
  source:
    id: CopyTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\WORKINPROGRESS\WindowCollection.cs
    startLine: 58
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void CopyTo(Array array, int arrayIndex)
    parameters:
    - id: array
      type: Array
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As Array, arrayIndex As Integer)
  overload: System.Windows.WindowCollection.CopyTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.WindowCollection.GetEnumerator
  commentId: M:System.Windows.WindowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: WindowCollection.GetEnumerator()
  fullName: System.Windows.WindowCollection.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows\WORKINPROGRESS\WindowCollection.cs
    startLine: 77
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public IEnumerator GetEnumerator()
    return:
      type: IEnumerator
    content.vb: Public Function GetEnumerator As IEnumerator
  overload: System.Windows.WindowCollection.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: IEnumerable
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.WindowCollection.Count*
  commentId: Overload:System.Windows.WindowCollection.Count
  name: Count
  nameWithType: WindowCollection.Count
  fullName: System.Windows.WindowCollection.Count
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.WindowCollection.IsSynchronized*
  commentId: Overload:System.Windows.WindowCollection.IsSynchronized
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
  fullName: System.Windows.WindowCollection.IsSynchronized
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.WindowCollection.SyncRoot*
  commentId: Overload:System.Windows.WindowCollection.SyncRoot
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
  fullName: System.Windows.WindowCollection.SyncRoot
- uid: System.Windows.WindowCollection.CopyTo*
  commentId: Overload:System.Windows.WindowCollection.CopyTo
  name: CopyTo
  nameWithType: WindowCollection.CopyTo
  fullName: System.Windows.WindowCollection.CopyTo
- uid: Array
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: Array
- uid: System.Windows.WindowCollection.GetEnumerator*
  commentId: Overload:System.Windows.WindowCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: WindowCollection.GetEnumerator
  fullName: System.Windows.WindowCollection.GetEnumerator
- uid: IEnumerator
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: IEnumerator
