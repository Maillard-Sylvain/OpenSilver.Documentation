### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  id: XElement
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  - System.Xml.Linq.XElement.Attributes
  - System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.GetDefaultNamespace
  - System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  - System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XElement.Name
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  - System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.Value
  langs:
  - csharp
  - vb
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
  type: Class
  source:
    id: XElement
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 32
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nRepresents an XML element.\n"
  example: []
  syntax:
    content: 'public class XElement : XContainer'
    content.vb: >-
      Public Class XElement
          Inherits XContainer
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  - System.Xml.Linq.XContainer
  inheritedMembers:
  - System.Xml.Linq.XContainer.Nodes
  - System.Xml.Linq.XContainer.Add(System.Object)
  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Elements
  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.FirstNode
  - System.Xml.Linq.XContainer.Descendants
  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.Document
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  id: '#ctor(System.Xml.Linq.XName)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XName)
  nameWithType: XElement.XElement(XName)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 61
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nInitializes a new instance of the System.Xml.Linq.XElement class with the\nspecified name.\n"
  example: []
  syntax:
    content: public XElement(XName name)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: An System.Xml.Linq.XName that contains the name of the element.
    content.vb: Public Sub New(name As XName)
  overload: System.Xml.Linq.XElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  id: '#ctor(System.Xml.Linq.XElement)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XElement)
  nameWithType: XElement.XElement(XElement)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XElement)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 89
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nInitializes a new instance of the System.Xml.Linq.XElement class from another\nSystem.Xml.Linq.XElement object.\n"
  example: []
  syntax:
    content: public XElement(XElement other)
    parameters:
    - id: other
      type: System.Xml.Linq.XElement
      description: An System.Xml.Linq.XElement object to copy from.
    content.vb: Public Sub New(other As XElement)
  overload: System.Xml.Linq.XElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  id: '#ctor(System.Xml.Linq.XName,System.Object)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XName, Object)
  nameWithType: XElement.XElement(XName, Object)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 97
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nInitializes a new instance of the System.Xml.Linq.XElement class with the\nspecified name and content.\n"
  example: []
  syntax:
    content: public XElement(XName name, object content)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: A System.Xml.Linq.XName that contains the element name.
    - id: content
      type: System.Object
      description: The contents of the element.
    content.vb: Public Sub New(name As XName, content As Object)
  overload: System.Xml.Linq.XElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  id: '#ctor(System.Xml.Linq.XName,System.Object[])'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XName, Object[])
  nameWithType: XElement.XElement(XName, Object[])
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 120
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nInitializes a new instance of the System.Xml.Linq.XElement class with the\nspecified name and content.\n"
  example: []
  syntax:
    content: public XElement(XName name, params object[] content)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: A System.Xml.Linq.XName that contains the element name.
    - id: content
      type: System.Object[]
      description: The initial content of the element.
    content.vb: Public Sub New(name As XName, ParamArray content As Object())
  overload: System.Xml.Linq.XElement.#ctor*
  nameWithType.vb: XElement.XElement(XName, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object())
  name.vb: XElement(XName, Object())
- uid: System.Xml.Linq.XElement.Name
  commentId: P:System.Xml.Linq.XElement.Name
  id: Name
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XElement.Name
  fullName: System.Xml.Linq.XElement.Name
  type: Property
  source:
    id: Name
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 133
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nGets or sets the name of this element.\n"
  example: []
  syntax:
    content: public XName Name { get; set; }
    parameters: []
    return:
      type: System.Xml.Linq.XName
    content.vb: Public Property Name As XName
  overload: System.Xml.Linq.XElement.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.Attributes
  commentId: M:System.Xml.Linq.XElement.Attributes
  id: Attributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Attributes()
  nameWithType: XElement.Attributes()
  fullName: System.Xml.Linq.XElement.Attributes()
  type: Method
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 216
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nReturns a collection of attributes of this element.\n"
  example: []
  syntax:
    content: public IEnumerable<XAttribute> Attributes()
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: "\nAn System.Collections.Generic.IEnumerable`1 of System.Xml.Linq.XAttribute\nof attributes of this element.\n"
    content.vb: Public Function Attributes As IEnumerable(Of XAttribute)
  overload: System.Xml.Linq.XElement.Attributes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  id: Attributes(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Attributes(XName)
  nameWithType: XElement.Attributes(XName)
  fullName: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  type: Method
  source:
    id: Attributes
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 247
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nReturns a filtered collection of attributes of this element. Only elements\nthat have a matching System.Xml.Linq.XName are included in the collection.\n"
  example: []
  syntax:
    content: public IEnumerable<XAttribute> Attributes(XName name)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The System.Xml.Linq.XName to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: "\nAn System.Collections.Generic.IEnumerable`1 of System.Xml.Linq.XAttribute\nthat contains the attributes of this element. Only elements that have a matching\nSystem.Xml.Linq.XName are included in the collection.\n"
    content.vb: Public Function Attributes(name As XName) As IEnumerable(Of XAttribute)
  overload: System.Xml.Linq.XElement.Attributes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.GetDefaultNamespace
  commentId: M:System.Xml.Linq.XElement.GetDefaultNamespace
  id: GetDefaultNamespace
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: GetDefaultNamespace()
  nameWithType: XElement.GetDefaultNamespace()
  fullName: System.Xml.Linq.XElement.GetDefaultNamespace()
  type: Method
  source:
    id: GetDefaultNamespace
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 302
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nGets the default System.Xml.Linq.XNamespace of this System.Xml.Linq.XElement.\n"
  example: []
  syntax:
    content: public XNamespace GetDefaultNamespace()
    return:
      type: System.Xml.Linq.XNamespace
      description: "\nA System.Xml.Linq.XNamespace that contains the default namespace of this\nSystem.Xml.Linq.XElement.\n"
    content.vb: Public Function GetDefaultNamespace As XNamespace
  overload: System.Xml.Linq.XElement.GetDefaultNamespace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  commentId: M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  id: GetNamespaceOfPrefix(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: GetNamespaceOfPrefix(String)
  nameWithType: XElement.GetNamespaceOfPrefix(String)
  fullName: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  type: Method
  source:
    id: GetNamespaceOfPrefix
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 316
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nGets the namespace associated with a particular prefix for this System.Xml.Linq.XElement.\n"
  example: []
  syntax:
    content: public XNamespace GetNamespaceOfPrefix(string prefix)
    parameters:
    - id: prefix
      type: System.String
      description: A string that contains the namespace prefix to look up.
    return:
      type: System.Xml.Linq.XNamespace
      description: "\nAn System.Xml.Linq.XNamespace for the namespace associated with the prefix\nfor this System.Xml.Linq.XElement.\n"
    content.vb: Public Function GetNamespaceOfPrefix(prefix As String) As XNamespace
  overload: System.Xml.Linq.XElement.GetNamespaceOfPrefix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  commentId: M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  id: GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: GetPrefixOfNamespace(XNamespace)
  nameWithType: XElement.GetPrefixOfNamespace(XNamespace)
  fullName: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  type: Method
  source:
    id: GetPrefixOfNamespace
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 327
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nGets the prefix associated with a namespace for this System.Xml.Linq.XElement.\n"
  example: []
  syntax:
    content: public string GetPrefixOfNamespace(XNamespace ns)
    parameters:
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: An System.Xml.Linq.XNamespace to look up.
    return:
      type: System.String
      description: A System.String that contains the namespace prefix.
    content.vb: Public Function GetPrefixOfNamespace(ns As XNamespace) As String
  overload: System.Xml.Linq.XElement.GetPrefixOfNamespace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  commentId: M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  id: SetAttributeValue(System.Xml.Linq.XName,System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: SetAttributeValue(XName, Object)
  nameWithType: XElement.SetAttributeValue(XName, Object)
  fullName: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName, System.Object)
  type: Method
  source:
    id: SetAttributeValue
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 345
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nSets the value of an attribute, adds an attribute, or removes an attribute.\n"
  example: []
  syntax:
    content: public void SetAttributeValue(XName name, object value)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: An System.Xml.Linq.XName that contains the name of the attribute to change.
    - id: value
      type: System.Object
      description: "\nThe value to assign to the attribute. The attribute is removed if the value\nis null. Otherwise, the value is converted to its string representation and\nassigned to the System.Xml.Linq.XAttribute.Value property of the attribute.\n"
    content.vb: Public Sub SetAttributeValue(name As XName, value As Object)
  overload: System.Xml.Linq.XElement.SetAttributeValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.Value
  commentId: P:System.Xml.Linq.XElement.Value
  id: Value
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: XElement.Value
  fullName: System.Xml.Linq.XElement.Value
  type: Property
  source:
    id: Value
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 372
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nGets or sets the concatenated text contents of this element.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: System.Xml.Linq.XElement.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid
  id: op_Explicit(System.Xml.Linq.XElement)~System.Guid
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Guid)
  nameWithType: XElement.Explicit(XElement to Guid)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Guid)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 392
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.Guid.\n"
  example: []
  syntax:
    content: public static explicit operator Guid(XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.Guid.
    return:
      type: System.Guid
      description: A System.Guid that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Guid
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Guid)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Guid)
  name.vb: Narrowing(XElement to Guid)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  id: op_Explicit(System.Xml.Linq.XElement)~System.Double
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Double)
  nameWithType: XElement.Explicit(XElement to Double)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Double)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 412
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.Double.\n"
  example: []
  syntax:
    content: public static explicit operator double (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.Double.
    return:
      type: System.Double
      description: A System.Double that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Double
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Double)
  name.vb: Narrowing(XElement to Double)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  id: op_Explicit(System.Xml.Linq.XElement)~System.DateTime
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to DateTime)
  nameWithType: XElement.Explicit(XElement to DateTime)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.DateTime)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 432
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.DateTime.\n"
  example: []
  syntax:
    content: public static explicit operator DateTime(XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.DateTime.
    return:
      type: System.DateTime
      description: A System.DateTime that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Date
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.DateTime)
  name.vb: Narrowing(XElement to DateTime)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  id: op_Explicit(System.Xml.Linq.XElement)~System.Int64
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Int64)
  nameWithType: XElement.Explicit(XElement to Int64)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int64)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 508
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to an System.Int64.\n"
  example: []
  syntax:
    content: public static explicit operator long (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.Int64.
    return:
      type: System.Int64
      description: A System.Int64 that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Long
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int64)
  name.vb: Narrowing(XElement to Int64)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  id: op_Explicit(System.Xml.Linq.XElement)~System.Int32
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Int32)
  nameWithType: XElement.Explicit(XElement to Int32)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int32)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 528
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to an System.Int32.\n"
  example: []
  syntax:
    content: public static explicit operator int (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.Int32.
    return:
      type: System.Int32
      description: A System.Int32 that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Integer
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int32)
  name.vb: Narrowing(XElement to Int32)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  id: op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Boolean)
  nameWithType: XElement.Explicit(XElement to Boolean)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Boolean)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 548
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.Boolean.\n"
  example: []
  syntax:
    content: public static explicit operator bool (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.Boolean.
    return:
      type: System.Boolean
      description: A System.Boolean that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Boolean
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Boolean)
  name.vb: Narrowing(XElement to Boolean)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to UInt64)
  nameWithType: XElement.Explicit(XElement to UInt64)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt64)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 568
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.UInt64.\n"
  example: []
  syntax:
    content: public static explicit operator ulong (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.UInt64.
    return:
      type: System.UInt64
      description: A System.UInt64 that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As ULong
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt64)
  name.vb: Narrowing(XElement to UInt64)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to UInt32)
  nameWithType: XElement.Explicit(XElement to UInt32)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt32)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 588
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.UInt32.\n"
  example: []
  syntax:
    content: public static explicit operator uint (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.UInt32.
    return:
      type: System.UInt32
      description: A System.UInt32 that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As UInteger
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to UInt32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt32)
  name.vb: Narrowing(XElement to UInt32)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  id: op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to TimeSpan)
  nameWithType: XElement.Explicit(XElement to TimeSpan)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.TimeSpan)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 608
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.TimeSpan.\n"
  example: []
  syntax:
    content: public static explicit operator TimeSpan(XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.TimeSpan.
    return:
      type: System.TimeSpan
      description: A System.TimeSpan that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As TimeSpan
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.TimeSpan)
  name.vb: Narrowing(XElement to TimeSpan)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  id: op_Explicit(System.Xml.Linq.XElement)~System.String
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to String)
  nameWithType: XElement.Explicit(XElement to String)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.String)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 632
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.String.\n"
  example: []
  syntax:
    content: public static explicit operator string (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.String.
    return:
      type: System.String
      description: A System.String that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As String
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.String)
  name.vb: Narrowing(XElement to String)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  id: op_Explicit(System.Xml.Linq.XElement)~System.Single
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Single)
  nameWithType: XElement.Explicit(XElement to Single)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Single)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 651
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  summary: "\nCast the value of this System.Xml.Linq.XElement to a System.Single.\n"
  example: []
  syntax:
    content: public static explicit operator float (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The System.Xml.Linq.XElement to cast to System.Single.
    return:
      type: System.Single
      description: A System.Single that contains the content of this System.Xml.Linq.XElement.
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Single
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Single)
  name.vb: Narrowing(XElement to Single)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Boolean>)
  nameWithType: XElement.Explicit(XElement to Nullable<Boolean>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Boolean>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 666
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator bool? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Boolean?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Boolean))
  name.vb: Narrowing(XElement to Nullable(Of Boolean))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<DateTime>)
  nameWithType: XElement.Explicit(XElement to Nullable<DateTime>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.DateTime>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 693
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator DateTime? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Date?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.DateTime))
  name.vb: Narrowing(XElement to Nullable(Of DateTime))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Double>)
  nameWithType: XElement.Explicit(XElement to Nullable<Double>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Double>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 774
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator double? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Double?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Double))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Double))
  name.vb: Narrowing(XElement to Nullable(Of Double))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Guid>)
  nameWithType: XElement.Explicit(XElement to Nullable<Guid>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Guid>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 801
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator Guid? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Guid?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Guid))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Guid))
  name.vb: Narrowing(XElement to Nullable(Of Guid))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Int32>)
  nameWithType: XElement.Explicit(XElement to Nullable<Int32>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int32>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 828
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator int? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Integer?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int32))
  name.vb: Narrowing(XElement to Nullable(Of Int32))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Int64>)
  nameWithType: XElement.Explicit(XElement to Nullable<Int64>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int64>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 855
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator long? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Long?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int64))
  name.vb: Narrowing(XElement to Nullable(Of Int64))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Single>)
  nameWithType: XElement.Explicit(XElement to Nullable<Single>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Single>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 882
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator float? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.Single}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Single?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Single))
  name.vb: Narrowing(XElement to Nullable(Of Single))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<TimeSpan>)
  nameWithType: XElement.Explicit(XElement to Nullable<TimeSpan>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.TimeSpan>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 909
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator TimeSpan? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As TimeSpan?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.TimeSpan))
  name.vb: Narrowing(XElement to Nullable(Of TimeSpan))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<UInt32>)
  nameWithType: XElement.Explicit(XElement to Nullable<UInt32>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt32>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 941
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator uint? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.UInt32}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As UInteger?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of UInt32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt32))
  name.vb: Narrowing(XElement to Nullable(Of UInt32))
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<UInt64>)
  nameWithType: XElement.Explicit(XElement to Nullable<UInt64>)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt64>)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Xml.Linq\XElement.cs
    startLine: 968
  assemblies:
  - Runtime.OpenSilver
  namespace: System.Xml.Linq
  syntax:
    content: public static explicit operator ulong? (XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Nullable{System.UInt64}
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As ULong?
  overload: System.Xml.Linq.XElement.op_Explicit*
  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of UInt64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt64))
  name.vb: Narrowing(XElement to Nullable(Of UInt64))
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Linq.XObject
  commentId: T:System.Xml.Linq.XObject
  parent: System.Xml.Linq
  name: XObject
  nameWithType: XObject
  fullName: System.Xml.Linq.XObject
- uid: System.Xml.Linq.XNode
  commentId: T:System.Xml.Linq.XNode
  parent: System.Xml.Linq
  name: XNode
  nameWithType: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XContainer
  commentId: T:System.Xml.Linq.XContainer
  parent: System.Xml.Linq
  name: XContainer
  nameWithType: XContainer
  fullName: System.Xml.Linq.XContainer
- uid: System.Xml.Linq.XContainer.Nodes
  commentId: M:System.Xml.Linq.XContainer.Nodes
  parent: System.Xml.Linq.XContainer
  name: Nodes()
  nameWithType: XContainer.Nodes()
  fullName: System.Xml.Linq.XContainer.Nodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Nodes
    name: Nodes
    nameWithType: XContainer.Nodes
    fullName: System.Xml.Linq.XContainer.Nodes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Nodes
    name: Nodes
    nameWithType: XContainer.Nodes
    fullName: System.Xml.Linq.XContainer.Nodes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Add(System.Object)
  commentId: M:System.Xml.Linq.XContainer.Add(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: Add(Object)
  nameWithType: XContainer.Add(Object)
  fullName: System.Xml.Linq.XContainer.Add(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Add(System.Object)
    name: Add
    nameWithType: XContainer.Add
    fullName: System.Xml.Linq.XContainer.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Add(System.Object)
    name: Add
    nameWithType: XContainer.Add
    fullName: System.Xml.Linq.XContainer.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  name: Element(XName)
  nameWithType: XContainer.Element(XName)
  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
    name: Element
    nameWithType: XContainer.Element
    fullName: System.Xml.Linq.XContainer.Element
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: System.Xml.Linq.XName
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
    name: Element
    nameWithType: XContainer.Element
    fullName: System.Xml.Linq.XContainer.Element
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: System.Xml.Linq.XName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Elements
  commentId: M:System.Xml.Linq.XContainer.Elements
  parent: System.Xml.Linq.XContainer
  name: Elements()
  nameWithType: XContainer.Elements()
  fullName: System.Xml.Linq.XContainer.Elements()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Elements
    name: Elements
    nameWithType: XContainer.Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Elements
    name: Elements
    nameWithType: XContainer.Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  name: Elements(XName)
  nameWithType: XContainer.Elements(XName)
  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
    name: Elements
    nameWithType: XContainer.Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: System.Xml.Linq.XName
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
    name: Elements
    nameWithType: XContainer.Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: System.Xml.Linq.XName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.FirstNode
  commentId: P:System.Xml.Linq.XContainer.FirstNode
  parent: System.Xml.Linq.XContainer
  name: FirstNode
  nameWithType: XContainer.FirstNode
  fullName: System.Xml.Linq.XContainer.FirstNode
- uid: System.Xml.Linq.XContainer.Descendants
  commentId: M:System.Xml.Linq.XContainer.Descendants
  parent: System.Xml.Linq.XContainer
  name: Descendants()
  nameWithType: XContainer.Descendants()
  fullName: System.Xml.Linq.XContainer.Descendants()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Descendants
    name: Descendants
    nameWithType: XContainer.Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Descendants
    name: Descendants
    nameWithType: XContainer.Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  name: Descendants(XName)
  nameWithType: XContainer.Descendants(XName)
  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
    name: Descendants
    nameWithType: XContainer.Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: System.Xml.Linq.XName
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
    name: Descendants
    nameWithType: XContainer.Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: System.Xml.Linq.XName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XNode.ToString
  commentId: M:System.Xml.Linq.XNode.ToString
  parent: System.Xml.Linq.XNode
  name: ToString()
  nameWithType: XNode.ToString()
  fullName: System.Xml.Linq.XNode.ToString()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    nameWithType: XNode.ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    nameWithType: XNode.ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XNode.Document
  commentId: P:System.Xml.Linq.XNode.Document
  parent: System.Xml.Linq.XNode
  name: Document
  nameWithType: XNode.Document
  fullName: System.Xml.Linq.XNode.Document
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xml.Linq.XElement.#ctor*
  commentId: Overload:System.Xml.Linq.XElement.#ctor
  name: XElement
  nameWithType: XElement.XElement
  fullName: System.Xml.Linq.XElement.XElement
- uid: System.Xml.Linq.XName
  commentId: T:System.Xml.Linq.XName
  parent: System.Xml.Linq
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Xml.Linq.XElement.Name*
  commentId: Overload:System.Xml.Linq.XElement.Name
  name: Name
  nameWithType: XElement.Name
  fullName: System.Xml.Linq.XElement.Name
- uid: System.Xml.Linq.XElement.Attributes*
  commentId: Overload:System.Xml.Linq.XElement.Attributes
  name: Attributes
  nameWithType: XElement.Attributes
  fullName: System.Xml.Linq.XElement.Attributes
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XAttribute>
  nameWithType: IEnumerable<XAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>
  nameWithType.vb: IEnumerable(Of XAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute)
  name.vb: IEnumerable(Of XAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    nameWithType: XAttribute
    fullName: System.Xml.Linq.XAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    nameWithType: XAttribute
    fullName: System.Xml.Linq.XAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xml.Linq.XElement.GetDefaultNamespace*
  commentId: Overload:System.Xml.Linq.XElement.GetDefaultNamespace
  name: GetDefaultNamespace
  nameWithType: XElement.GetDefaultNamespace
  fullName: System.Xml.Linq.XElement.GetDefaultNamespace
- uid: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: System.Xml.Linq.XElement.GetNamespaceOfPrefix*
  commentId: Overload:System.Xml.Linq.XElement.GetNamespaceOfPrefix
  name: GetNamespaceOfPrefix
  nameWithType: XElement.GetNamespaceOfPrefix
  fullName: System.Xml.Linq.XElement.GetNamespaceOfPrefix
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XElement.GetPrefixOfNamespace*
  commentId: Overload:System.Xml.Linq.XElement.GetPrefixOfNamespace
  name: GetPrefixOfNamespace
  nameWithType: XElement.GetPrefixOfNamespace
  fullName: System.Xml.Linq.XElement.GetPrefixOfNamespace
- uid: System.Xml.Linq.XElement.SetAttributeValue*
  commentId: Overload:System.Xml.Linq.XElement.SetAttributeValue
  name: SetAttributeValue
  nameWithType: XElement.SetAttributeValue
  fullName: System.Xml.Linq.XElement.SetAttributeValue
- uid: System.Xml.Linq.XElement.Value*
  commentId: Overload:System.Xml.Linq.XElement.Value
  name: Value
  nameWithType: XElement.Value
  fullName: System.Xml.Linq.XElement.Value
- uid: System.Xml.Linq.XElement.op_Explicit*
  commentId: Overload:System.Xml.Linq.XElement.op_Explicit
  name: Explicit
  nameWithType: XElement.Explicit
  fullName: System.Xml.Linq.XElement.Explicit
  nameWithType.vb: XElement.Narrowing
  fullName.vb: System.Xml.Linq.XElement.Narrowing
  name.vb: Narrowing
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt32>
  nameWithType: Nullable<UInt32>
  fullName: System.Nullable<System.UInt32>
  nameWithType.vb: Nullable(Of UInt32)
  fullName.vb: System.Nullable(Of System.UInt32)
  name.vb: Nullable(Of UInt32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
