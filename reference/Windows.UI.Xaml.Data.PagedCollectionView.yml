### YamlMime:ManagedReference
items:
- uid: Windows.UI.Xaml.Data.PagedCollectionView
  commentId: T:Windows.UI.Xaml.Data.PagedCollectionView
  id: PagedCollectionView
  parent: Windows.UI.Xaml.Data
  children:
  - Windows.UI.Xaml.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable)
  - Windows.UI.Xaml.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)
  - Windows.UI.Xaml.Data.PagedCollectionView.AddNew
  - Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew
  - Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit
  - Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit
  - Windows.UI.Xaml.Data.PagedCollectionView.CancelNew
  - Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage
  - Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  - Windows.UI.Xaml.Data.PagedCollectionView.CanGroup
  - Windows.UI.Xaml.Data.PagedCollectionView.CanRemove
  - Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  - Windows.UI.Xaml.Data.PagedCollectionView.CollectionChanged
  - Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit
  - Windows.UI.Xaml.Data.PagedCollectionView.CommitNew
  - Windows.UI.Xaml.Data.PagedCollectionView.Contains(System.Object)
  - Windows.UI.Xaml.Data.PagedCollectionView.Count
  - Windows.UI.Xaml.Data.PagedCollectionView.Culture
  - Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem
  - Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanged
  - Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanging
  - Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem
  - Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem
  - Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition
  - Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh
  - Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)
  - Windows.UI.Xaml.Data.PagedCollectionView.Filter
  - Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator
  - Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt(System.Int32)
  - Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions
  - Windows.UI.Xaml.Data.PagedCollectionView.Groups
  - Windows.UI.Xaml.Data.PagedCollectionView.IndexOf(System.Object)
  - Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew
  - Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast
  - Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst
  - Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem
  - Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty
  - Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging
  - Windows.UI.Xaml.Data.PagedCollectionView.Item(System.Int32)
  - Windows.UI.Xaml.Data.PagedCollectionView.ItemCount
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo(System.Object)
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage(System.Int32)
  - Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage
  - Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh
  - Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition
  - Windows.UI.Xaml.Data.PagedCollectionView.PageChanged
  - Windows.UI.Xaml.Data.PagedCollectionView.PageChanging
  - Windows.UI.Xaml.Data.PagedCollectionView.PageIndex
  - Windows.UI.Xaml.Data.PagedCollectionView.PageSize
  - Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter(System.Object)
  - Windows.UI.Xaml.Data.PagedCollectionView.PropertyChanged
  - Windows.UI.Xaml.Data.PagedCollectionView.Refresh
  - Windows.UI.Xaml.Data.PagedCollectionView.Remove(System.Object)
  - Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt(System.Int32)
  - Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions
  - Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection
  - Windows.UI.Xaml.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator
  - Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount
  langs:
  - csharp
  - vb
  name: PagedCollectionView
  nameWithType: PagedCollectionView
  fullName: Windows.UI.Xaml.Data.PagedCollectionView
  type: Class
  source:
    id: PagedCollectionView
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 37
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nPagedCollectionView view over an IEnumerable.\n"
  example: []
  syntax:
    content: 'public sealed class PagedCollectionView : ICollectionView, IEnumerable, INotifyCollectionChanged, IPagedCollectionView, IEditableCollectionView, INotifyPropertyChanged'
    content.vb: >-
      Public NotInheritable Class PagedCollectionView
          Implements ICollectionView, IEnumerable, INotifyCollectionChanged, IPagedCollectionView, IEditableCollectionView, INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ICollectionView
  - System.Collections.IEnumerable
  - INotifyCollectionChanged
  - System.ComponentModel.IPagedCollectionView
  - System.ComponentModel.IEditableCollectionView
  - INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Windows.UI.Xaml.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable)
  id: '#ctor(System.Collections.IEnumerable)'
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PagedCollectionView(IEnumerable)
  nameWithType: PagedCollectionView.PagedCollectionView(IEnumerable)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PagedCollectionView(System.Collections.IEnumerable)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 212
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nHelper constructor that sets default values for isDataSorted and isDataInGroupOrder.\n"
  example: []
  syntax:
    content: public PagedCollectionView(IEnumerable source)
    parameters:
    - id: source
      type: System.Collections.IEnumerable
      description: The source for the collection
    content.vb: Public Sub New(source As IEnumerable)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)'
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PagedCollectionView(IEnumerable, Boolean, Boolean)
  nameWithType: PagedCollectionView.PagedCollectionView(IEnumerable, Boolean, Boolean)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PagedCollectionView(System.Collections.IEnumerable, System.Boolean, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 223
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nInitializes a new instance of the PagedCollectionView class.\n"
  example: []
  syntax:
    content: public PagedCollectionView(IEnumerable source, bool isDataSorted, bool isDataInGroupOrder)
    parameters:
    - id: source
      type: System.Collections.IEnumerable
      description: The source for the collection
    - id: isDataSorted
      type: System.Boolean
      description: Determines whether the source is already sorted
    - id: isDataInGroupOrder
      type: System.Boolean
      description: Whether the source is already in the correct order for grouping
    content.vb: Public Sub New(source As IEnumerable, isDataSorted As Boolean, isDataInGroupOrder As Boolean)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CollectionChanged
  commentId: E:Windows.UI.Xaml.Data.PagedCollectionView.CollectionChanged
  id: CollectionChanged
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CollectionChanged
  nameWithType: PagedCollectionView.CollectionChanged
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CollectionChanged
  type: Event
  source:
    id: CollectionChanged
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 299
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRaise this event when the (filtered) view changes\n"
  example: []
  syntax:
    content: public event NotifyCollectionChangedEventHandler CollectionChanged
    return:
      type: NotifyCollectionChangedEventHandler
    content.vb: Public Event CollectionChanged As NotifyCollectionChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanged
  commentId: E:Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanged
  id: CurrentChanged
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentChanged
  nameWithType: PagedCollectionView.CurrentChanged
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanged
  type: Event
  source:
    id: CurrentChanged
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 313
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRaised when the CurrentItem property changed\n"
  example: []
  syntax:
    content: public event EventHandler CurrentChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CurrentChanged As EventHandler
  implements:
  - System.ComponentModel.ICollectionView.CurrentChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanging
  commentId: E:Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanging
  id: CurrentChanging
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentChanging
  nameWithType: PagedCollectionView.CurrentChanging
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentChanging
  type: Event
  source:
    id: CurrentChanging
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 318
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRaised when the CurrentItem property is changing\n"
  example: []
  syntax:
    content: public event CurrentChangingEventHandler CurrentChanging
    return:
      type: System.ComponentModel.CurrentChangingEventHandler
    content.vb: Public Event CurrentChanging As CurrentChangingEventHandler
  implements:
  - System.ComponentModel.ICollectionView.CurrentChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PageChanged
  commentId: E:Windows.UI.Xaml.Data.PagedCollectionView.PageChanged
  id: PageChanged
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PageChanged
  nameWithType: PagedCollectionView.PageChanged
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PageChanged
  type: Event
  source:
    id: PageChanged
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 323
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRaised when a page index change completed\n"
  example: []
  syntax:
    content: public event EventHandler<EventArgs> PageChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event PageChanged As EventHandler(Of EventArgs)
  implements:
  - System.ComponentModel.IPagedCollectionView.PageChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PageChanging
  commentId: E:Windows.UI.Xaml.Data.PagedCollectionView.PageChanging
  id: PageChanging
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PageChanging
  nameWithType: PagedCollectionView.PageChanging
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PageChanging
  type: Event
  source:
    id: PageChanging
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 328
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRaised when a page index change is requested\n"
  example: []
  syntax:
    content: public event EventHandler<PageChangingEventArgs> PageChanging
    return:
      type: System.EventHandler{System.ComponentModel.PageChangingEventArgs}
    content.vb: Public Event PageChanging As EventHandler(Of PageChangingEventArgs)
  implements:
  - System.ComponentModel.IPagedCollectionView.PageChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PropertyChanged
  commentId: E:Windows.UI.Xaml.Data.PagedCollectionView.PropertyChanged
  id: PropertyChanged
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: PagedCollectionView.PropertyChanged
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PropertyChanged
  type: Event
  source:
    id: PropertyChanged
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 333
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nPropertyChanged event.\n"
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew
  id: CanAddNew
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanAddNew
  nameWithType: PagedCollectionView.CanAddNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew
  type: Property
  source:
    id: CanAddNew
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 425
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether the view supports AddNew.\n"
  example: []
  syntax:
    content: public bool CanAddNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanAddNew As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew*
  implements:
  - System.ComponentModel.IEditableCollectionView.CanAddNew
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit
  id: CanCancelEdit
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanCancelEdit
  nameWithType: PagedCollectionView.CanCancelEdit
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit
  type: Property
  source:
    id: CanCancelEdit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 441
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether the view supports the notion of &quot;pending changes&quot; \non the current edit item.  This may vary, depending on the view and the particular\nitem.  For example, a view might return true if the current edit item\nimplements IEditableObject, or if the view has special knowledge about \nthe item that it can use to support rollback of pending changes.\n"
  example: []
  syntax:
    content: public bool CanCancelEdit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanCancelEdit As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit*
  implements:
  - System.ComponentModel.IEditableCollectionView.CanCancelEdit
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage
  id: CanChangePage
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanChangePage
  nameWithType: PagedCollectionView.CanChangePage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage
  type: Property
  source:
    id: CanChangePage
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 449
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether the PageIndex value is allowed to change or not.\n"
  example: []
  syntax:
    content: public bool CanChangePage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanChangePage As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage*
  implements:
  - System.ComponentModel.IPagedCollectionView.CanChangePage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  id: CanFilter
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanFilter
  nameWithType: PagedCollectionView.CanFilter
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  type: Property
  source:
    id: CanFilter
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 457
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether we support filtering with this ICollectionView.\n"
  example: []
  syntax:
    content: public bool CanFilter { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanFilter As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanFilter*
  implements:
  - System.ComponentModel.ICollectionView.CanFilter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanGroup
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanGroup
  id: CanGroup
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanGroup
  nameWithType: PagedCollectionView.CanGroup
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanGroup
  type: Property
  source:
    id: CanGroup
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 466
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether this view supports grouping.\nWhen this returns false, the rest of the interface is ignored.\n"
  example: []
  syntax:
    content: public bool CanGroup { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanGroup As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanGroup*
  implements:
  - System.ComponentModel.ICollectionView.CanGroup
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanRemove
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanRemove
  id: CanRemove
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanRemove
  nameWithType: PagedCollectionView.CanRemove
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanRemove
  type: Property
  source:
    id: CanRemove
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 474
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether the view supports Remove and RemoveAt.\n"
  example: []
  syntax:
    content: public bool CanRemove { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanRemove As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanRemove*
  implements:
  - System.ComponentModel.IEditableCollectionView.CanRemove
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  id: CanSort
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CanSort
  nameWithType: PagedCollectionView.CanSort
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  type: Property
  source:
    id: CanSort
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 486
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether we support sorting with this ICollectionView.\n"
  example: []
  syntax:
    content: public bool CanSort { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanSort As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CanSort*
  implements:
  - System.ComponentModel.ICollectionView.CanSort
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Count
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.Count
  id: Count
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PagedCollectionView.Count
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Count
  type: Property
  source:
    id: Count
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 495
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the number of records in the view after \nfiltering, sorting, and paging.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Culture
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.Culture
  id: Culture
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: PagedCollectionView.Culture
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Culture
  type: Property
  source:
    id: Culture
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 538
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets or sets Culture to use during sorting.\n"
  example: []
  syntax:
    content: public CultureInfo Culture { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public Property Culture As CultureInfo
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Culture*
  implements:
  - System.ComponentModel.ICollectionView.Culture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem
  id: CurrentAddItem
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentAddItem
  nameWithType: PagedCollectionView.CurrentAddItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem
  type: Property
  source:
    id: CurrentAddItem
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 564
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the new item when an AddNew transaction is in progress\nOtherwise it returns null.\n"
  example: []
  syntax:
    content: public object CurrentAddItem { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property CurrentAddItem As Object
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem*
  implements:
  - System.ComponentModel.IEditableCollectionView.CurrentAddItem
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem
  id: CurrentEditItem
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentEditItem
  nameWithType: PagedCollectionView.CurrentEditItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem
  type: Property
  source:
    id: CurrentEditItem
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 587
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the affected item when an EditItem transaction is in progress\nOtherwise it returns null.\n"
  example: []
  syntax:
    content: public object CurrentEditItem { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property CurrentEditItem As Object
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem*
  implements:
  - System.ComponentModel.IEditableCollectionView.CurrentEditItem
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem
  id: CurrentItem
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentItem
  nameWithType: PagedCollectionView.CurrentItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem
  type: Property
  source:
    id: CurrentItem
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 614
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the &quot;current item&quot; for this view \n"
  example: []
  syntax:
    content: public object CurrentItem { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property CurrentItem As Object
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem*
  implements:
  - System.ComponentModel.ICollectionView.CurrentItem
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition
  id: CurrentPosition
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: PagedCollectionView.CurrentPosition
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition
  type: Property
  source:
    id: CurrentPosition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 627
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the ordinal position of the CurrentItem within the \n(optionally sorted and filtered) view.\n"
  example: []
  syntax:
    content: public int CurrentPosition { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentPosition As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition*
  implements:
  - System.ComponentModel.ICollectionView.CurrentPosition
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Filter
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.Filter
  id: Filter
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: PagedCollectionView.Filter
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Filter
  type: Property
  source:
    id: Filter
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 646
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets or sets the Filter, which is a callback set by the consumer of the ICollectionView\nand used by the implementation of the ICollectionView to determine if an\nitem is suitable for inclusion in the view.\n"
  example: []
  syntax:
    content: public Predicate<object> Filter { get; set; }
    parameters: []
    return:
      type: System.Predicate{System.Object}
    content.vb: Public Property Filter As Predicate(Of Object)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Filter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nSimpler implementations do not support filtering and will throw a NotSupportedException.\nUse <xref href=\"Windows.UI.Xaml.Data.PagedCollectionView.CanFilter\" data-throw-if-not-resolved=\"false\"></xref> property to test if filtering is supported before\nassigning a non-null value.\n"
  implements:
  - System.ComponentModel.ICollectionView.Filter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions
  id: GroupDescriptions
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: GroupDescriptions
  nameWithType: PagedCollectionView.GroupDescriptions
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions
  type: Property
  source:
    id: GroupDescriptions
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 677
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the description of grouping, indexed by level.\n"
  example: []
  syntax:
    content: public ObservableCollection<GroupDescription> GroupDescriptions { get; }
    parameters: []
    return:
      type: ObservableCollection{System.ComponentModel.GroupDescription}
    content.vb: Public ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions*
  implements:
  - System.ComponentModel.ICollectionView.GroupDescriptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Groups
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.Groups
  id: Groups
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: PagedCollectionView.Groups
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Groups
  type: Property
  source:
    id: Groups
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 689
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the top-level groups, constructed according to the descriptions\ngiven in GroupDescriptions.\n"
  example: []
  syntax:
    content: public ReadOnlyObservableCollection<object> Groups { get; }
    parameters: []
    return:
      type: ReadOnlyObservableCollection{System.Object}
    content.vb: Public ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Groups*
  implements:
  - System.ComponentModel.ICollectionView.Groups
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew
  id: IsAddingNew
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IsAddingNew
  nameWithType: PagedCollectionView.IsAddingNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew
  type: Property
  source:
    id: IsAddingNew
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 706
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether an &quot;AddNew&quot; transaction is in progress.\n"
  example: []
  syntax:
    content: public bool IsAddingNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAddingNew As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew*
  implements:
  - System.ComponentModel.IEditableCollectionView.IsAddingNew
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast
  id: IsCurrentAfterLast
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IsCurrentAfterLast
  nameWithType: PagedCollectionView.IsCurrentAfterLast
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast
  type: Property
  source:
    id: IsCurrentAfterLast
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 715
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether currency is beyond the end (End-Of-File). \n"
  example: []
  syntax:
    content: public bool IsCurrentAfterLast { get; }
    parameters: []
    return:
      type: System.Boolean
      description: Whether IsCurrentAfterLast
    content.vb: Public ReadOnly Property IsCurrentAfterLast As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast*
  implements:
  - System.ComponentModel.ICollectionView.IsCurrentAfterLast
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst
  id: IsCurrentBeforeFirst
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IsCurrentBeforeFirst
  nameWithType: PagedCollectionView.IsCurrentBeforeFirst
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst
  type: Property
  source:
    id: IsCurrentBeforeFirst
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 728
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether currency is before the beginning (Beginning-Of-File). \n"
  example: []
  syntax:
    content: public bool IsCurrentBeforeFirst { get; }
    parameters: []
    return:
      type: System.Boolean
      description: Whether IsCurrentBeforeFirst
    content.vb: Public ReadOnly Property IsCurrentBeforeFirst As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst*
  implements:
  - System.ComponentModel.ICollectionView.IsCurrentBeforeFirst
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem
  id: IsEditingItem
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IsEditingItem
  nameWithType: PagedCollectionView.IsEditingItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem
  type: Property
  source:
    id: IsEditingItem
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 740
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether an EditItem transaction is in progress.\n"
  example: []
  syntax:
    content: public bool IsEditingItem { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEditingItem As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem*
  implements:
  - System.ComponentModel.IEditableCollectionView.IsEditingItem
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty
  id: IsEmpty
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: PagedCollectionView.IsEmpty
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 748
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether the resulting (filtered) view is empty.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty*
  implements:
  - System.ComponentModel.ICollectionView.IsEmpty
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging
  id: IsPageChanging
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IsPageChanging
  nameWithType: PagedCollectionView.IsPageChanging
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging
  type: Property
  source:
    id: IsPageChanging
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 760
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether a page index change is in process or not.\n"
  example: []
  syntax:
    content: public bool IsPageChanging { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPageChanging As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging*
  implements:
  - System.ComponentModel.IPagedCollectionView.IsPageChanging
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.ItemCount
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.ItemCount
  id: ItemCount
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: ItemCount
  nameWithType: PagedCollectionView.ItemCount
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.ItemCount
  type: Property
  source:
    id: ItemCount
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 781
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the minimum number of items known to be in the source collection\nthat verify the current filter if any\n"
  example: []
  syntax:
    content: public int ItemCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ItemCount As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.ItemCount*
  implements:
  - System.ComponentModel.IPagedCollectionView.ItemCount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh
  id: NeedsRefresh
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: NeedsRefresh
  nameWithType: PagedCollectionView.NeedsRefresh
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh
  type: Property
  source:
    id: NeedsRefresh
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 792
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets a value indicating whether this view needs to be refreshed.\n"
  example: []
  syntax:
    content: public bool NeedsRefresh { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NeedsRefresh As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition
  id: NewItemPlaceholderPosition
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: NewItemPlaceholderPosition
  nameWithType: PagedCollectionView.NewItemPlaceholderPosition
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition
  type: Property
  source:
    id: NewItemPlaceholderPosition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 801
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets or sets whether to include a placeholder for a new item, and if so,\nwhere to put it. Only the value NewItemPlaceholderPosition.None is supported.\n"
  example: []
  syntax:
    content: public NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }
    parameters: []
    return:
      type: System.ComponentModel.NewItemPlaceholderPosition
    content.vb: Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition
  overload: Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition*
  implements:
  - System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PageIndex
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.PageIndex
  id: PageIndex
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PageIndex
  nameWithType: PagedCollectionView.PageIndex
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PageIndex
  type: Property
  source:
    id: PageIndex
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 825
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the current page we are on. (zero based)\n"
  example: []
  syntax:
    content: public int PageIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PageIndex As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.PageIndex*
  implements:
  - System.ComponentModel.IPagedCollectionView.PageIndex
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PageSize
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.PageSize
  id: PageSize
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: PagedCollectionView.PageSize
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PageSize
  type: Property
  source:
    id: PageSize
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 839
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets or sets the number of items to display on a page. If the\nPageSize = 0, then we are not paging, and will display all items\nin the collection. Otherwise, we will have separate pages for \nthe items to display.\n"
  example: []
  syntax:
    content: public int PageSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PageSize As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.PageSize*
  implements:
  - System.ComponentModel.IPagedCollectionView.PageSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions
  id: SortDescriptions
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: SortDescriptions
  nameWithType: PagedCollectionView.SortDescriptions
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions
  type: Property
  source:
    id: SortDescriptions
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 977
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the Sort criteria to sort items in collection.\n"
  remarks: "\n<p>\nClear a sort criteria by assigning SortDescription.Empty to this property.\nOne or more sort criteria in form of <xref href=\"System.ComponentModel.SortDescription\" data-throw-if-not-resolved=\"false\"></xref>\ncan be used, each specifying a property and direction to sort by.\n</p>\n"
  example: []
  syntax:
    content: public SortDescriptionCollection SortDescriptions { get; }
    parameters: []
    return:
      type: System.ComponentModel.SortDescriptionCollection
    content.vb: Public ReadOnly Property SortDescriptions As SortDescriptionCollection
  overload: Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nSimpler implementations do not support sorting and will throw a NotSupportedException.\nUse <xref href=\"Windows.UI.Xaml.Data.PagedCollectionView.CanSort\" data-throw-if-not-resolved=\"false\"></xref> property to test if sorting is supported before adding\nto SortDescriptions.\n"
  implements:
  - System.ComponentModel.ICollectionView.SortDescriptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection
  id: SourceCollection
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: SourceCollection
  nameWithType: PagedCollectionView.SourceCollection
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection
  type: Property
  source:
    id: SourceCollection
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 993
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the source of the IEnumerable collection we are using for our view.\n"
  example: []
  syntax:
    content: public IEnumerable SourceCollection { get; }
    parameters: []
    return:
      type: System.Collections.IEnumerable
    content.vb: Public ReadOnly Property SourceCollection As IEnumerable
  overload: Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection*
  implements:
  - System.ComponentModel.ICollectionView.SourceCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount
  id: TotalItemCount
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: TotalItemCount
  nameWithType: PagedCollectionView.TotalItemCount
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount
  type: Property
  source:
    id: TotalItemCount
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1001
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nGets the total number of items in the view before paging is applied.\n"
  example: []
  syntax:
    content: public int TotalItemCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalItemCount As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount*
  implements:
  - System.ComponentModel.IPagedCollectionView.TotalItemCount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Item(System.Int32)
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.Item(System.Int32)
  id: Item(System.Int32)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: PagedCollectionView.Item[Int32]
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1203
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nReturn the item at the specified index\n"
  example: []
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the item we want to retrieve
    return:
      type: System.Object
      description: The item at the specified index
    content.vb: Public ReadOnly Property Item(index As Integer) As Object
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Item*
  nameWithType.vb: PagedCollectionView.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Windows.UI.Xaml.Data.PagedCollectionView.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Windows.UI.Xaml.Data.PagedCollectionView.AddNew
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.AddNew
  id: AddNew
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: AddNew()
  nameWithType: PagedCollectionView.AddNew()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.AddNew()
  type: Method
  source:
    id: AddNew
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1224
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nAdd a new item to the underlying collection.  Returns the new item.\nAfter calling AddNew and changing the new item as desired, either\nCommitNew or CancelNew&quot; should be called to complete the transaction.\n"
  example: []
  syntax:
    content: public object AddNew()
    return:
      type: System.Object
      description: The new item we are adding
    content.vb: Public Function AddNew As Object
  overload: Windows.UI.Xaml.Data.PagedCollectionView.AddNew*
  implements:
  - System.ComponentModel.IEditableCollectionView.AddNew
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit
  id: CancelEdit
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CancelEdit()
  nameWithType: PagedCollectionView.CancelEdit()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit()
  type: Method
  source:
    id: CancelEdit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1356
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nComplete the transaction started by <xref href=\"Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\nThe pending changes (if any) to the item are discarded.\n"
  example: []
  syntax:
    content: public void CancelEdit()
    content.vb: Public Sub CancelEdit
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit*
  implements:
  - System.ComponentModel.IEditableCollectionView.CancelEdit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CancelNew
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.CancelNew
  id: CancelNew
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CancelNew()
  nameWithType: PagedCollectionView.CancelNew()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CancelNew()
  type: Method
  source:
    id: CancelNew
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1392
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nComplete the transaction started by AddNew. The new\nitem is removed from the collection.\n"
  example: []
  syntax:
    content: public void CancelNew()
    content.vb: Public Sub CancelNew
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CancelNew*
  implements:
  - System.ComponentModel.IEditableCollectionView.CancelNew
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit
  id: CommitEdit
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CommitEdit()
  nameWithType: PagedCollectionView.CommitEdit()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit()
  type: Method
  source:
    id: CommitEdit
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1504
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nComplete the transaction started by <xref href=\"Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\nThe pending changes (if any) to the item are committed.\n"
  example: []
  syntax:
    content: public void CommitEdit()
    content.vb: Public Sub CommitEdit
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit*
  implements:
  - System.ComponentModel.IEditableCollectionView.CommitEdit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CommitNew
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.CommitNew
  id: CommitNew
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: CommitNew()
  nameWithType: PagedCollectionView.CommitNew()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CommitNew()
  type: Method
  source:
    id: CommitNew
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1688
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nComplete the transaction started by AddNew. We follow the WPF\nconvention in that the view&apos;s sort, filter, and paging\nspecifications (if any) are applied to the new item.\n"
  example: []
  syntax:
    content: public void CommitNew()
    content.vb: Public Sub CommitNew
  overload: Windows.UI.Xaml.Data.PagedCollectionView.CommitNew*
  implements:
  - System.ComponentModel.IEditableCollectionView.CommitNew
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Contains(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.Contains(System.Object)
  id: Contains(System.Object)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Contains(Object)
  nameWithType: PagedCollectionView.Contains(Object)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Contains(System.Object)
  type: Method
  source:
    id: Contains
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1894
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nReturn true if the item belongs to this view.  No assumptions are\nmade about the item. This method will behave similarly to IList.Contains().\nIf the caller knows that the item belongs to the\nunderlying collection, it is more efficient to call PassesFilter.\n"
  example: []
  syntax:
    content: public bool Contains(object item)
    parameters:
    - id: item
      type: System.Object
      description: The item we are checking to see whether it is within the collection
    return:
      type: System.Boolean
      description: Boolean value of whether or not the collection contains the item
    content.vb: Public Function Contains(item As Object) As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Contains*
  implements:
  - System.ComponentModel.ICollectionView.Contains(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh
  id: DeferRefresh
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: DeferRefresh()
  nameWithType: PagedCollectionView.DeferRefresh()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh()
  type: Method
  source:
    id: DeferRefresh
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1906
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nEnter a Defer Cycle.\nDefer cycles are used to coalesce changes to the ICollectionView.\n"
  example: []
  syntax:
    content: public IDisposable DeferRefresh()
    return:
      type: System.IDisposable
      description: IDisposable used to notify that we no longer need to defer, when we dispose
    content.vb: Public Function DeferRefresh As IDisposable
  overload: Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh*
  implements:
  - System.ComponentModel.ICollectionView.DeferRefresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)
  id: EditItem(System.Object)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: EditItem(Object)
  nameWithType: PagedCollectionView.EditItem(Object)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)
  type: Method
  source:
    id: EditItem
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1924
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nBegins an editing transaction on the given item.  The transaction is\ncompleted by calling either CommitEdit or CancelEdit.  Any changes made \nto the item during the transaction are considered &quot;pending&quot;, provided \nthat the view supports the notion of &quot;pending changes&quot; for the given item.\n"
  example: []
  syntax:
    content: public void EditItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: Item we want to edit
    content.vb: Public Sub EditItem(item As Object)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.EditItem*
  implements:
  - System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator
  id: GetEnumerator
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: PagedCollectionView.GetEnumerator()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1958
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nImplementation of IEnumerable.GetEnumerator().\nThis provides a way to enumerate the members of the collection\nwithout changing the currency.\n"
  example: []
  syntax:
    content: public IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: IEnumerator for the collection
    content.vb: Public Function GetEnumerator As IEnumerator
  overload: Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: PagedCollectionView.IEnumerable.GetEnumerator()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    id: System.Collections.IEnumerable.GetEnumerator
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 1999
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nInterface Implementation for GetEnumerator()\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: IEnumerator that we get from our internal collection
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Windows.UI.Xaml.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PagedCollectionView.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt(System.Int32)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt(System.Int32)
  id: GetItemAt(System.Int32)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: GetItemAt(Int32)
  nameWithType: PagedCollectionView.GetItemAt(Int32)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt(System.Int32)
  type: Method
  source:
    id: GetItemAt
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2013
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRetrieve item at the given zero-based index in this PagedCollectionView, after the source collection\nis filtered, sorted, and paged.\n"
  example: []
  syntax:
    content: public object GetItemAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of the item we want to retrieve
    return:
      type: System.Object
      description: Item at specified index
    content.vb: Public Function GetItemAt(index As Integer) As Object
  overload: Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThrown if index is out of range\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IndexOf(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: IndexOf(Object)
  nameWithType: PagedCollectionView.IndexOf(Object)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IndexOf(System.Object)
  type: Method
  source:
    id: IndexOf
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2045
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nReturn the index where the given item appears, or -1 if doesn&apos;t appear.\n"
  example: []
  syntax:
    content: public int IndexOf(object item)
    parameters:
    - id: item
      type: System.Object
      description: Item we are searching for
    return:
      type: System.Int32
      description: Index of specified item
    content.vb: Public Function IndexOf(item As Object) As Integer
  overload: Windows.UI.Xaml.Data.PagedCollectionView.IndexOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo(System.Object)
  id: MoveCurrentTo(System.Object)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentTo(Object)
  nameWithType: PagedCollectionView.MoveCurrentTo(Object)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo(System.Object)
  type: Method
  source:
    id: MoveCurrentTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2085
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMove to the given item. \n"
  example: []
  syntax:
    content: public bool MoveCurrentTo(object item)
    parameters:
    - id: item
      type: System.Object
      description: Item we want to move the currency to
    return:
      type: System.Boolean
      description: Whether the operation was successful
    content.vb: Public Function MoveCurrentTo(item As Object) As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo*
  implements:
  - System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst
  id: MoveCurrentToFirst
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToFirst()
  nameWithType: PagedCollectionView.MoveCurrentToFirst()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst()
  type: Method
  source:
    id: MoveCurrentToFirst
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2109
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMove to the first item. \n"
  example: []
  syntax:
    content: public bool MoveCurrentToFirst()
    return:
      type: System.Boolean
      description: Whether the operation was successful
    content.vb: Public Function MoveCurrentToFirst As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst*
  implements:
  - System.ComponentModel.ICollectionView.MoveCurrentToFirst
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast
  id: MoveCurrentToLast
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToLast()
  nameWithType: PagedCollectionView.MoveCurrentToLast()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast()
  type: Method
  source:
    id: MoveCurrentToLast
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2120
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMove to the last item. \n"
  example: []
  syntax:
    content: public bool MoveCurrentToLast()
    return:
      type: System.Boolean
      description: Whether the operation was successful
    content.vb: Public Function MoveCurrentToLast As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast*
  implements:
  - System.ComponentModel.ICollectionView.MoveCurrentToLast
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext
  id: MoveCurrentToNext
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToNext()
  nameWithType: PagedCollectionView.MoveCurrentToNext()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext()
  type: Method
  source:
    id: MoveCurrentToNext
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2133
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMove to the next item. \n"
  example: []
  syntax:
    content: public bool MoveCurrentToNext()
    return:
      type: System.Boolean
      description: Whether the operation was successful
    content.vb: Public Function MoveCurrentToNext As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext*
  implements:
  - System.ComponentModel.ICollectionView.MoveCurrentToNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)
  id: MoveCurrentToPosition(System.Int32)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToPosition(Int32)
  nameWithType: PagedCollectionView.MoveCurrentToPosition(Int32)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition(System.Int32)
  type: Method
  source:
    id: MoveCurrentToPosition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2154
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMove CurrentItem to this index\n"
  example: []
  syntax:
    content: public bool MoveCurrentToPosition(int position)
    parameters:
    - id: position
      type: System.Int32
      description: Position we want to move the currency to
    return:
      type: System.Boolean
      description: True if the resulting CurrentItem is an item within the view; otherwise False
    content.vb: Public Function MoveCurrentToPosition(position As Integer) As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition*
  implements:
  - System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious
  id: MoveCurrentToPrevious
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToPrevious()
  nameWithType: PagedCollectionView.MoveCurrentToPrevious()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious()
  type: Method
  source:
    id: MoveCurrentToPrevious
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2197
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMove to the previous item. \n"
  example: []
  syntax:
    content: public bool MoveCurrentToPrevious()
    return:
      type: System.Boolean
      description: Whether the operation was successful
    content.vb: Public Function MoveCurrentToPrevious As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious*
  implements:
  - System.ComponentModel.ICollectionView.MoveCurrentToPrevious
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage
  id: MoveToFirstPage
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToFirstPage()
  nameWithType: PagedCollectionView.MoveToFirstPage()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage()
  type: Method
  source:
    id: MoveToFirstPage
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2217
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMoves to the first page.\n"
  example: []
  syntax:
    content: public bool MoveToFirstPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Public Function MoveToFirstPage As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage*
  implements:
  - System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage
  id: MoveToLastPage
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToLastPage()
  nameWithType: PagedCollectionView.MoveToLastPage()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage()
  type: Method
  source:
    id: MoveToLastPage
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2227
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMoves to the last page.\nThe move is only attempted when TotalItemCount is known.\n"
  example: []
  syntax:
    content: public bool MoveToLastPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Public Function MoveToLastPage As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage*
  implements:
  - System.ComponentModel.IPagedCollectionView.MoveToLastPage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage
  id: MoveToNextPage
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToNextPage()
  nameWithType: PagedCollectionView.MoveToNextPage()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage()
  type: Method
  source:
    id: MoveToNextPage
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2243
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMoves to the page after the current page we are on.\n"
  example: []
  syntax:
    content: public bool MoveToNextPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Public Function MoveToNextPage As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage*
  implements:
  - System.ComponentModel.IPagedCollectionView.MoveToNextPage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage(System.Int32)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage(System.Int32)
  id: MoveToPage(System.Int32)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToPage(Int32)
  nameWithType: PagedCollectionView.MoveToPage(Int32)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage(System.Int32)
  type: Method
  source:
    id: MoveToPage
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2253
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRequests a page move to page <code data-dev-comment-type=\"paramref\" class=\"paramref\">pageIndex</code>.\n"
  example: []
  syntax:
    content: public bool MoveToPage(int pageIndex)
    parameters:
    - id: pageIndex
      type: System.Int32
      description: Index of the target page
    return:
      type: System.Boolean
      description: Whether or not the move was successfully initiated.
    content.vb: Public Function MoveToPage(pageIndex As Integer) As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage*
  implements:
  - System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage
  id: MoveToPreviousPage
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToPreviousPage()
  nameWithType: PagedCollectionView.MoveToPreviousPage()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage()
  type: Method
  source:
    id: MoveToPreviousPage
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2350
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nMoves to the page before the current page we are on.\n"
  example: []
  syntax:
    content: public bool MoveToPreviousPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Public Function MoveToPreviousPage As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage*
  implements:
  - System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter(System.Object)
  id: PassesFilter(System.Object)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: PassesFilter(Object)
  nameWithType: PagedCollectionView.PassesFilter(Object)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter(System.Object)
  type: Method
  source:
    id: PassesFilter
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2364
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nReturn true if the item belongs to this view.  The item is assumed to belong to the\nunderlying DataCollection;  this method merely takes filters into account.\nIt is commonly used during collection-changed notifications to determine if the added/removed\nitem requires processing.\nReturns true if no filter is set on collection view.\n"
  example: []
  syntax:
    content: public bool PassesFilter(object item)
    parameters:
    - id: item
      type: System.Object
      description: The item to compare against the Filter
    return:
      type: System.Boolean
      description: Whether the item passes the filter
    content.vb: Public Function PassesFilter(item As Object) As Boolean
  overload: Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Refresh
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.Refresh
  id: Refresh
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: PagedCollectionView.Refresh()
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Refresh()
  type: Method
  source:
    id: Refresh
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2377
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRe-create the view, using any SortDescriptions and/or Filters.\n"
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Refresh*
  implements:
  - System.ComponentModel.ICollectionView.Refresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Remove(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: PagedCollectionView.Remove(Object)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Remove(System.Object)
  type: Method
  source:
    id: Remove
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2394
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRemove the given item from the underlying collection. It\nneeds to be in the current filtered, sorted, and paged view\nto call this.\n"
  example: []
  syntax:
    content: public void Remove(object item)
    parameters:
    - id: item
      type: System.Object
      description: Item we want to remove
    content.vb: Public Sub Remove(item As Object)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.Remove*
  implements:
  - System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt(System.Int32)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Windows.UI.Xaml.Data.PagedCollectionView
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: PagedCollectionView.RemoveAt(Int32)
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt(System.Int32)
  type: Method
  source:
    id: RemoveAt
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\PagedCollectionView\PagedCollectionView.cs
    startLine: 2409
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Data
  summary: "\nRemove the item at the given index from the underlying collection.\nThe index is interpreted with respect to the view (filtered, sorted,\nand paged list).\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of the item we want to remove
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt*
  implements:
  - System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Windows.UI.Xaml.Data
  commentId: N:Windows.UI.Xaml.Data
  name: Windows.UI.Xaml.Data
  nameWithType: Windows.UI.Xaml.Data
  fullName: Windows.UI.Xaml.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ICollectionView
  commentId: T:System.ComponentModel.ICollectionView
  parent: System.ComponentModel
  name: ICollectionView
  nameWithType: ICollectionView
  fullName: System.ComponentModel.ICollectionView
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: INotifyCollectionChanged
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: INotifyCollectionChanged
- uid: System.ComponentModel.IPagedCollectionView
  commentId: T:System.ComponentModel.IPagedCollectionView
  parent: System.ComponentModel
  name: IPagedCollectionView
  nameWithType: IPagedCollectionView
  fullName: System.ComponentModel.IPagedCollectionView
- uid: System.ComponentModel.IEditableCollectionView
  commentId: T:System.ComponentModel.IEditableCollectionView
  parent: System.ComponentModel
  name: IEditableCollectionView
  nameWithType: IEditableCollectionView
  fullName: System.ComponentModel.IEditableCollectionView
- uid: INotifyPropertyChanged
  commentId: '!:INotifyPropertyChanged'
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: Windows.UI.Xaml.Data.PagedCollectionView.#ctor*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.#ctor
  name: PagedCollectionView
  nameWithType: PagedCollectionView.PagedCollectionView
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PagedCollectionView
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NotifyCollectionChangedEventHandler
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: NotifyCollectionChangedEventHandler
- uid: System.ComponentModel.ICollectionView.CurrentChanged
  commentId: E:System.ComponentModel.ICollectionView.CurrentChanged
  parent: System.ComponentModel.ICollectionView
  name: CurrentChanged
  nameWithType: ICollectionView.CurrentChanged
  fullName: System.ComponentModel.ICollectionView.CurrentChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.ICollectionView.CurrentChanging
  commentId: E:System.ComponentModel.ICollectionView.CurrentChanging
  parent: System.ComponentModel.ICollectionView
  name: CurrentChanging
  nameWithType: ICollectionView.CurrentChanging
  fullName: System.ComponentModel.ICollectionView.CurrentChanging
- uid: System.ComponentModel.CurrentChangingEventHandler
  commentId: T:System.ComponentModel.CurrentChangingEventHandler
  parent: System.ComponentModel
  name: CurrentChangingEventHandler
  nameWithType: CurrentChangingEventHandler
  fullName: System.ComponentModel.CurrentChangingEventHandler
- uid: System.ComponentModel.IPagedCollectionView.PageChanged
  commentId: E:System.ComponentModel.IPagedCollectionView.PageChanged
  parent: System.ComponentModel.IPagedCollectionView
  name: PageChanged
  nameWithType: IPagedCollectionView.PageChanged
  fullName: System.ComponentModel.IPagedCollectionView.PageChanged
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.IPagedCollectionView.PageChanging
  commentId: E:System.ComponentModel.IPagedCollectionView.PageChanging
  parent: System.ComponentModel.IPagedCollectionView
  name: PageChanging
  nameWithType: IPagedCollectionView.PageChanging
  fullName: System.ComponentModel.IPagedCollectionView.PageChanging
- uid: System.EventHandler{System.ComponentModel.PageChangingEventArgs}
  commentId: T:System.EventHandler{System.ComponentModel.PageChangingEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PageChangingEventArgs>
  nameWithType: EventHandler<PageChangingEventArgs>
  fullName: System.EventHandler<System.ComponentModel.PageChangingEventArgs>
  nameWithType.vb: EventHandler(Of PageChangingEventArgs)
  fullName.vb: System.EventHandler(Of System.ComponentModel.PageChangingEventArgs)
  name.vb: EventHandler(Of PageChangingEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.PageChangingEventArgs
    name: PageChangingEventArgs
    nameWithType: PageChangingEventArgs
    fullName: System.ComponentModel.PageChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.PageChangingEventArgs
    name: PageChangingEventArgs
    nameWithType: PageChangingEventArgs
    fullName: System.ComponentModel.PageChangingEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: PropertyChangedEventHandler
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: PropertyChangedEventHandler
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew
  name: CanAddNew
  nameWithType: PagedCollectionView.CanAddNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanAddNew
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  commentId: P:System.ComponentModel.IEditableCollectionView.CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit
  name: CanCancelEdit
  nameWithType: PagedCollectionView.CanCancelEdit
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  commentId: P:System.ComponentModel.IEditableCollectionView.CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage
  name: CanChangePage
  nameWithType: PagedCollectionView.CanChangePage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanChangePage
- uid: System.ComponentModel.IPagedCollectionView.CanChangePage
  commentId: P:System.ComponentModel.IPagedCollectionView.CanChangePage
  parent: System.ComponentModel.IPagedCollectionView
  name: CanChangePage
  nameWithType: IPagedCollectionView.CanChangePage
  fullName: System.ComponentModel.IPagedCollectionView.CanChangePage
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanFilter*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  name: CanFilter
  nameWithType: PagedCollectionView.CanFilter
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
- uid: System.ComponentModel.ICollectionView.CanFilter
  commentId: P:System.ComponentModel.ICollectionView.CanFilter
  parent: System.ComponentModel.ICollectionView
  name: CanFilter
  nameWithType: ICollectionView.CanFilter
  fullName: System.ComponentModel.ICollectionView.CanFilter
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanGroup*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanGroup
  name: CanGroup
  nameWithType: PagedCollectionView.CanGroup
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanGroup
- uid: System.ComponentModel.ICollectionView.CanGroup
  commentId: P:System.ComponentModel.ICollectionView.CanGroup
  parent: System.ComponentModel.ICollectionView
  name: CanGroup
  nameWithType: ICollectionView.CanGroup
  fullName: System.ComponentModel.ICollectionView.CanGroup
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanRemove*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanRemove
  name: CanRemove
  nameWithType: PagedCollectionView.CanRemove
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  commentId: P:System.ComponentModel.IEditableCollectionView.CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanSort*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  name: CanSort
  nameWithType: PagedCollectionView.CanSort
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CanSort
- uid: System.ComponentModel.ICollectionView.CanSort
  commentId: P:System.ComponentModel.ICollectionView.CanSort
  parent: System.ComponentModel.ICollectionView
  name: CanSort
  nameWithType: ICollectionView.CanSort
  fullName: System.ComponentModel.ICollectionView.CanSort
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Count*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Count
  name: Count
  nameWithType: PagedCollectionView.Count
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Culture*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Culture
  name: Culture
  nameWithType: PagedCollectionView.Culture
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Culture
- uid: System.ComponentModel.ICollectionView.Culture
  commentId: P:System.ComponentModel.ICollectionView.Culture
  parent: System.ComponentModel.ICollectionView
  name: Culture
  nameWithType: ICollectionView.Culture
  fullName: System.ComponentModel.ICollectionView.Culture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem
  name: CurrentAddItem
  nameWithType: PagedCollectionView.CurrentAddItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  commentId: P:System.ComponentModel.IEditableCollectionView.CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem
  name: CurrentEditItem
  nameWithType: PagedCollectionView.CurrentEditItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  commentId: P:System.ComponentModel.IEditableCollectionView.CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem
  name: CurrentItem
  nameWithType: PagedCollectionView.CurrentItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentItem
- uid: System.ComponentModel.ICollectionView.CurrentItem
  commentId: P:System.ComponentModel.ICollectionView.CurrentItem
  parent: System.ComponentModel.ICollectionView
  name: CurrentItem
  nameWithType: ICollectionView.CurrentItem
  fullName: System.ComponentModel.ICollectionView.CurrentItem
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition
  name: CurrentPosition
  nameWithType: PagedCollectionView.CurrentPosition
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CurrentPosition
- uid: System.ComponentModel.ICollectionView.CurrentPosition
  commentId: P:System.ComponentModel.ICollectionView.CurrentPosition
  parent: System.ComponentModel.ICollectionView
  name: CurrentPosition
  nameWithType: ICollectionView.CurrentPosition
  fullName: System.ComponentModel.ICollectionView.CurrentPosition
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanFilter
  isExternal: true
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Filter*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Filter
  name: Filter
  nameWithType: PagedCollectionView.Filter
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Filter
- uid: System.ComponentModel.ICollectionView.Filter
  commentId: P:System.ComponentModel.ICollectionView.Filter
  parent: System.ComponentModel.ICollectionView
  name: Filter
  nameWithType: ICollectionView.Filter
  fullName: System.ComponentModel.ICollectionView.Filter
- uid: System.Predicate{System.Object}
  commentId: T:System.Predicate{System.Object}
  parent: System
  definition: System.Predicate`1
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: System.Predicate<System.Object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: System.Predicate(Of System.Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions
  name: GroupDescriptions
  nameWithType: PagedCollectionView.GroupDescriptions
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.GroupDescriptions
- uid: System.ComponentModel.ICollectionView.GroupDescriptions
  commentId: P:System.ComponentModel.ICollectionView.GroupDescriptions
  parent: System.ComponentModel.ICollectionView
  name: GroupDescriptions
  nameWithType: ICollectionView.GroupDescriptions
  fullName: System.ComponentModel.ICollectionView.GroupDescriptions
- uid: ObservableCollection{System.ComponentModel.GroupDescription}
  commentId: '!:ObservableCollection{System.ComponentModel.GroupDescription}'
  definition: ObservableCollection`1
  name: ObservableCollection<GroupDescription>
  nameWithType: ObservableCollection<GroupDescription>
  fullName: ObservableCollection<System.ComponentModel.GroupDescription>
  nameWithType.vb: ObservableCollection(Of GroupDescription)
  fullName.vb: ObservableCollection(Of System.ComponentModel.GroupDescription)
  name.vb: ObservableCollection(Of GroupDescription)
  spec.csharp:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.GroupDescription
    name: GroupDescription
    nameWithType: GroupDescription
    fullName: System.ComponentModel.GroupDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.GroupDescription
    name: GroupDescription
    nameWithType: GroupDescription
    fullName: System.ComponentModel.GroupDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: ObservableCollection`1
  isExternal: true
  name: ObservableCollection<>
  nameWithType: ObservableCollection<>
  fullName: ObservableCollection<>
  nameWithType.vb: ObservableCollection(Of )
  fullName.vb: ObservableCollection(Of )
  name.vb: ObservableCollection(Of )
  spec.csharp:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Groups*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Groups
  name: Groups
  nameWithType: PagedCollectionView.Groups
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Groups
- uid: System.ComponentModel.ICollectionView.Groups
  commentId: P:System.ComponentModel.ICollectionView.Groups
  parent: System.ComponentModel.ICollectionView
  name: Groups
  nameWithType: ICollectionView.Groups
  fullName: System.ComponentModel.ICollectionView.Groups
- uid: ReadOnlyObservableCollection{System.Object}
  commentId: '!:ReadOnlyObservableCollection{System.Object}'
  definition: ReadOnlyObservableCollection`1
  name: ReadOnlyObservableCollection<Object>
  nameWithType: ReadOnlyObservableCollection<Object>
  fullName: ReadOnlyObservableCollection<System.Object>
  nameWithType.vb: ReadOnlyObservableCollection(Of Object)
  fullName.vb: ReadOnlyObservableCollection(Of System.Object)
  name.vb: ReadOnlyObservableCollection(Of Object)
  spec.csharp:
  - uid: ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: ReadOnlyObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: ReadOnlyObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ReadOnlyObservableCollection`1
  isExternal: true
  name: ReadOnlyObservableCollection<>
  nameWithType: ReadOnlyObservableCollection<>
  fullName: ReadOnlyObservableCollection<>
  nameWithType.vb: ReadOnlyObservableCollection(Of )
  fullName.vb: ReadOnlyObservableCollection(Of )
  name.vb: ReadOnlyObservableCollection(Of )
  spec.csharp:
  - uid: ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: ReadOnlyObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: ReadOnlyObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew
  name: IsAddingNew
  nameWithType: PagedCollectionView.IsAddingNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  commentId: P:System.ComponentModel.IEditableCollectionView.IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast
  name: IsCurrentAfterLast
  nameWithType: PagedCollectionView.IsCurrentAfterLast
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentAfterLast
- uid: System.ComponentModel.ICollectionView.IsCurrentAfterLast
  commentId: P:System.ComponentModel.ICollectionView.IsCurrentAfterLast
  parent: System.ComponentModel.ICollectionView
  name: IsCurrentAfterLast
  nameWithType: ICollectionView.IsCurrentAfterLast
  fullName: System.ComponentModel.ICollectionView.IsCurrentAfterLast
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst
  name: IsCurrentBeforeFirst
  nameWithType: PagedCollectionView.IsCurrentBeforeFirst
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsCurrentBeforeFirst
- uid: System.ComponentModel.ICollectionView.IsCurrentBeforeFirst
  commentId: P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst
  parent: System.ComponentModel.ICollectionView
  name: IsCurrentBeforeFirst
  nameWithType: ICollectionView.IsCurrentBeforeFirst
  fullName: System.ComponentModel.ICollectionView.IsCurrentBeforeFirst
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem
  name: IsEditingItem
  nameWithType: PagedCollectionView.IsEditingItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  commentId: P:System.ComponentModel.IEditableCollectionView.IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty
  name: IsEmpty
  nameWithType: PagedCollectionView.IsEmpty
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsEmpty
- uid: System.ComponentModel.ICollectionView.IsEmpty
  commentId: P:System.ComponentModel.ICollectionView.IsEmpty
  parent: System.ComponentModel.ICollectionView
  name: IsEmpty
  nameWithType: ICollectionView.IsEmpty
  fullName: System.ComponentModel.ICollectionView.IsEmpty
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging
  name: IsPageChanging
  nameWithType: PagedCollectionView.IsPageChanging
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IsPageChanging
- uid: System.ComponentModel.IPagedCollectionView.IsPageChanging
  commentId: P:System.ComponentModel.IPagedCollectionView.IsPageChanging
  parent: System.ComponentModel.IPagedCollectionView
  name: IsPageChanging
  nameWithType: IPagedCollectionView.IsPageChanging
  fullName: System.ComponentModel.IPagedCollectionView.IsPageChanging
- uid: Windows.UI.Xaml.Data.PagedCollectionView.ItemCount*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.ItemCount
  name: ItemCount
  nameWithType: PagedCollectionView.ItemCount
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.ItemCount
- uid: System.ComponentModel.IPagedCollectionView.ItemCount
  commentId: P:System.ComponentModel.IPagedCollectionView.ItemCount
  parent: System.ComponentModel.IPagedCollectionView
  name: ItemCount
  nameWithType: IPagedCollectionView.ItemCount
  fullName: System.ComponentModel.IPagedCollectionView.ItemCount
- uid: Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh
  name: NeedsRefresh
  nameWithType: PagedCollectionView.NeedsRefresh
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.NeedsRefresh
- uid: Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition
  name: NewItemPlaceholderPosition
  nameWithType: PagedCollectionView.NewItemPlaceholderPosition
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  commentId: P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.NewItemPlaceholderPosition
  commentId: T:System.ComponentModel.NewItemPlaceholderPosition
  parent: System.ComponentModel
  name: NewItemPlaceholderPosition
  nameWithType: NewItemPlaceholderPosition
  fullName: System.ComponentModel.NewItemPlaceholderPosition
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PageIndex*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.PageIndex
  name: PageIndex
  nameWithType: PagedCollectionView.PageIndex
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PageIndex
- uid: System.ComponentModel.IPagedCollectionView.PageIndex
  commentId: P:System.ComponentModel.IPagedCollectionView.PageIndex
  parent: System.ComponentModel.IPagedCollectionView
  name: PageIndex
  nameWithType: IPagedCollectionView.PageIndex
  fullName: System.ComponentModel.IPagedCollectionView.PageIndex
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PageSize*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.PageSize
  name: PageSize
  nameWithType: PagedCollectionView.PageSize
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PageSize
- uid: System.ComponentModel.IPagedCollectionView.PageSize
  commentId: P:System.ComponentModel.IPagedCollectionView.PageSize
  parent: System.ComponentModel.IPagedCollectionView
  name: PageSize
  nameWithType: IPagedCollectionView.PageSize
  fullName: System.ComponentModel.IPagedCollectionView.PageSize
- uid: System.ComponentModel.SortDescription
  commentId: T:System.ComponentModel.SortDescription
  parent: System.ComponentModel
  name: SortDescription
  nameWithType: SortDescription
  fullName: System.ComponentModel.SortDescription
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  commentId: P:Windows.UI.Xaml.Data.PagedCollectionView.CanSort
  isExternal: true
- uid: Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions
  name: SortDescriptions
  nameWithType: PagedCollectionView.SortDescriptions
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.SortDescriptions
- uid: System.ComponentModel.ICollectionView.SortDescriptions
  commentId: P:System.ComponentModel.ICollectionView.SortDescriptions
  parent: System.ComponentModel.ICollectionView
  name: SortDescriptions
  nameWithType: ICollectionView.SortDescriptions
  fullName: System.ComponentModel.ICollectionView.SortDescriptions
- uid: System.ComponentModel.SortDescriptionCollection
  commentId: T:System.ComponentModel.SortDescriptionCollection
  parent: System.ComponentModel
  name: SortDescriptionCollection
  nameWithType: SortDescriptionCollection
  fullName: System.ComponentModel.SortDescriptionCollection
- uid: Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection
  name: SourceCollection
  nameWithType: PagedCollectionView.SourceCollection
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.SourceCollection
- uid: System.ComponentModel.ICollectionView.SourceCollection
  commentId: P:System.ComponentModel.ICollectionView.SourceCollection
  parent: System.ComponentModel.ICollectionView
  name: SourceCollection
  nameWithType: ICollectionView.SourceCollection
  fullName: System.ComponentModel.ICollectionView.SourceCollection
- uid: Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount
  name: TotalItemCount
  nameWithType: PagedCollectionView.TotalItemCount
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.TotalItemCount
- uid: System.ComponentModel.IPagedCollectionView.TotalItemCount
  commentId: P:System.ComponentModel.IPagedCollectionView.TotalItemCount
  parent: System.ComponentModel.IPagedCollectionView
  name: TotalItemCount
  nameWithType: IPagedCollectionView.TotalItemCount
  fullName: System.ComponentModel.IPagedCollectionView.TotalItemCount
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Item*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Item
  name: Item
  nameWithType: PagedCollectionView.Item
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Item
- uid: Windows.UI.Xaml.Data.PagedCollectionView.AddNew*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.AddNew
  name: AddNew
  nameWithType: PagedCollectionView.AddNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.AddNew
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  commentId: M:System.ComponentModel.IEditableCollectionView.AddNew
  parent: System.ComponentModel.IEditableCollectionView
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.AddNew
    name: AddNew
    nameWithType: IEditableCollectionView.AddNew
    fullName: System.ComponentModel.IEditableCollectionView.AddNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.AddNew
    name: AddNew
    nameWithType: IEditableCollectionView.AddNew
    fullName: System.ComponentModel.IEditableCollectionView.AddNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)
  commentId: M:Windows.UI.Xaml.Data.PagedCollectionView.EditItem(System.Object)
  isExternal: true
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit
  name: CancelEdit
  nameWithType: PagedCollectionView.CancelEdit
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  commentId: M:System.ComponentModel.IEditableCollectionView.CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.CancelEdit
    name: CancelEdit
    nameWithType: IEditableCollectionView.CancelEdit
    fullName: System.ComponentModel.IEditableCollectionView.CancelEdit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.CancelEdit
    name: CancelEdit
    nameWithType: IEditableCollectionView.CancelEdit
    fullName: System.ComponentModel.IEditableCollectionView.CancelEdit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CancelNew*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CancelNew
  name: CancelNew
  nameWithType: PagedCollectionView.CancelNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CancelNew
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  commentId: M:System.ComponentModel.IEditableCollectionView.CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.CancelNew
    name: CancelNew
    nameWithType: IEditableCollectionView.CancelNew
    fullName: System.ComponentModel.IEditableCollectionView.CancelNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.CancelNew
    name: CancelNew
    nameWithType: IEditableCollectionView.CancelNew
    fullName: System.ComponentModel.IEditableCollectionView.CancelNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit
  name: CommitEdit
  nameWithType: PagedCollectionView.CommitEdit
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CommitEdit
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  commentId: M:System.ComponentModel.IEditableCollectionView.CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.CommitEdit
    name: CommitEdit
    nameWithType: IEditableCollectionView.CommitEdit
    fullName: System.ComponentModel.IEditableCollectionView.CommitEdit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.CommitEdit
    name: CommitEdit
    nameWithType: IEditableCollectionView.CommitEdit
    fullName: System.ComponentModel.IEditableCollectionView.CommitEdit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.CommitNew*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.CommitNew
  name: CommitNew
  nameWithType: PagedCollectionView.CommitNew
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.CommitNew
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  commentId: M:System.ComponentModel.IEditableCollectionView.CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.CommitNew
    name: CommitNew
    nameWithType: IEditableCollectionView.CommitNew
    fullName: System.ComponentModel.IEditableCollectionView.CommitNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.CommitNew
    name: CommitNew
    nameWithType: IEditableCollectionView.CommitNew
    fullName: System.ComponentModel.IEditableCollectionView.CommitNew
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Contains*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Contains
  name: Contains
  nameWithType: PagedCollectionView.Contains
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Contains
- uid: System.ComponentModel.ICollectionView.Contains(System.Object)
  commentId: M:System.ComponentModel.ICollectionView.Contains(System.Object)
  parent: System.ComponentModel.ICollectionView
  isExternal: true
  name: Contains(Object)
  nameWithType: ICollectionView.Contains(Object)
  fullName: System.ComponentModel.ICollectionView.Contains(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.Contains(System.Object)
    name: Contains
    nameWithType: ICollectionView.Contains
    fullName: System.ComponentModel.ICollectionView.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.Contains(System.Object)
    name: Contains
    nameWithType: ICollectionView.Contains
    fullName: System.ComponentModel.ICollectionView.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh
  name: DeferRefresh
  nameWithType: PagedCollectionView.DeferRefresh
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.DeferRefresh
- uid: System.ComponentModel.ICollectionView.DeferRefresh
  commentId: M:System.ComponentModel.ICollectionView.DeferRefresh
  parent: System.ComponentModel.ICollectionView
  name: DeferRefresh()
  nameWithType: ICollectionView.DeferRefresh()
  fullName: System.ComponentModel.ICollectionView.DeferRefresh()
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.DeferRefresh
    name: DeferRefresh
    nameWithType: ICollectionView.DeferRefresh
    fullName: System.ComponentModel.ICollectionView.DeferRefresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.DeferRefresh
    name: DeferRefresh
    nameWithType: ICollectionView.DeferRefresh
    fullName: System.ComponentModel.ICollectionView.DeferRefresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Windows.UI.Xaml.Data.PagedCollectionView.EditItem*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.EditItem
  name: EditItem
  nameWithType: PagedCollectionView.EditItem
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.EditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  commentId: M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: true
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
    name: EditItem
    nameWithType: IEditableCollectionView.EditItem
    fullName: System.ComponentModel.IEditableCollectionView.EditItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
    name: EditItem
    nameWithType: IEditableCollectionView.EditItem
    fullName: System.ComponentModel.IEditableCollectionView.EditItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator
  name: GetEnumerator
  nameWithType: PagedCollectionView.GetEnumerator
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.GetEnumerator
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Windows.UI.Xaml.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: PagedCollectionView.IEnumerable.GetEnumerator
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: PagedCollectionView.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt
  name: GetItemAt
  nameWithType: PagedCollectionView.GetItemAt
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.GetItemAt
- uid: Windows.UI.Xaml.Data.PagedCollectionView.IndexOf*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.IndexOf
  name: IndexOf
  nameWithType: PagedCollectionView.IndexOf
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.IndexOf
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo
  name: MoveCurrentTo
  nameWithType: PagedCollectionView.MoveCurrentTo
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentTo
- uid: System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)
  commentId: M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)
  parent: System.ComponentModel.ICollectionView
  isExternal: true
  name: MoveCurrentTo(Object)
  nameWithType: ICollectionView.MoveCurrentTo(Object)
  fullName: System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)
    name: MoveCurrentTo
    nameWithType: ICollectionView.MoveCurrentTo
    fullName: System.ComponentModel.ICollectionView.MoveCurrentTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)
    name: MoveCurrentTo
    nameWithType: ICollectionView.MoveCurrentTo
    fullName: System.ComponentModel.ICollectionView.MoveCurrentTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst
  name: MoveCurrentToFirst
  nameWithType: PagedCollectionView.MoveCurrentToFirst
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToFirst
- uid: System.ComponentModel.ICollectionView.MoveCurrentToFirst
  commentId: M:System.ComponentModel.ICollectionView.MoveCurrentToFirst
  parent: System.ComponentModel.ICollectionView
  name: MoveCurrentToFirst()
  nameWithType: ICollectionView.MoveCurrentToFirst()
  fullName: System.ComponentModel.ICollectionView.MoveCurrentToFirst()
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToFirst
    name: MoveCurrentToFirst
    nameWithType: ICollectionView.MoveCurrentToFirst
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToFirst
    name: MoveCurrentToFirst
    nameWithType: ICollectionView.MoveCurrentToFirst
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast
  name: MoveCurrentToLast
  nameWithType: PagedCollectionView.MoveCurrentToLast
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToLast
- uid: System.ComponentModel.ICollectionView.MoveCurrentToLast
  commentId: M:System.ComponentModel.ICollectionView.MoveCurrentToLast
  parent: System.ComponentModel.ICollectionView
  name: MoveCurrentToLast()
  nameWithType: ICollectionView.MoveCurrentToLast()
  fullName: System.ComponentModel.ICollectionView.MoveCurrentToLast()
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToLast
    name: MoveCurrentToLast
    nameWithType: ICollectionView.MoveCurrentToLast
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToLast
    name: MoveCurrentToLast
    nameWithType: ICollectionView.MoveCurrentToLast
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext
  name: MoveCurrentToNext
  nameWithType: PagedCollectionView.MoveCurrentToNext
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToNext
- uid: System.ComponentModel.ICollectionView.MoveCurrentToNext
  commentId: M:System.ComponentModel.ICollectionView.MoveCurrentToNext
  parent: System.ComponentModel.ICollectionView
  name: MoveCurrentToNext()
  nameWithType: ICollectionView.MoveCurrentToNext()
  fullName: System.ComponentModel.ICollectionView.MoveCurrentToNext()
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToNext
    name: MoveCurrentToNext
    nameWithType: ICollectionView.MoveCurrentToNext
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToNext
    name: MoveCurrentToNext
    nameWithType: ICollectionView.MoveCurrentToNext
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition
  name: MoveCurrentToPosition
  nameWithType: PagedCollectionView.MoveCurrentToPosition
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPosition
- uid: System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)
  commentId: M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)
  parent: System.ComponentModel.ICollectionView
  isExternal: true
  name: MoveCurrentToPosition(Int32)
  nameWithType: ICollectionView.MoveCurrentToPosition(Int32)
  fullName: System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)
    name: MoveCurrentToPosition
    nameWithType: ICollectionView.MoveCurrentToPosition
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)
    name: MoveCurrentToPosition
    nameWithType: ICollectionView.MoveCurrentToPosition
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious
  name: MoveCurrentToPrevious
  nameWithType: PagedCollectionView.MoveCurrentToPrevious
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveCurrentToPrevious
- uid: System.ComponentModel.ICollectionView.MoveCurrentToPrevious
  commentId: M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious
  parent: System.ComponentModel.ICollectionView
  name: MoveCurrentToPrevious()
  nameWithType: ICollectionView.MoveCurrentToPrevious()
  fullName: System.ComponentModel.ICollectionView.MoveCurrentToPrevious()
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToPrevious
    name: MoveCurrentToPrevious
    nameWithType: ICollectionView.MoveCurrentToPrevious
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToPrevious
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.MoveCurrentToPrevious
    name: MoveCurrentToPrevious
    nameWithType: ICollectionView.MoveCurrentToPrevious
    fullName: System.ComponentModel.ICollectionView.MoveCurrentToPrevious
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage
  name: MoveToFirstPage
  nameWithType: PagedCollectionView.MoveToFirstPage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToFirstPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  parent: System.ComponentModel.IPagedCollectionView
  name: MoveToFirstPage()
  nameWithType: IPagedCollectionView.MoveToFirstPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToFirstPage()
  spec.csharp:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
    name: MoveToFirstPage
    nameWithType: IPagedCollectionView.MoveToFirstPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
    name: MoveToFirstPage
    nameWithType: IPagedCollectionView.MoveToFirstPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage
  name: MoveToLastPage
  nameWithType: PagedCollectionView.MoveToLastPage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToLastPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToLastPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToLastPage
  parent: System.ComponentModel.IPagedCollectionView
  name: MoveToLastPage()
  nameWithType: IPagedCollectionView.MoveToLastPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToLastPage()
  spec.csharp:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToLastPage
    name: MoveToLastPage
    nameWithType: IPagedCollectionView.MoveToLastPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToLastPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToLastPage
    name: MoveToLastPage
    nameWithType: IPagedCollectionView.MoveToLastPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToLastPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage
  name: MoveToNextPage
  nameWithType: PagedCollectionView.MoveToNextPage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToNextPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToNextPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToNextPage
  parent: System.ComponentModel.IPagedCollectionView
  name: MoveToNextPage()
  nameWithType: IPagedCollectionView.MoveToNextPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToNextPage()
  spec.csharp:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToNextPage
    name: MoveToNextPage
    nameWithType: IPagedCollectionView.MoveToNextPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToNextPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToNextPage
    name: MoveToNextPage
    nameWithType: IPagedCollectionView.MoveToNextPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToNextPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage
  name: MoveToPage
  nameWithType: PagedCollectionView.MoveToPage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  parent: System.ComponentModel.IPagedCollectionView
  isExternal: true
  name: MoveToPage(Int32)
  nameWithType: IPagedCollectionView.MoveToPage(Int32)
  fullName: System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  spec.csharp:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
    name: MoveToPage
    nameWithType: IPagedCollectionView.MoveToPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
    name: MoveToPage
    nameWithType: IPagedCollectionView.MoveToPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage
  name: MoveToPreviousPage
  nameWithType: PagedCollectionView.MoveToPreviousPage
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.MoveToPreviousPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  parent: System.ComponentModel.IPagedCollectionView
  name: MoveToPreviousPage()
  nameWithType: IPagedCollectionView.MoveToPreviousPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage()
  spec.csharp:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
    name: MoveToPreviousPage
    nameWithType: IPagedCollectionView.MoveToPreviousPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
    name: MoveToPreviousPage
    nameWithType: IPagedCollectionView.MoveToPreviousPage
    fullName: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter
  name: PassesFilter
  nameWithType: PagedCollectionView.PassesFilter
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.PassesFilter
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Refresh*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Refresh
  name: Refresh
  nameWithType: PagedCollectionView.Refresh
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Refresh
- uid: System.ComponentModel.ICollectionView.Refresh
  commentId: M:System.ComponentModel.ICollectionView.Refresh
  parent: System.ComponentModel.ICollectionView
  name: Refresh()
  nameWithType: ICollectionView.Refresh()
  fullName: System.ComponentModel.ICollectionView.Refresh()
  spec.csharp:
  - uid: System.ComponentModel.ICollectionView.Refresh
    name: Refresh
    nameWithType: ICollectionView.Refresh
    fullName: System.ComponentModel.ICollectionView.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICollectionView.Refresh
    name: Refresh
    nameWithType: ICollectionView.Refresh
    fullName: System.ComponentModel.ICollectionView.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.Remove*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.Remove
  name: Remove
  nameWithType: PagedCollectionView.Remove
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.Remove
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  commentId: M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: true
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
    name: Remove
    nameWithType: IEditableCollectionView.Remove
    fullName: System.ComponentModel.IEditableCollectionView.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
    name: Remove
    nameWithType: IEditableCollectionView.Remove
    fullName: System.ComponentModel.IEditableCollectionView.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt*
  commentId: Overload:Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt
  name: RemoveAt
  nameWithType: PagedCollectionView.RemoveAt
  fullName: Windows.UI.Xaml.Data.PagedCollectionView.RemoveAt
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  commentId: M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IEditableCollectionView.RemoveAt
    fullName: System.ComponentModel.IEditableCollectionView.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IEditableCollectionView.RemoveAt
    fullName: System.ComponentModel.IEditableCollectionView.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
