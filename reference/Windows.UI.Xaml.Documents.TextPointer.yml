### YamlMime:ManagedReference
items:
- uid: Windows.UI.Xaml.Documents.TextPointer
  commentId: T:Windows.UI.Xaml.Documents.TextPointer
  id: TextPointer
  parent: Windows.UI.Xaml.Documents
  children:
  - Windows.UI.Xaml.Documents.TextPointer.CompareTo(Windows.UI.Xaml.Documents.TextPointer)
  - Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect(Windows.UI.Xaml.Documents.LogicalDirection)
  - Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition(Windows.UI.Xaml.Documents.LogicalDirection)
  - Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset(System.Int32,Windows.UI.Xaml.Documents.LogicalDirection)
  - Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition
  - Windows.UI.Xaml.Documents.TextPointer.LogicalDirection
  - Windows.UI.Xaml.Documents.TextPointer.Parent
  - Windows.UI.Xaml.Documents.TextPointer.VisualParent
  langs:
  - csharp
  - vb
  name: TextPointer
  nameWithType: TextPointer
  fullName: Windows.UI.Xaml.Documents.TextPointer
  type: Class
  source:
    id: TextPointer
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 13
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public class TextPointer
    content.vb: >-
      <NotImplemented>

      Public Class TextPointer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition
  commentId: P:Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition
  id: IsAtInsertionPosition
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: IsAtInsertionPosition
  nameWithType: TextPointer.IsAtInsertionPosition
  fullName: Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition
  type: Property
  source:
    id: IsAtInsertionPosition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 22
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public bool IsAtInsertionPosition { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property IsAtInsertionPosition As Boolean
  overload: Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Documents.TextPointer.LogicalDirection
  commentId: P:Windows.UI.Xaml.Documents.TextPointer.LogicalDirection
  id: LogicalDirection
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: LogicalDirection
  nameWithType: TextPointer.LogicalDirection
  fullName: Windows.UI.Xaml.Documents.TextPointer.LogicalDirection
  type: Property
  source:
    id: LogicalDirection
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 32
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public LogicalDirection LogicalDirection { get; }
    parameters: []
    return:
      type: Windows.UI.Xaml.Documents.LogicalDirection
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property LogicalDirection As LogicalDirection
  overload: Windows.UI.Xaml.Documents.TextPointer.LogicalDirection*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Documents.TextPointer.Parent
  commentId: P:Windows.UI.Xaml.Documents.TextPointer.Parent
  id: Parent
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: TextPointer.Parent
  fullName: Windows.UI.Xaml.Documents.TextPointer.Parent
  type: Property
  source:
    id: Parent
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 41
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public DependencyObject Parent { get; }
    parameters: []
    return:
      type: Windows.UI.Xaml.DependencyObject
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property Parent As DependencyObject
  overload: Windows.UI.Xaml.Documents.TextPointer.Parent*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Documents.TextPointer.VisualParent
  commentId: P:Windows.UI.Xaml.Documents.TextPointer.VisualParent
  id: VisualParent
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: VisualParent
  nameWithType: TextPointer.VisualParent
  fullName: Windows.UI.Xaml.Documents.TextPointer.VisualParent
  type: Property
  source:
    id: VisualParent
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 49
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public FrameworkElement VisualParent { get; }
    parameters: []
    return:
      type: Windows.UI.Xaml.FrameworkElement
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property VisualParent As FrameworkElement
  overload: Windows.UI.Xaml.Documents.TextPointer.VisualParent*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Documents.TextPointer.CompareTo(Windows.UI.Xaml.Documents.TextPointer)
  commentId: M:Windows.UI.Xaml.Documents.TextPointer.CompareTo(Windows.UI.Xaml.Documents.TextPointer)
  id: CompareTo(Windows.UI.Xaml.Documents.TextPointer)
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: CompareTo(TextPointer)
  nameWithType: TextPointer.CompareTo(TextPointer)
  fullName: Windows.UI.Xaml.Documents.TextPointer.CompareTo(Windows.UI.Xaml.Documents.TextPointer)
  type: Method
  source:
    id: CompareTo
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 71
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public int CompareTo(TextPointer position)
    parameters:
    - id: position
      type: Windows.UI.Xaml.Documents.TextPointer
    return:
      type: System.Int32
    content.vb: >-
      <NotImplemented>

      Public Function CompareTo(position As TextPointer) As Integer
  overload: Windows.UI.Xaml.Documents.TextPointer.CompareTo*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect(Windows.UI.Xaml.Documents.LogicalDirection)
  commentId: M:Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect(Windows.UI.Xaml.Documents.LogicalDirection)
  id: GetCharacterRect(Windows.UI.Xaml.Documents.LogicalDirection)
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: GetCharacterRect(LogicalDirection)
  nameWithType: TextPointer.GetCharacterRect(LogicalDirection)
  fullName: Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect(Windows.UI.Xaml.Documents.LogicalDirection)
  type: Method
  source:
    id: GetCharacterRect
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 91
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public Rect GetCharacterRect(LogicalDirection direction)
    parameters:
    - id: direction
      type: Windows.UI.Xaml.Documents.LogicalDirection
    return:
      type: Windows.Foundation.Rect
    content.vb: >-
      <NotImplemented>

      Public Function GetCharacterRect(direction As LogicalDirection) As Rect
  overload: Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition(Windows.UI.Xaml.Documents.LogicalDirection)
  commentId: M:Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition(Windows.UI.Xaml.Documents.LogicalDirection)
  id: GetNextInsertionPosition(Windows.UI.Xaml.Documents.LogicalDirection)
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: GetNextInsertionPosition(LogicalDirection)
  nameWithType: TextPointer.GetNextInsertionPosition(LogicalDirection)
  fullName: Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition(Windows.UI.Xaml.Documents.LogicalDirection)
  type: Method
  source:
    id: GetNextInsertionPosition
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 110
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public TextPointer GetNextInsertionPosition(LogicalDirection direction)
    parameters:
    - id: direction
      type: Windows.UI.Xaml.Documents.LogicalDirection
    return:
      type: Windows.UI.Xaml.Documents.TextPointer
    content.vb: >-
      <NotImplemented>

      Public Function GetNextInsertionPosition(direction As LogicalDirection) As TextPointer
  overload: Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset(System.Int32,Windows.UI.Xaml.Documents.LogicalDirection)
  commentId: M:Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset(System.Int32,Windows.UI.Xaml.Documents.LogicalDirection)
  id: GetPositionAtOffset(System.Int32,Windows.UI.Xaml.Documents.LogicalDirection)
  parent: Windows.UI.Xaml.Documents.TextPointer
  langs:
  - csharp
  - vb
  name: GetPositionAtOffset(Int32, LogicalDirection)
  nameWithType: TextPointer.GetPositionAtOffset(Int32, LogicalDirection)
  fullName: Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset(System.Int32, Windows.UI.Xaml.Documents.LogicalDirection)
  type: Method
  source:
    id: GetPositionAtOffset
    path: C:\Users\ashot\Desktop\Projects\GitHub-OpenSilver\src\Runtime\Runtime\System.Windows.Documents\WORKINPROGRESS\TextPointer.cs
    startLine: 136
  assemblies:
  - Runtime.OpenSilver
  namespace: Windows.UI.Xaml.Documents
  syntax:
    content: >-
      [NotImplemented]

      public TextPointer GetPositionAtOffset(int offset, LogicalDirection direction)
    parameters:
    - id: offset
      type: System.Int32
    - id: direction
      type: Windows.UI.Xaml.Documents.LogicalDirection
    return:
      type: Windows.UI.Xaml.Documents.TextPointer
    content.vb: >-
      <NotImplemented>

      Public Function GetPositionAtOffset(offset As Integer, direction As LogicalDirection) As TextPointer
  overload: Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Windows.UI.Xaml.Documents
  commentId: N:Windows.UI.Xaml.Documents
  name: Windows.UI.Xaml.Documents
  nameWithType: Windows.UI.Xaml.Documents
  fullName: Windows.UI.Xaml.Documents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition
  name: IsAtInsertionPosition
  nameWithType: TextPointer.IsAtInsertionPosition
  fullName: Windows.UI.Xaml.Documents.TextPointer.IsAtInsertionPosition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Windows.UI.Xaml.Documents.TextPointer.LogicalDirection*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.LogicalDirection
  name: LogicalDirection
  nameWithType: TextPointer.LogicalDirection
  fullName: Windows.UI.Xaml.Documents.TextPointer.LogicalDirection
- uid: Windows.UI.Xaml.Documents.LogicalDirection
  commentId: T:Windows.UI.Xaml.Documents.LogicalDirection
  parent: Windows.UI.Xaml.Documents
  name: LogicalDirection
  nameWithType: LogicalDirection
  fullName: Windows.UI.Xaml.Documents.LogicalDirection
- uid: Windows.UI.Xaml.Documents.TextPointer.Parent*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.Parent
  name: Parent
  nameWithType: TextPointer.Parent
  fullName: Windows.UI.Xaml.Documents.TextPointer.Parent
- uid: Windows.UI.Xaml.DependencyObject
  commentId: T:Windows.UI.Xaml.DependencyObject
  parent: Windows.UI.Xaml
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: Windows.UI.Xaml.DependencyObject
- uid: Windows.UI.Xaml
  commentId: N:Windows.UI.Xaml
  name: Windows.UI.Xaml
  nameWithType: Windows.UI.Xaml
  fullName: Windows.UI.Xaml
- uid: Windows.UI.Xaml.Documents.TextPointer.VisualParent*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.VisualParent
  name: VisualParent
  nameWithType: TextPointer.VisualParent
  fullName: Windows.UI.Xaml.Documents.TextPointer.VisualParent
- uid: Windows.UI.Xaml.FrameworkElement
  commentId: T:Windows.UI.Xaml.FrameworkElement
  parent: Windows.UI.Xaml
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: Windows.UI.Xaml.FrameworkElement
- uid: Windows.UI.Xaml.Documents.TextPointer.CompareTo*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.CompareTo
  name: CompareTo
  nameWithType: TextPointer.CompareTo
  fullName: Windows.UI.Xaml.Documents.TextPointer.CompareTo
- uid: Windows.UI.Xaml.Documents.TextPointer
  commentId: T:Windows.UI.Xaml.Documents.TextPointer
  parent: Windows.UI.Xaml.Documents
  name: TextPointer
  nameWithType: TextPointer
  fullName: Windows.UI.Xaml.Documents.TextPointer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect
  name: GetCharacterRect
  nameWithType: TextPointer.GetCharacterRect
  fullName: Windows.UI.Xaml.Documents.TextPointer.GetCharacterRect
- uid: Windows.Foundation.Rect
  commentId: T:Windows.Foundation.Rect
  parent: Windows.Foundation
  name: Rect
  nameWithType: Rect
  fullName: Windows.Foundation.Rect
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
- uid: Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition
  name: GetNextInsertionPosition
  nameWithType: TextPointer.GetNextInsertionPosition
  fullName: Windows.UI.Xaml.Documents.TextPointer.GetNextInsertionPosition
- uid: Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset*
  commentId: Overload:Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset
  name: GetPositionAtOffset
  nameWithType: TextPointer.GetPositionAtOffset
  fullName: Windows.UI.Xaml.Documents.TextPointer.GetPositionAtOffset
